{"abi":[{"type":"function","name":"createPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"farmingAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolByPair","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolDeployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setBaseFeeConfiguration","inputs":[{"name":"alpha1","type":"uint16","internalType":"uint16"},{"name":"alpha2","type":"uint16","internalType":"uint16"},{"name":"beta1","type":"uint32","internalType":"uint32"},{"name":"beta2","type":"uint32","internalType":"uint32"},{"name":"gamma1","type":"uint16","internalType":"uint16"},{"name":"gamma2","type":"uint16","internalType":"uint16"},{"name":"volumeBeta","type":"uint32","internalType":"uint32"},{"name":"volumeGamma","type":"uint16","internalType":"uint16"},{"name":"baseFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFarmingAddress","inputs":[{"name":"_farmingAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setOwner","inputs":[{"name":"_owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultAddress","inputs":[{"name":"_vaultAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vaultAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"FarmingAddress","inputs":[{"name":"newFarmingAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeeConfiguration","inputs":[{"name":"alpha1","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"alpha2","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"beta1","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"beta2","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"gamma1","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"gamma2","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"volumeBeta","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"volumeGamma","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"baseFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"Owner","inputs":[{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Pool","inputs":[{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"VaultAddress","inputs":[{"name":"newVaultAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createPool(address,address)":"e3433615","farmingAddress()":"8a2ade58","owner()":"8da5cb5b","poolByPair(address,address)":"d9a641e1","poolDeployer()":"3119049a","setBaseFeeConfiguration(uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16)":"5d6d7e93","setFarmingAddress(address)":"b001f618","setOwner(address)":"13af4035","setVaultAddress(address)":"85535cc5","vaultAddress()":"430bf08a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFarmingAddress\",\"type\":\"address\"}],\"name\":\"FarmingAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"alpha1\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"alpha2\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"beta1\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"beta2\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"gamma1\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"gamma2\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"volumeBeta\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"volumeGamma\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"baseFee\",\"type\":\"uint16\"}],\"name\":\"FeeConfiguration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"Owner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"Pool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVaultAddress\",\"type\":\"address\"}],\"name\":\"VaultAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"poolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"alpha1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"alpha2\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"beta1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"beta2\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"gamma1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"gamma2\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"volumeBeta\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"volumeGamma\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"baseFee\",\"type\":\"uint16\"}],\"name\":\"setBaseFeeConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmingAddress\",\"type\":\"address\"}],\"name\":\"setFarmingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"name\":\"setVaultAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"events\":{\"FarmingAddress(address)\":{\"params\":{\"newFarmingAddress\":\"The farming address after the address was changed\"}},\"Owner(address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\"}},\"Pool(address,address,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"VaultAddress(address)\":{\"params\":{\"newVaultAddress\":\"The vault address after the address was changed\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved  from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments  are invalid.\",\"params\":{\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"farmingAddress()\":{\"details\":\"Is retrieved from the pools to restrict calling certain functions not by a tokenomics contract\",\"returns\":{\"_0\":\"The tokenomics contract address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"poolByPair(address,address)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"poolDeployer()\":{\"returns\":{\"_0\":\"The address of the poolDeployer\"}},\"setBaseFeeConfiguration(uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16)\":{\"details\":\"changes coefficients for sigmoids: \\u03b1 / (1 + e^( (\\u03b2-x) / \\u03b3)) alpha1 + alpha2 + baseFee (max possible fee) must be <= type(uint16).max gammas must be > 0\",\"params\":{\"alpha1\":\"max value of the first sigmoid\",\"alpha2\":\"max value of the second sigmoid\",\"baseFee\":\"minimum possible fee\",\"beta1\":\"shift along the x-axis for the first sigmoid\",\"beta2\":\"shift along the x-axis for the second sigmoid\",\"gamma1\":\"horizontal stretch factor for the first sigmoid\",\"gamma2\":\"horizontal stretch factor for the second sigmoid\",\"volumeBeta\":\"shift along the x-axis for the outer volume-sigmoid\",\"volumeGamma\":\"horizontal stretch factor the outer volume-sigmoid\"}},\"setFarmingAddress(address)\":{\"details\":\"updates tokenomics address on the factory\",\"params\":{\"_farmingAddress\":\"The new tokenomics contract address\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}},\"setVaultAddress(address)\":{\"details\":\"updates vault address on the factory\",\"params\":{\"_vaultAddress\":\"The new vault contract address\"}}},\"title\":\"The interface for the Algebra Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FarmingAddress(address)\":{\"notice\":\"Emitted when the farming address is changed\"},\"Owner(address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"Pool(address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"VaultAddress(address)\":{\"notice\":\"Emitted when the vault address is changed\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"poolByPair(address,address)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"poolDeployer()\":{\"notice\":\"Returns the current poolDeployerAddress\"},\"setBaseFeeConfiguration(uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16)\":{\"notice\":\"Changes initial fee configuration for new pools\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/algebra/IAlgebraFactory.sol\":\"IAlgebraFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flywheel-v2/=lib/flywheel-v2/src/\",\":flywheel/=lib/flywheel-v2/src/\",\":forge-std/=lib/forge-std/src/\",\":fuse-flywheel/=lib/fuse-flywheel/src/\",\":libcompound/=lib/fuse-flywheel/lib/libcompound/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":ops/=lib/ops/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"contracts/external/algebra/IAlgebraFactory.sol\":{\"keccak256\":\"0x9707260a354bd9673d75672c7e4361c8e0f63723470b49d5798529a971dad492\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed5e6ceaf5c1c08eb435797237fd5129b88ce9c94edab3f24d48c7c7f6877725\",\"dweb:/ipfs/QmajTPFN9taY2wHKzoKsqCQRSEGAjNKWNtzLU2zGvztQNg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.10+commit.fc410830"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"newFarmingAddress","type":"address","indexed":true}],"type":"event","name":"FarmingAddress","anonymous":false},{"inputs":[{"internalType":"uint16","name":"alpha1","type":"uint16","indexed":false},{"internalType":"uint16","name":"alpha2","type":"uint16","indexed":false},{"internalType":"uint32","name":"beta1","type":"uint32","indexed":false},{"internalType":"uint32","name":"beta2","type":"uint32","indexed":false},{"internalType":"uint16","name":"gamma1","type":"uint16","indexed":false},{"internalType":"uint16","name":"gamma2","type":"uint16","indexed":false},{"internalType":"uint32","name":"volumeBeta","type":"uint32","indexed":false},{"internalType":"uint16","name":"volumeGamma","type":"uint16","indexed":false},{"internalType":"uint16","name":"baseFee","type":"uint16","indexed":false}],"type":"event","name":"FeeConfiguration","anonymous":false},{"inputs":[{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"Owner","anonymous":false},{"inputs":[{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"Pool","anonymous":false},{"inputs":[{"internalType":"address","name":"newVaultAddress","type":"address","indexed":true}],"type":"event","name":"VaultAddress","anonymous":false},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"farmingAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"view","type":"function","name":"poolByPair","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolDeployer","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint16","name":"alpha1","type":"uint16"},{"internalType":"uint16","name":"alpha2","type":"uint16"},{"internalType":"uint32","name":"beta1","type":"uint32"},{"internalType":"uint32","name":"beta2","type":"uint32"},{"internalType":"uint16","name":"gamma1","type":"uint16"},{"internalType":"uint16","name":"gamma2","type":"uint16"},{"internalType":"uint32","name":"volumeBeta","type":"uint32"},{"internalType":"uint16","name":"volumeGamma","type":"uint16"},{"internalType":"uint16","name":"baseFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setBaseFeeConfiguration"},{"inputs":[{"internalType":"address","name":"_farmingAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFarmingAddress"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setOwner"},{"inputs":[{"internalType":"address","name":"_vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setVaultAddress"},{"inputs":[],"stateMutability":"view","type":"function","name":"vaultAddress","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createPool(address,address)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved  from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments  are invalid.","params":{"tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"farmingAddress()":{"details":"Is retrieved from the pools to restrict calling certain functions not by a tokenomics contract","returns":{"_0":"The tokenomics contract address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"poolByPair(address,address)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"poolDeployer()":{"returns":{"_0":"The address of the poolDeployer"}},"setBaseFeeConfiguration(uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16)":{"details":"changes coefficients for sigmoids: α / (1 + e^( (β-x) / γ)) alpha1 + alpha2 + baseFee (max possible fee) must be <= type(uint16).max gammas must be > 0","params":{"alpha1":"max value of the first sigmoid","alpha2":"max value of the second sigmoid","baseFee":"minimum possible fee","beta1":"shift along the x-axis for the first sigmoid","beta2":"shift along the x-axis for the second sigmoid","gamma1":"horizontal stretch factor for the first sigmoid","gamma2":"horizontal stretch factor for the second sigmoid","volumeBeta":"shift along the x-axis for the outer volume-sigmoid","volumeGamma":"horizontal stretch factor the outer volume-sigmoid"}},"setFarmingAddress(address)":{"details":"updates tokenomics address on the factory","params":{"_farmingAddress":"The new tokenomics contract address"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}},"setVaultAddress(address)":{"details":"updates vault address on the factory","params":{"_vaultAddress":"The new vault contract address"}}},"version":1},"userdoc":{"kind":"user","methods":{"createPool(address,address)":{"notice":"Creates a pool for the given two tokens and fee"},"owner()":{"notice":"Returns the current owner of the factory"},"poolByPair(address,address)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"poolDeployer()":{"notice":"Returns the current poolDeployerAddress"},"setBaseFeeConfiguration(uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16)":{"notice":"Changes initial fee configuration for new pools"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/forge-std/lib/ds-test/src/","flywheel-v2/=lib/flywheel-v2/src/","flywheel/=lib/flywheel-v2/src/","forge-std/=lib/forge-std/src/","fuse-flywheel/=lib/fuse-flywheel/src/","libcompound/=lib/fuse-flywheel/lib/libcompound/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","ops/=lib/ops/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/","solidity-bytes-utils/=lib/solidity-bytes-utils/","solmate/=lib/solmate/src/","weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/external/algebra/IAlgebraFactory.sol":"IAlgebraFactory"},"evmVersion":"london","libraries":{}},"sources":{"contracts/external/algebra/IAlgebraFactory.sol":{"keccak256":"0x9707260a354bd9673d75672c7e4361c8e0f63723470b49d5798529a971dad492","urls":["bzz-raw://ed5e6ceaf5c1c08eb435797237fd5129b88ce9c94edab3f24d48c7c7f6877725","dweb:/ipfs/QmajTPFN9taY2wHKzoKsqCQRSEGAjNKWNtzLU2zGvztQNg"],"license":"GPL-2.0-or-later"}},"version":1},"id":36}