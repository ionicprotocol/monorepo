{"abi":[{"type":"function","name":"DECIMALS","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getPrice","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"price","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getPriceData","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"tuple","internalType":"struct IUmbrellaFeeds.PriceData","components":[{"name":"data","type":"uint8","internalType":"uint8"},{"name":"heartbeat","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"price","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"getPriceDataByName","inputs":[{"name":"_name","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"tuple","internalType":"struct IUmbrellaFeeds.PriceData","components":[{"name":"data","type":"uint8","internalType":"uint8"},{"name":"heartbeat","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"price","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"getPriceDataRaw","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"tuple","internalType":"struct IUmbrellaFeeds.PriceData","components":[{"name":"data","type":"uint8","internalType":"uint8"},{"name":"heartbeat","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"price","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"getPriceTimestamp","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"price","type":"uint128","internalType":"uint128"},{"name":"timestamp","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getPriceTimestampHeartbeat","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"price","type":"uint128","internalType":"uint128"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"heartbeat","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"priceData","inputs":[{"name":"_key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IUmbrellaFeeds.PriceData","components":[{"name":"data","type":"uint8","internalType":"uint8"},{"name":"heartbeat","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"price","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"prices","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"tuple","internalType":"struct IUmbrellaFeeds.PriceData","components":[{"name":"data","type":"uint8","internalType":"uint8"},{"name":"heartbeat","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint32","internalType":"uint32"},{"name":"price","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DECIMALS()":"2e0f2625","getPrice(bytes32)":"31d98b3f","getPriceData(bytes32)":"43fa6211","getPriceDataByName(string)":"5b38adc7","getPriceDataRaw(bytes32)":"17c5d798","getPriceTimestamp(bytes32)":"8a1194d3","getPriceTimestampHeartbeat(bytes32)":"96594f66","priceData(string)":"14de7a24","prices(bytes32)":"60846bc6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getPriceData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"data\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"internalType\":\"struct IUmbrellaFeeds.PriceData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPriceDataByName\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"data\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"internalType\":\"struct IUmbrellaFeeds.PriceData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getPriceDataRaw\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"data\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"internalType\":\"struct IUmbrellaFeeds.PriceData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getPriceTimestamp\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getPriceTimestampHeartbeat\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"priceData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"data\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"internalType\":\"struct IUmbrellaFeeds.PriceData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"prices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"data\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"heartbeat\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"}],\"internalType\":\"struct IUmbrellaFeeds.PriceData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DECIMALS()\":{\"details\":\"decimals for prices stored in this contract\"},\"getPrice(bytes32)\":{\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"price\":\"price\"}},\"getPriceData(bytes32)\":{\"details\":\"this is main endpoint for reading feeds. In case timestamp is empty (that means there is no data), contract will execute fallback call. Check main contract description for fallback details. If you do not need whole data from `PriceData` struct, you can save some gas by using other view methods that returns just what you need.\",\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"data\":\"full PriceData struct\"}},\"getPriceDataByName(string)\":{\"details\":\"This method should be used only for Layer2 as it is more gas consuming than others views.\",\"params\":{\"_name\":\"string feed name\"},\"returns\":{\"data\":\"PriceData\"}},\"getPriceDataRaw(bytes32)\":{\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"data\":\"full PriceData struct\"}},\"getPriceTimestamp(bytes32)\":{\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"price\":\"price\",\"timestamp\":\"timestamp\"}},\"getPriceTimestampHeartbeat(bytes32)\":{\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"heartbeat\":\"heartbeat\",\"price\":\"price\",\"timestamp\":\"timestamp\"}},\"priceData(string)\":{\"details\":\"this is only for dev debug, please use `getPriceData` directly for lower has cost and fallback functionality\"},\"prices(bytes32)\":{\"params\":{\"_key\":\"hash of feed name\"},\"returns\":{\"data\":\"full PriceData struct\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(bytes32)\":{\"notice\":\"method will revert if data for `_key` not exists.\"},\"getPriceData(bytes32)\":{\"notice\":\"method will revert if data for `_key` not exists.\"},\"getPriceDataByName(string)\":{\"notice\":\"It does not revert on empty data.\"},\"getPriceDataRaw(bytes32)\":{\"notice\":\"same as `getPriceData` but does not revert when no data\"},\"getPriceTimestamp(bytes32)\":{\"notice\":\"method will revert if data for `_key` not exists.\"},\"getPriceTimestampHeartbeat(bytes32)\":{\"notice\":\"method will revert if data for `_key` not exists.\"},\"prices(bytes32)\":{\"notice\":\"reader for mapping\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/umbrella/IUmbrellaFeeds.sol\":\"IUmbrellaFeeds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flywheel-v2/=lib/flywheel-v2/src/\",\":flywheel/=lib/flywheel-v2/src/\",\":forge-std/=lib/forge-std/src/\",\":fuse-flywheel/=lib/fuse-flywheel/src/\",\":libcompound/=lib/fuse-flywheel/lib/libcompound/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":ops/=lib/ops/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"contracts/external/umbrella/IUmbrellaFeeds.sol\":{\"keccak256\":\"0xbe4c5a0bc969eb1fe0111da31a9a62318bd824b48aa47372df0deae4c10ff566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539a1374e0c03bf42658459091b4b4cb113b738e17c1abbbebb00aba49ff0ad8\",\"dweb:/ipfs/QmRjTrgFNWXYztt2s15zWwapAeejMk5exB4LLQ2amUXZCi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.10+commit.fc410830"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getPrice","outputs":[{"internalType":"uint128","name":"price","type":"uint128"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getPriceData","outputs":[{"internalType":"struct IUmbrellaFeeds.PriceData","name":"data","type":"tuple","components":[{"internalType":"uint8","name":"data","type":"uint8"},{"internalType":"uint24","name":"heartbeat","type":"uint24"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint128","name":"price","type":"uint128"}]}]},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"view","type":"function","name":"getPriceDataByName","outputs":[{"internalType":"struct IUmbrellaFeeds.PriceData","name":"data","type":"tuple","components":[{"internalType":"uint8","name":"data","type":"uint8"},{"internalType":"uint24","name":"heartbeat","type":"uint24"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint128","name":"price","type":"uint128"}]}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getPriceDataRaw","outputs":[{"internalType":"struct IUmbrellaFeeds.PriceData","name":"data","type":"tuple","components":[{"internalType":"uint8","name":"data","type":"uint8"},{"internalType":"uint24","name":"heartbeat","type":"uint24"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint128","name":"price","type":"uint128"}]}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getPriceTimestamp","outputs":[{"internalType":"uint128","name":"price","type":"uint128"},{"internalType":"uint32","name":"timestamp","type":"uint32"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getPriceTimestampHeartbeat","outputs":[{"internalType":"uint128","name":"price","type":"uint128"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint24","name":"heartbeat","type":"uint24"}]},{"inputs":[{"internalType":"string","name":"_key","type":"string"}],"stateMutability":"view","type":"function","name":"priceData","outputs":[{"internalType":"struct IUmbrellaFeeds.PriceData","name":"","type":"tuple","components":[{"internalType":"uint8","name":"data","type":"uint8"},{"internalType":"uint24","name":"heartbeat","type":"uint24"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint128","name":"price","type":"uint128"}]}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"prices","outputs":[{"internalType":"struct IUmbrellaFeeds.PriceData","name":"data","type":"tuple","components":[{"internalType":"uint8","name":"data","type":"uint8"},{"internalType":"uint24","name":"heartbeat","type":"uint24"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint128","name":"price","type":"uint128"}]}]}],"devdoc":{"kind":"dev","methods":{"DECIMALS()":{"details":"decimals for prices stored in this contract"},"getPrice(bytes32)":{"params":{"_key":"hash of feed name"},"returns":{"price":"price"}},"getPriceData(bytes32)":{"details":"this is main endpoint for reading feeds. In case timestamp is empty (that means there is no data), contract will execute fallback call. Check main contract description for fallback details. If you do not need whole data from `PriceData` struct, you can save some gas by using other view methods that returns just what you need.","params":{"_key":"hash of feed name"},"returns":{"data":"full PriceData struct"}},"getPriceDataByName(string)":{"details":"This method should be used only for Layer2 as it is more gas consuming than others views.","params":{"_name":"string feed name"},"returns":{"data":"PriceData"}},"getPriceDataRaw(bytes32)":{"params":{"_key":"hash of feed name"},"returns":{"data":"full PriceData struct"}},"getPriceTimestamp(bytes32)":{"params":{"_key":"hash of feed name"},"returns":{"price":"price","timestamp":"timestamp"}},"getPriceTimestampHeartbeat(bytes32)":{"params":{"_key":"hash of feed name"},"returns":{"heartbeat":"heartbeat","price":"price","timestamp":"timestamp"}},"priceData(string)":{"details":"this is only for dev debug, please use `getPriceData` directly for lower has cost and fallback functionality"},"prices(bytes32)":{"params":{"_key":"hash of feed name"},"returns":{"data":"full PriceData struct"}}},"version":1},"userdoc":{"kind":"user","methods":{"getPrice(bytes32)":{"notice":"method will revert if data for `_key` not exists."},"getPriceData(bytes32)":{"notice":"method will revert if data for `_key` not exists."},"getPriceDataByName(string)":{"notice":"It does not revert on empty data."},"getPriceDataRaw(bytes32)":{"notice":"same as `getPriceData` but does not revert when no data"},"getPriceTimestamp(bytes32)":{"notice":"method will revert if data for `_key` not exists."},"getPriceTimestampHeartbeat(bytes32)":{"notice":"method will revert if data for `_key` not exists."},"prices(bytes32)":{"notice":"reader for mapping"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/forge-std/lib/ds-test/src/","flywheel-v2/=lib/flywheel-v2/src/","flywheel/=lib/flywheel-v2/src/","forge-std/=lib/forge-std/src/","fuse-flywheel/=lib/fuse-flywheel/src/","libcompound/=lib/fuse-flywheel/lib/libcompound/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","ops/=lib/ops/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/","solidity-bytes-utils/=lib/solidity-bytes-utils/","solmate/=lib/solmate/src/","weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/external/umbrella/IUmbrellaFeeds.sol":"IUmbrellaFeeds"},"evmVersion":"london","libraries":{}},"sources":{"contracts/external/umbrella/IUmbrellaFeeds.sol":{"keccak256":"0xbe4c5a0bc969eb1fe0111da31a9a62318bd824b48aa47372df0deae4c10ff566","urls":["bzz-raw://539a1374e0c03bf42658459091b4b4cb113b738e17c1abbbebb00aba49ff0ad8","dweb:/ipfs/QmRjTrgFNWXYztt2s15zWwapAeejMk5exB4LLQ2amUXZCi"],"license":"MIT"}},"version":1},"id":99}