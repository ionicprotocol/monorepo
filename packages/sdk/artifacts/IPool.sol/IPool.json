{"abi":[{"type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getFeeGrowthGlobal","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLiquidityState","inputs":[],"outputs":[{"name":"baseL","type":"uint128","internalType":"uint128"},{"name":"reinvestL","type":"uint128","internalType":"uint128"},{"name":"reinvestLLast","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getPoolState","inputs":[],"outputs":[{"name":"sqrtP","type":"uint160","internalType":"uint160"},{"name":"currentTick","type":"int24","internalType":"int24"},{"name":"nearestCurrentTick","type":"int24","internalType":"int24"},{"name":"locked","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getPositions","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"feeGrowthInsideLast","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSecondsPerLiquidityData","inputs":[],"outputs":[{"name":"secondsPerLiquidityGlobal","type":"uint128","internalType":"uint128"},{"name":"lastUpdateTime","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getSecondsPerLiquidityInside","inputs":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"secondsPerLiquidityInside","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"initializedTicks","inputs":[{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"previous","type":"int24","internalType":"int24"},{"name":"next","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"maxTickLiquidity","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"poolOracle","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolOracle"}],"stateMutability":"view"},{"type":"function","name":"swapFeeUnits","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"tickDistance","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"ticks","inputs":[{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidityGross","type":"uint128","internalType":"uint128"},{"name":"liquidityNet","type":"int128","internalType":"int128"},{"name":"feeGrowthOutside","type":"uint256","internalType":"uint256"},{"name":"secondsPerLiquidityOutside","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"token0","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"token1","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"factory()":"c45a0155","getFeeGrowthGlobal()":"72cc5148","getLiquidityState()":"ab612f2b","getPoolState()":"217ac237","getPositions(address,int24,int24)":"f2843d1e","getSecondsPerLiquidityData()":"aff67f55","getSecondsPerLiquidityInside(int24,int24)":"b231a3b8","initializedTicks(int24)":"c0ac75cf","maxTickLiquidity()":"c5611c60","poolOracle()":"6efff33b","swapFeeUnits()":"c79a590e","tickDistance()":"48626a8c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeGrowthGlobal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityState\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"baseL\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reinvestL\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reinvestLLast\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtP\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"currentTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nearestCurrentTick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getPositions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInsideLast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSecondsPerLiquidityData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityGlobal\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdateTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getSecondsPerLiquidityInside\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityInside\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"initializedTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"previous\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"next\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTickLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOracle\",\"outputs\":[{\"internalType\":\"contract IPoolOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeUnits\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickDistance\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityOutside\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"getFeeGrowthGlobal()\":{\"returns\":{\"_0\":\"feeGrowthGlobal All-time fee growth per unit of liquidity of the pool\"}},\"getLiquidityState()\":{\"returns\":{\"baseL\":\"pool's base liquidity without reinvest liqudity\",\"reinvestL\":\"the liquidity is reinvested into the pool\",\"reinvestLLast\":\"last cached value of reinvestL, used for calculating reinvestment token qty\"}},\"getPoolState()\":{\"returns\":{\"currentTick\":\"pool's current tick\",\"locked\":\"true if pool is locked, false otherwise\",\"nearestCurrentTick\":\"pool's nearest initialized tick that is <= currentTick\",\"sqrtP\":\"sqrt of current price: sqrt(token1/token0)\"}},\"getPositions(address,int24,int24)\":{\"returns\":{\"feeGrowthInsideLast\":\"fee growth inside the tick range as of the last mint / burn action performed\",\"liquidity\":\"the liquidity quantity of the position\"}},\"getSecondsPerLiquidityData()\":{\"returns\":{\"lastUpdateTime\":\"The timestamp in which secondsPerLiquidityGlobal was last updated\",\"secondsPerLiquidityGlobal\":\"All-time seconds per unit of liquidity of the pool\"}},\"getSecondsPerLiquidityInside(int24,int24)\":{\"params\":{\"tickLower\":\"The lower tick (of a position)\",\"tickUpper\":\"The upper tick (of a position)\"},\"returns\":{\"secondsPerLiquidityInside\":\"active time (multiplied by 2^96) between the 2 ticks, per unit of liquidity.\"}},\"initializedTicks(int24)\":{\"details\":\"If specified tick is uninitialized, the returned values are zero.\",\"params\":{\"tick\":\"The tick to look up\"}},\"maxTickLiquidity()\":{\"details\":\"This is to prevent overflow the pool's active base liquidity (uint128) also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"poolOracle()\":{\"returns\":{\"_0\":\"The contract address\"}},\"swapFeeUnits()\":{\"returns\":{\"_0\":\"The swap fee in basis points\"}},\"tickDistance()\":{\"details\":\"Ticks can only be initialized and used at multiples of this value It remains an int24 to avoid casting even though it is >= 1. e.g: a tickDistance of 5 means ticks can be initialized every 5th tick, i.e., ..., -10, -5, 0, 5, 10, ...\",\"returns\":{\"_0\":\"The tick distance\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"total liquidity amount from positions that uses this tick as a lower or upper tick liquidityNet how much liquidity changes when the pool tick crosses above the tick feeGrowthOutside the fee growth on the other side of the tick relative to the current tick secondsPerLiquidityOutside the seconds per unit of liquidity  spent on the other side of the tick relative to the current tick\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IFactory interface\"},\"getLiquidityState()\":{\"notice\":\"Fetches the pool's liquidity values\"},\"getPoolState()\":{\"notice\":\"Fetches the pool's prices, ticks and lock status\"},\"getPositions(address,int24,int24)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"getSecondsPerLiquidityInside(int24,int24)\":{\"notice\":\"Calculates and returns the active time per unit of liquidity until current block.timestamp\"},\"initializedTicks(int24)\":{\"notice\":\"Returns the previous and next initialized ticks of a specific tick\"},\"maxTickLiquidity()\":{\"notice\":\"Maximum gross liquidity that an initialized tick can have\"},\"poolOracle()\":{\"notice\":\"The oracle contract that stores necessary data for price oracle\"},\"swapFeeUnits()\":{\"notice\":\"The fee to be charged for a swap in basis points\"},\"tickDistance()\":{\"notice\":\"The pool tick distance\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/kyber/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flywheel-v2/=lib/flywheel-v2/src/\",\":flywheel/=lib/flywheel-v2/src/\",\":forge-std/=lib/forge-std/src/\",\":fuse-flywheel/=lib/fuse-flywheel/src/\",\":libcompound/=lib/fuse-flywheel/lib/libcompound/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":ops/=lib/ops/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"contracts/external/kyber/IPool.sol\":{\"keccak256\":\"0x2bd15f156daada0684c61deb9c8709b84860e92d0640569c1b77856fca536441\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03201723dc7f1d95e68fb2de0981da211c5e4392c0d279e344f9d1ab9bd53f73\",\"dweb:/ipfs/QmcWZwdtS6shWrqvFa5Avq3Z3oA9gAkYwKY1VsCeAC3nqp\"]},\"contracts/external/kyber/IPoolOracle.sol\":{\"keccak256\":\"0x641ad283ff69cfa5e3f386532c30e82509397e76ca5f908f28d0369e37ed86ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0695e51693a521d8ca07a4d09ea42d8c11b07926bbd73fa468a5c5abcafc3946\",\"dweb:/ipfs/QmdSZWEnVZKWJtCaz2cVHySKxCwW5xYU5ywwbxAXUTpeKz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.10+commit.fc410830"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFeeGrowthGlobal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLiquidityState","outputs":[{"internalType":"uint128","name":"baseL","type":"uint128"},{"internalType":"uint128","name":"reinvestL","type":"uint128"},{"internalType":"uint128","name":"reinvestLLast","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolState","outputs":[{"internalType":"uint160","name":"sqrtP","type":"uint160"},{"internalType":"int24","name":"currentTick","type":"int24"},{"internalType":"int24","name":"nearestCurrentTick","type":"int24"},{"internalType":"bool","name":"locked","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getPositions","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInsideLast","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSecondsPerLiquidityData","outputs":[{"internalType":"uint128","name":"secondsPerLiquidityGlobal","type":"uint128"},{"internalType":"uint32","name":"lastUpdateTime","type":"uint32"}]},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getSecondsPerLiquidityInside","outputs":[{"internalType":"uint128","name":"secondsPerLiquidityInside","type":"uint128"}]},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"view","type":"function","name":"initializedTicks","outputs":[{"internalType":"int24","name":"previous","type":"int24"},{"internalType":"int24","name":"next","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxTickLiquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolOracle","outputs":[{"internalType":"contract IPoolOracle","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"swapFeeUnits","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tickDistance","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"view","type":"function","name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside","type":"uint256"},{"internalType":"uint128","name":"secondsPerLiquidityOutside","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"factory()":{"returns":{"_0":"The contract address"}},"getFeeGrowthGlobal()":{"returns":{"_0":"feeGrowthGlobal All-time fee growth per unit of liquidity of the pool"}},"getLiquidityState()":{"returns":{"baseL":"pool's base liquidity without reinvest liqudity","reinvestL":"the liquidity is reinvested into the pool","reinvestLLast":"last cached value of reinvestL, used for calculating reinvestment token qty"}},"getPoolState()":{"returns":{"currentTick":"pool's current tick","locked":"true if pool is locked, false otherwise","nearestCurrentTick":"pool's nearest initialized tick that is <= currentTick","sqrtP":"sqrt of current price: sqrt(token1/token0)"}},"getPositions(address,int24,int24)":{"returns":{"feeGrowthInsideLast":"fee growth inside the tick range as of the last mint / burn action performed","liquidity":"the liquidity quantity of the position"}},"getSecondsPerLiquidityData()":{"returns":{"lastUpdateTime":"The timestamp in which secondsPerLiquidityGlobal was last updated","secondsPerLiquidityGlobal":"All-time seconds per unit of liquidity of the pool"}},"getSecondsPerLiquidityInside(int24,int24)":{"params":{"tickLower":"The lower tick (of a position)","tickUpper":"The upper tick (of a position)"},"returns":{"secondsPerLiquidityInside":"active time (multiplied by 2^96) between the 2 ticks, per unit of liquidity."}},"initializedTicks(int24)":{"details":"If specified tick is uninitialized, the returned values are zero.","params":{"tick":"The tick to look up"}},"maxTickLiquidity()":{"details":"This is to prevent overflow the pool's active base liquidity (uint128) also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"poolOracle()":{"returns":{"_0":"The contract address"}},"swapFeeUnits()":{"returns":{"_0":"The swap fee in basis points"}},"tickDistance()":{"details":"Ticks can only be initialized and used at multiples of this value It remains an int24 to avoid casting even though it is >= 1. e.g: a tickDistance of 5 means ticks can be initialized every 5th tick, i.e., ..., -10, -5, 0, 5, 10, ...","returns":{"_0":"The tick distance"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"total liquidity amount from positions that uses this tick as a lower or upper tick liquidityNet how much liquidity changes when the pool tick crosses above the tick feeGrowthOutside the fee growth on the other side of the tick relative to the current tick secondsPerLiquidityOutside the seconds per unit of liquidity  spent on the other side of the tick relative to the current tick"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"version":1},"userdoc":{"kind":"user","methods":{"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IFactory interface"},"getLiquidityState()":{"notice":"Fetches the pool's liquidity values"},"getPoolState()":{"notice":"Fetches the pool's prices, ticks and lock status"},"getPositions(address,int24,int24)":{"notice":"Returns the information about a position by the position's key"},"getSecondsPerLiquidityInside(int24,int24)":{"notice":"Calculates and returns the active time per unit of liquidity until current block.timestamp"},"initializedTicks(int24)":{"notice":"Returns the previous and next initialized ticks of a specific tick"},"maxTickLiquidity()":{"notice":"Maximum gross liquidity that an initialized tick can have"},"poolOracle()":{"notice":"The oracle contract that stores necessary data for price oracle"},"swapFeeUnits()":{"notice":"The fee to be charged for a swap in basis points"},"tickDistance()":{"notice":"The pool tick distance"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/forge-std/lib/ds-test/src/","flywheel-v2/=lib/flywheel-v2/src/","flywheel/=lib/flywheel-v2/src/","forge-std/=lib/forge-std/src/","fuse-flywheel/=lib/fuse-flywheel/src/","libcompound/=lib/fuse-flywheel/lib/libcompound/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","ops/=lib/ops/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/","solidity-bytes-utils/=lib/solidity-bytes-utils/","solmate/=lib/solmate/src/","weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/external/kyber/IPool.sol":"IPool"},"evmVersion":"london","libraries":{}},"sources":{"contracts/external/kyber/IPool.sol":{"keccak256":"0x2bd15f156daada0684c61deb9c8709b84860e92d0640569c1b77856fca536441","urls":["bzz-raw://03201723dc7f1d95e68fb2de0981da211c5e4392c0d279e344f9d1ab9bd53f73","dweb:/ipfs/QmcWZwdtS6shWrqvFa5Avq3Z3oA9gAkYwKY1VsCeAC3nqp"],"license":"MIT"},"contracts/external/kyber/IPoolOracle.sol":{"keccak256":"0x641ad283ff69cfa5e3f386532c30e82509397e76ca5f908f28d0369e37ed86ed","urls":["bzz-raw://0695e51693a521d8ca07a4d09ea42d8c11b07926bbd73fa468a5c5abcafc3946","dweb:/ipfs/QmdSZWEnVZKWJtCaz2cVHySKxCwW5xYU5ywwbxAXUTpeKz"],"license":"MIT"}},"version":1},"id":82}