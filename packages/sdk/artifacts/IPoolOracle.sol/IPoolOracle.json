{"abi":[{"type":"function","name":"getObservationAt","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"blockTimestamp","type":"uint32","internalType":"uint32"},{"name":"tickCumulative","type":"int56","internalType":"int56"},{"name":"initialized","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getPoolObservation","inputs":[{"name":"pool","type":"address","internalType":"address"}],"outputs":[{"name":"initialized","type":"bool","internalType":"bool"},{"name":"index","type":"uint16","internalType":"uint16"},{"name":"cardinality","type":"uint16","internalType":"uint16"},{"name":"cardinalityNext","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"increaseObservationCardinalityNext","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"observationCardinalityNext","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initializeOracle","inputs":[{"name":"time","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"cardinality","type":"uint16","internalType":"uint16"},{"name":"cardinalityNext","type":"uint16","internalType":"uint16"}],"stateMutability":"nonpayable"},{"type":"function","name":"observeFromPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"secondsAgos","type":"uint32[]","internalType":"uint32[]"}],"outputs":[{"name":"tickCumulatives","type":"int56[]","internalType":"int56[]"}],"stateMutability":"view"},{"type":"function","name":"observeSingleFromPool","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"secondsAgo","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"tickCumulative","type":"int56","internalType":"int56"}],"stateMutability":"view"},{"type":"function","name":"write","inputs":[{"name":"blockTimestamp","type":"uint32","internalType":"uint32"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"liquidity","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"indexUpdated","type":"uint16","internalType":"uint16"},{"name":"cardinalityUpdated","type":"uint16","internalType":"uint16"}],"stateMutability":"nonpayable"},{"type":"function","name":"writeNewEntry","inputs":[{"name":"index","type":"uint16","internalType":"uint16"},{"name":"blockTimestamp","type":"uint32","internalType":"uint32"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"cardinality","type":"uint16","internalType":"uint16"},{"name":"cardinalityNext","type":"uint16","internalType":"uint16"}],"outputs":[{"name":"indexUpdated","type":"uint16","internalType":"uint16"},{"name":"cardinalityUpdated","type":"uint16","internalType":"uint16"}],"stateMutability":"nonpayable"},{"type":"event","name":"IncreaseObservationCardinalityNext","inputs":[{"name":"pool","type":"address","indexed":false,"internalType":"address"},{"name":"observationCardinalityNextOld","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"observationCardinalityNextNew","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"OwnerWithdrew","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getObservationAt(address,uint256)":"e3e717e9","getPoolObservation(address)":"8934fade","increaseObservationCardinalityNext(address,uint16)":"4c7a539b","initializeOracle(uint32)":"3440fba7","observeFromPool(address,uint32[])":"9ef64c49","observeSingleFromPool(address,uint32)":"9fc40df3","write(uint32,int24,uint128)":"ff11275e","writeNewEntry(uint16,uint32,int24,uint128,uint16,uint16)":"4d650b7e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnerWithdrew\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getObservationAt\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolObservation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinalityNext\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"time\",\"type\":\"uint32\"}],\"name\":\"initializeOracle\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinalityNext\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observeFromPool\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"secondsAgo\",\"type\":\"uint32\"}],\"name\":\"observeSingleFromPool\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"write\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"indexUpdated\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinalityUpdated\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinalityNext\",\"type\":\"uint16\"}],\"name\":\"writeNewEntry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"indexUpdated\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardinalityUpdated\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"IncreaseObservationCardinalityNext(address,uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\",\"pool\":\"The pool address to update\"}}},\"kind\":\"dev\",\"methods\":{\"getObservationAt(address,uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\",\"pool\":\"The pool address of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"increaseObservationCardinalityNext(address,uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\",\"pool\":\"The pool address to be updated\"}},\"observeFromPool(address,uint32[])\":{\"details\":\"Reverts if `secondsAgos` > oldest observationIt fetches the latest current tick data from the pool Read the Oracle.observe function for more details\"},\"observeSingleFromPool(address,uint32)\":{\"details\":\"Reverts if `secondsAgo` > oldest observationIt fetches the latest current tick data from the pool Read the Oracle.observeSingle function for more details\"}},\"version\":1},\"userdoc\":{\"events\":{\"IncreaseObservationCardinalityNext(address,uint16,uint16)\":{\"notice\":\"Emitted by the Pool Oracle for increases to the number of observations that can be stored\"},\"OwnerWithdrew(address,address,uint256)\":{\"notice\":\"Owner withdrew funds in the pool oracle in case some funds are stuck there\"}},\"kind\":\"user\",\"methods\":{\"getObservationAt(address,uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"getPoolObservation(address)\":{\"notice\":\"Return the latest pool observation data given the pool address\"},\"increaseObservationCardinalityNext(address,uint16)\":{\"notice\":\"Increase the maximum number of price observations that this pool will store\"},\"initializeOracle(uint32)\":{\"notice\":\"Initalize observation data for the caller.\"},\"observeFromPool(address,uint32[])\":{\"notice\":\"Returns the accumulator values as of each time seconds ago from the latest block time in the array of `secondsAgos`\"},\"observeSingleFromPool(address,uint32)\":{\"notice\":\"Returns the accumulator values as the time seconds ago from the latest block time of secondsAgo\"},\"write(uint32,int24,uint128)\":{\"notice\":\"Write a new oracle entry into the array, take the latest observaion data as inputs   and update the observation index and cardinality Read the Oralce.write function for more details\"},\"writeNewEntry(uint16,uint32,int24,uint128,uint16,uint16)\":{\"notice\":\"Write a new oracle entry into the array   and update the observation index and cardinality Read the Oralce.write function for more details\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/kyber/IPoolOracle.sol\":\"IPoolOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flywheel-v2/=lib/flywheel-v2/src/\",\":flywheel/=lib/flywheel-v2/src/\",\":forge-std/=lib/forge-std/src/\",\":fuse-flywheel/=lib/fuse-flywheel/src/\",\":libcompound/=lib/fuse-flywheel/lib/libcompound/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":ops/=lib/ops/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"contracts/external/kyber/IPoolOracle.sol\":{\"keccak256\":\"0x641ad283ff69cfa5e3f386532c30e82509397e76ca5f908f28d0369e37ed86ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0695e51693a521d8ca07a4d09ea42d8c11b07926bbd73fa468a5c5abcafc3946\",\"dweb:/ipfs/QmdSZWEnVZKWJtCaz2cVHySKxCwW5xYU5ywwbxAXUTpeKz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.10+commit.fc410830"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address","indexed":false},{"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16","indexed":false},{"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16","indexed":false}],"type":"event","name":"IncreaseObservationCardinalityNext","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"OwnerWithdrew","anonymous":false},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getObservationAt","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"bool","name":"initialized","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolObservation","outputs":[{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint16","name":"index","type":"uint16"},{"internalType":"uint16","name":"cardinality","type":"uint16"},{"internalType":"uint16","name":"cardinalityNext","type":"uint16"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"increaseObservationCardinalityNext"},{"inputs":[{"internalType":"uint32","name":"time","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"initializeOracle","outputs":[{"internalType":"uint16","name":"cardinality","type":"uint16"},{"internalType":"uint16","name":"cardinalityNext","type":"uint16"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"stateMutability":"view","type":"function","name":"observeFromPool","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint32","name":"secondsAgo","type":"uint32"}],"stateMutability":"view","type":"function","name":"observeSingleFromPool","outputs":[{"internalType":"int56","name":"tickCumulative","type":"int56"}]},{"inputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"write","outputs":[{"internalType":"uint16","name":"indexUpdated","type":"uint16"},{"internalType":"uint16","name":"cardinalityUpdated","type":"uint16"}]},{"inputs":[{"internalType":"uint16","name":"index","type":"uint16"},{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint16","name":"cardinality","type":"uint16"},{"internalType":"uint16","name":"cardinalityNext","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"writeNewEntry","outputs":[{"internalType":"uint16","name":"indexUpdated","type":"uint16"},{"internalType":"uint16","name":"cardinalityUpdated","type":"uint16"}]}],"devdoc":{"kind":"dev","methods":{"getObservationAt(address,uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch","pool":"The pool address of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"increaseObservationCardinalityNext(address,uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store","pool":"The pool address to be updated"}},"observeFromPool(address,uint32[])":{"details":"Reverts if `secondsAgos` > oldest observationIt fetches the latest current tick data from the pool Read the Oracle.observe function for more details"},"observeSingleFromPool(address,uint32)":{"details":"Reverts if `secondsAgo` > oldest observationIt fetches the latest current tick data from the pool Read the Oracle.observeSingle function for more details"}},"version":1},"userdoc":{"kind":"user","methods":{"getObservationAt(address,uint256)":{"notice":"Returns data about a specific observation index"},"getPoolObservation(address)":{"notice":"Return the latest pool observation data given the pool address"},"increaseObservationCardinalityNext(address,uint16)":{"notice":"Increase the maximum number of price observations that this pool will store"},"initializeOracle(uint32)":{"notice":"Initalize observation data for the caller."},"observeFromPool(address,uint32[])":{"notice":"Returns the accumulator values as of each time seconds ago from the latest block time in the array of `secondsAgos`"},"observeSingleFromPool(address,uint32)":{"notice":"Returns the accumulator values as the time seconds ago from the latest block time of secondsAgo"},"write(uint32,int24,uint128)":{"notice":"Write a new oracle entry into the array, take the latest observaion data as inputs   and update the observation index and cardinality Read the Oralce.write function for more details"},"writeNewEntry(uint16,uint32,int24,uint128,uint16,uint16)":{"notice":"Write a new oracle entry into the array   and update the observation index and cardinality Read the Oralce.write function for more details"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/","ds-test/=lib/forge-std/lib/ds-test/src/","flywheel-v2/=lib/flywheel-v2/src/","flywheel/=lib/flywheel-v2/src/","forge-std/=lib/forge-std/src/","fuse-flywheel/=lib/fuse-flywheel/src/","libcompound/=lib/fuse-flywheel/lib/libcompound/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","ops/=lib/ops/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/","solidity-bytes-utils/=lib/solidity-bytes-utils/","solmate/=lib/solmate/src/","weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/external/kyber/IPoolOracle.sol":"IPoolOracle"},"evmVersion":"london","libraries":{}},"sources":{"contracts/external/kyber/IPoolOracle.sol":{"keccak256":"0x641ad283ff69cfa5e3f386532c30e82509397e76ca5f908f28d0369e37ed86ed","urls":["bzz-raw://0695e51693a521d8ca07a4d09ea42d8c11b07926bbd73fa468a5c5abcafc3946","dweb:/ipfs/QmdSZWEnVZKWJtCaz2cVHySKxCwW5xYU5ywwbxAXUTpeKz"],"license":"MIT"}},"version":1},"id":83}