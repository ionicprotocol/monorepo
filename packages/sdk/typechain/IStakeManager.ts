/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface IStakeManagerInterface extends utils.Interface {
  functions: {
    "convertBnbToBnbX(uint256)": FunctionFragment;
    "convertBnbXToBnb(uint256)": FunctionFragment;
    "deposit()": FunctionFragment;
    "getContracts()": FunctionFragment;
    "getExtraBnbInContract()": FunctionFragment;
    "getTotalPooledBnb()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "convertBnbToBnbX"
      | "convertBnbXToBnb"
      | "deposit"
      | "getContracts"
      | "getExtraBnbInContract"
      | "getTotalPooledBnb"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "convertBnbToBnbX",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "convertBnbXToBnb",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "deposit", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getContracts",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getExtraBnbInContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalPooledBnb",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "convertBnbToBnbX",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "convertBnbXToBnb",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getContracts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExtraBnbInContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalPooledBnb",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IStakeManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IStakeManagerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    convertBnbToBnbX(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    convertBnbXToBnb(
      _amountInBnbX: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    deposit(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<ContractTransaction>;

    getContracts(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string] & {
        _manager: string;
        _bnbX: string;
        _tokenHub: string;
        _bcDepositWallet: string;
      }
    >;

    getExtraBnbInContract(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _extraBnb: BigNumber }>;

    getTotalPooledBnb(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  convertBnbToBnbX(
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  convertBnbXToBnb(
    _amountInBnbX: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  deposit(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractTransaction>;

  getContracts(
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, string] & {
      _manager: string;
      _bnbX: string;
      _tokenHub: string;
      _bcDepositWallet: string;
    }
  >;

  getExtraBnbInContract(overrides?: CallOverrides): Promise<BigNumber>;

  getTotalPooledBnb(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    convertBnbToBnbX(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    convertBnbXToBnb(
      _amountInBnbX: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(overrides?: CallOverrides): Promise<void>;

    getContracts(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string] & {
        _manager: string;
        _bnbX: string;
        _tokenHub: string;
        _bcDepositWallet: string;
      }
    >;

    getExtraBnbInContract(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalPooledBnb(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    convertBnbToBnbX(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    convertBnbXToBnb(
      _amountInBnbX: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<BigNumber>;

    getContracts(overrides?: CallOverrides): Promise<BigNumber>;

    getExtraBnbInContract(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalPooledBnb(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    convertBnbToBnbX(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    convertBnbXToBnb(
      _amountInBnbX: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deposit(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getContracts(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getExtraBnbInContract(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalPooledBnb(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
