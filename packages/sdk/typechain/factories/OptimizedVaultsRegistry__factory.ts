/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptimizedVaultsRegistry,
  OptimizedVaultsRegistryInterface,
} from "../OptimizedVaultsRegistry";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addVault",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllVaults",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract OptimizedAPRVaultBase[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimableRewards",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "rewardsData",
        type: "tuple[]",
        internalType: "struct OptimizedVaultsRegistry.ClaimableRewardsInfo[]",
        components: [
          {
            name: "flywheel",
            type: "address",
            internalType: "address",
          },
          {
            name: "vault",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardTokenName",
            type: "string",
            internalType: "string",
          },
          {
            name: "rewardTokenSymbol",
            type: "string",
            internalType: "string",
          },
          {
            name: "rewardTokenDecimals",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "rewards",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getLatestVaultExtensions",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract OptimizedAPRVaultExtension[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaultsData",
    inputs: [],
    outputs: [
      {
        name: "vaultsData",
        type: "tuple[]",
        internalType: "struct OptimizedVaultsRegistry.VaultInfo[]",
        components: [
          {
            name: "vault",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetSymbol",
            type: "string",
            internalType: "string",
          },
          {
            name: "assetDecimals",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "estimatedTotalAssets",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "apr",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "adaptersCount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "isEmergencyStopped",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "performanceFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "depositFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "withdrawalFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "managementFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "adaptersData",
            type: "tuple[]",
            internalType: "struct OptimizedVaultsRegistry.AdapterInfo[]",
            components: [
              {
                name: "adapter",
                type: "address",
                internalType: "address",
              },
              {
                name: "allocation",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "market",
                type: "address",
                internalType: "address",
              },
              {
                name: "pool",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeVault",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEmergencyExit",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLatestVaultExtensions",
    inputs: [
      {
        name: "vault",
        type: "address",
        internalType: "address",
      },
      {
        name: "extensions",
        type: "address[]",
        internalType: "contract OptimizedAPRVaultExtension[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vaults",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract OptimizedAPRVaultBase",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612387806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e30c397811610066578063e30c397814610211578063f2fde38b14610224578063fc4d33f914610237578063fcf2d0ad1461023f57600080fd5b80638da5cb5b146101c557806397331bf9146101d6578063ceb68c23146101eb578063d9d17645146101fe57600080fd5b8063715018a6116100d3578063715018a6146101775780638129fc1c1461017f578063857ecda2146101875780638c64ea4a1461019a57600080fd5b8063256b5a0214610105578063308e401e1461012d5780634a672a541461014d5780636e96dfd714610162575b600080fd5b610118610113366004611c3b565b610247565b60405190151581526020015b60405180910390f35b61014061013b366004611c3b565b610305565b6040516101249190611cb7565b610155610973565b6040516101249190611e02565b610175610170366004611c3b565b61125d565b005b6101756112c7565b61017561130f565b610175610195366004611f27565b611421565b6101ad6101a8366004611fae565b611452565b6040516001600160a01b039091168152602001610124565b6033546001600160a01b03166101ad565b6101de61147c565b6040516101249190611fc7565b6101186101f9366004611c3b565b6114de565b6101de61020c366004611c3b565b6115ff565b6065546101ad906001600160a01b031681565b610175610232366004611c3b565b611675565b6101756116e6565b6101756117fa565b6000610251611a7b565b60005b6066548110156102b157826001600160a01b03166066828154811061027b5761027b612014565b6000918252602090912001546001600160a01b0316141561029f5750600092915050565b806102a981612040565b915050610254565b505060668054600180820183556000929092527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b0319166001600160a01b0384161790555b919050565b60606000805b6066548110156104265760006066828154811061032a5761032a612014565b60009182526020918290200154604080516319c42cfb60e11b815290516001600160a01b039092169263338859f6926004808401938290030181865afa158015610378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039c919061205b565b6001600160a01b03166374fd2c386040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040191908101906120be565b9050805183610410919061216f565b925050808061041e90612040565b91505061030b565b50806001600160401b0381111561043f5761043f612078565b6040519080825280602002602001820160405280156104a557816020015b6040805160e081018252600080825260208083018290529282018190526060808301819052608083015260a0820181905260c0820152825260001990920191018161045d5790505b509150506000805b60665481101561096c576000606682815481106104cc576104cc612014565b6000918252602080832090910154604080516319c42cfb60e11b815290516001600160a01b039092169450849263338859f6926004808401938290030181865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610542919061205b565b6001600160a01b03166374fd2c386040518163ffffffff1660e01b8152600401600060405180830381865afa15801561057f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105a791908101906120be565b805190915060005b818110156109495760008382815181106105cb576105cb612014565b60200260200101519050848883896105e3919061216f565b815181106105f3576105f3612014565b6020908102919091018101516001600160a01b039092169101528088610619848a61216f565b8151811061062957610629612014565b60209081029190910101516001600160a01b039182169052604051632e6f912b60e21b815286821660048201528a821660248201529082169063b9be44ac906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae9190612187565b886106b9848a61216f565b815181106106c9576106c9612014565b602002602001015160c00181815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d919061205b565b9050808961074b858b61216f565b8151811061075b5761075b612014565b6020026020010151604001906001600160a01b031690816001600160a01b031681525050806001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e591908101906121a0565b896107f0858b61216f565b8151811061080057610800612014565b602002602001015160600181905250806001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087591908101906121a0565b89610880858b61216f565b8151811061089057610890612014565b602002602001015160800181905250806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109019190612233565b8961090c858b61216f565b8151811061091c5761091c612014565b602002602001015160a0019060ff16908160ff16815250505050808061094190612040565b9150506105af565b50610954818661216f565b9450505050808061096490612040565b9150506104ad565b5050919050565b6066546060906001600160401b0381111561099057610990612078565b604051908082528060200260200182016040528015610a2957816020015b604080516101a08101825260008082526020820181905260609282018390528282018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201526101808101919091528152602001906001900390816109ae5790505b50905060005b60665481101561125957600060668281548110610a4e57610a4e612014565b6000918252602091829020015460408051632d50845360e21b815290516001600160a01b039092169263b542114c926004808401938290030181865afa158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac0919061205b565b9050600060668381548110610ad757610ad7612014565b6000918252602091829020015460408051637c7a561b60e01b815290516001600160a01b0390921692637c7a561b926004808401938290030181865afa158015610b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b499190612233565b905060008160ff166001600160401b03811115610b6857610b68612078565b604051908082528060200260200182016040528015610bba57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610b865790505b50905060005b8260ff16811015610e115760008060668781548110610be157610be1612014565b6000918252602090912001546040516313bd406b60e21b8152600481018590526001600160a01b0390911690634ef501ac906024016040805180830381865afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c56919061226d565b915091506000826001600160a01b03166380f556056040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe919061205b565b905082858581518110610cd357610cd3612014565b6020026020010151600001906001600160a01b031690816001600160a01b03168152505081858581518110610d0a57610d0a612014565b6020026020010151602001906001600160401b031690816001600160401b03168152505080858581518110610d4157610d41612014565b6020026020010151604001906001600160a01b031690816001600160a01b031681525050806001600160a01b0316635fe3b5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc7919061205b565b858581518110610dd957610dd9612014565b6020026020010151606001906001600160a01b031690816001600160a01b03168152505050505080610e0a90612040565b9050610bc0565b50600080600080866001600160a01b0316639af1d35a6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7a91906122a2565b9350935093509350604051806101a00160405280886001600160a01b03168152602001886001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff919061205b565b6001600160a01b03168152602001886001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f919061205b565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610fac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fd491908101906121a0565b8152602001886001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611017573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103b919061205b565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109c9190612233565b60ff168152602001886001600160a01b031663efbb5cb06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111069190612187565b8152602001886001600160a01b0316635a5cd45e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d9190612187565b81526020018760ff168152602001886001600160a01b0316635641ec036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd91906122f6565b15158152602001856001600160401b03168152602001846001600160401b03168152602001836001600160401b03168152602001826001600160401b031681526020018681525089898151811061123657611236612014565b6020026020010181905250505050505050508061125290612040565b9050610a2f565b5090565b611265611a7b565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b6112cf611a7b565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b600054610100900460ff161580801561132f5750600054600160ff909116105b806113495750303b158015611349575060005460ff166001145b6113ac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611306565b6000805460ff1916600117905580156113cf576000805461ff0019166101001790555b6113d833611ad7565b801561141e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b611429611a7b565b6001600160a01b038316600090815260676020526040902061144c908383611bb7565b50505050565b6066818154811061146257600080fd5b6000918252602090912001546001600160a01b0316905081565b606060668054806020026020016040519081016040528092919081815260200182805480156114d457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114b6575b5050505050905090565b60006114e8611a7b565b60005b6066548110156115f657826001600160a01b03166066828154811061151257611512612014565b6000918252602090912001546001600160a01b031614156115e4576066805461153d90600190612318565b8154811061154d5761154d612014565b600091825260209091200154606680546001600160a01b03909216918390811061157957611579612014565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055606680546115b290600190612318565b815481106115c2576115c2612014565b600091825260209091200180546001600160a01b031916905550600192915050565b806115ee81612040565b9150506114eb565b50600092915050565b6001600160a01b03811660009081526067602090815260409182902080548351818402810184019094528084526060939283018282801561166957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161164b575b50505050509050919050565b61167d611a7b565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146117385760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401611306565b600061174c6033546001600160a01b031690565b6065549091506001600160a01b031661176481611b0b565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91016112bb565b611802611a7b565b60005b60665481101561141e5760006066828154811061182457611824612014565b6000918252602091829020015460408051637c7a561b60e01b815290516001600160a01b0390921692637c7a561b926004808401938290030181865afa158015611872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118969190612233565b905060005b8160ff16811015611991576000606684815481106118bb576118bb612014565b6000918252602090912001546040516313bd406b60e21b8152600481018490526001600160a01b0390911690634ef501ac906024016040805180830381865afa15801561190c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611930919061226d565b509050806001600160a01b031663283579786040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561196e57600080fd5b505af192505050801561197f575060015b505061198a81612040565b905061189b565b50606682815481106119a5576119a5612014565b6000918252602091829020015460408051632d50845360e21b815290516001600160a01b039092169263b542114c926004808401938290030181865afa1580156119f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a17919061205b565b6001600160a01b031663fcf2d0ad6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a5157600080fd5b505af1158015611a65573d6000803e3d6000fd5b505050505080611a7490612040565b9050611805565b6033546001600160a01b03163314611ad55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611306565b565b600054610100900460ff16611afe5760405162461bcd60e51b81526004016113069061232f565b611b06611b5d565b61141e815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611b845760405162461bcd60e51b81526004016113069061232f565b611ad5600054610100900460ff16611bae5760405162461bcd60e51b81526004016113069061232f565b611ad533611b0b565b828054828255906000526020600020908101928215611c0a579160200282015b82811115611c0a5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611bd7565b506112599291505b808211156112595760008155600101611c12565b6001600160a01b038116811461141e57600080fd5b600060208284031215611c4d57600080fd5b8135611c5881611c26565b9392505050565b60005b83811015611c7a578181015183820152602001611c62565b8381111561144c5750506000910152565b60008151808452611ca3816020860160208601611c5f565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611d8257888303603f19018552815180516001600160a01b0390811685528882015181168986015287820151168785015260608082015160e08287018190529190611d2f83880182611c8b565b9250505060808083015186830382880152611d4a8382611c8b565b9250505060a080830151611d628288018260ff169052565b505060c09182015194909101939093529386019390860190600101611cde565b509098975050505050505050565b600081518084526020808501945080840160005b83811015611df757815180516001600160a01b039081168952848201516001600160401b0316858a01526040808301518216908a0152606091820151169088015260809096019590820190600101611da4565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611d8257888303603f19018552815180516001600160a01b031684526101a0818901516001600160a01b038116868b015250878201518189870152611e7482870182611c8b565b915050606080830151611e8b8288018260ff169052565b50506080828101519086015260a0808301519086015260c0808301519086015260e080830151151590860152610100808301516001600160401b0390811691870191909152610120808401518216908701526101408084015182169087015261016080840151909116908601526101809182015185820392860192909252611f138183611d90565b968901969450505090860190600101611e29565b600080600060408486031215611f3c57600080fd5b8335611f4781611c26565b925060208401356001600160401b0380821115611f6357600080fd5b818601915086601f830112611f7757600080fd5b813581811115611f8657600080fd5b8760208260051b8501011115611f9b57600080fd5b6020830194508093505050509250925092565b600060208284031215611fc057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156120085783516001600160a01b031683529284019291840191600101611fe3565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156120545761205461202a565b5060010190565b60006020828403121561206d57600080fd5b8151611c5881611c26565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156120b6576120b6612078565b604052919050565b600060208083850312156120d157600080fd5b82516001600160401b03808211156120e857600080fd5b818501915085601f8301126120fc57600080fd5b81518181111561210e5761210e612078565b8060051b915061211f84830161208e565b818152918301840191848101908884111561213957600080fd5b938501935b83851015612163578451925061215383611c26565b828252938501939085019061213e565b98975050505050505050565b600082198211156121825761218261202a565b500190565b60006020828403121561219957600080fd5b5051919050565b6000602082840312156121b257600080fd5b81516001600160401b03808211156121c957600080fd5b818401915084601f8301126121dd57600080fd5b8151818111156121ef576121ef612078565b612202601f8201601f191660200161208e565b915080825285602082850101111561221957600080fd5b61222a816020840160208601611c5f565b50949350505050565b60006020828403121561224557600080fd5b815160ff81168114611c5857600080fd5b80516001600160401b038116811461030057600080fd5b6000806040838503121561228057600080fd5b825161228b81611c26565b915061229960208401612256565b90509250929050565b600080600080608085870312156122b857600080fd5b6122c185612256565b93506122cf60208601612256565b92506122dd60408601612256565b91506122eb60608601612256565b905092959194509250565b60006020828403121561230857600080fd5b81518015158114611c5857600080fd5b60008282101561232a5761232a61202a565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080a000a";

type OptimizedVaultsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimizedVaultsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimizedVaultsRegistry__factory extends ContractFactory {
  constructor(...args: OptimizedVaultsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OptimizedVaultsRegistry> {
    return super.deploy(overrides || {}) as Promise<OptimizedVaultsRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimizedVaultsRegistry {
    return super.attach(address) as OptimizedVaultsRegistry;
  }
  override connect(signer: Signer): OptimizedVaultsRegistry__factory {
    return super.connect(signer) as OptimizedVaultsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimizedVaultsRegistryInterface {
    return new utils.Interface(_abi) as OptimizedVaultsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimizedVaultsRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimizedVaultsRegistry;
  }
}
