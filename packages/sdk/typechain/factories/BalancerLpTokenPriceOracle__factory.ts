/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerLpTokenPriceOracle,
  BalancerLpTokenPriceOracleInterface,
} from "../BalancerLpTokenPriceOracle";

const _abi = [
  {
    type: "function",
    name: "BONE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "BPOW_PRECISION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "EXIT_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "INIT_POOL_SUPPLY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_IN_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_OUT_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_TOTAL_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BALANCE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_masterPriceOracle",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "masterPriceOracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a39806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063b7b800a4116100de578063c6580d1211610097578063ec09302111610071578063ec093021146102a3578063f2fde38b146102ab578063fc4d33f9146102be578063fc57d4df146102c657600080fd5b8063c6580d1214610288578063e30c397814610290578063e4a28a521461019357600080fd5b8063b7b800a414610255578063ba019dab1461025d578063bc063e1a14610265578063bc694ea21461026d578063c36596a6146101b6578063c4d66de81461027557600080fd5b8063867378c51161014b578063992e2a9211610125578063992e2a921461021f578063aea9107814610227578063b0e0d1361461023a578063b46493a71461024257600080fd5b8063867378c5146101ea5780638da5cb5b146101f25780639381cd2b1461021757600080fd5b806309a3bbe414610193578063189d00ca146101ae578063218b5382146101b65780636e96dfd7146101c5578063715018a6146101da57806376c7a3c7146101e2575b600080fd5b61019b6102d9565b6040519081526020015b60405180910390f35b61019b6102ef565b61019b670de0b6b3a764000081565b6101d86101d33660046115c7565b610306565b005b6101d8610370565b61019b6103b8565b61019b6103cd565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101a5565b61019b6103e4565b61019b6103f7565b61019b6102353660046115c7565b610415565b61019b600881565b6066546101ff906001600160a01b031681565b61019b600281565b61019b600181565b61019b610426565b61019b610439565b6101d86102833660046115c7565b610458565b61019b600081565b6065546101ff906001600160a01b031681565b61019b610582565b6101d86102b93660046115c7565b610595565b6101d8610606565b61019b6102d43660046115c7565b61071a565b6102ec670de0b6b3a764000060326115fa565b81565b6102ec6402540be400670de0b6b3a764000061162f565b61030e61081d565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b61037861081d565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6102ec620f4240670de0b6b3a764000061162f565b6102ec64e8d4a51000670de0b6b3a764000061162f565b6102ec670de0b6b3a764000060646115fa565b61040a6003670de0b6b3a764000061162f565b6102ec906001611643565b600061042082610879565b92915050565b6102ec600a670de0b6b3a764000061162f565b600161044e670de0b6b3a764000060026115fa565b6102ec919061165b565b600054610100900460ff16158080156104785750600054600160ff909116105b806104925750303b158015610492575060005460ff166001145b6104f55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6000805460ff191660011790558015610518576000805461ff0019166101001790555b61052133610e73565b606680546001600160a01b0319166001600160a01b038416179055801561057e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610364565b5050565b6102ec6002670de0b6b3a764000061162f565b61059d61081d565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146106585760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b60448201526064016103af565b600061066c6033546001600160a01b031690565b6065549091506001600160a01b031661068481610eae565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610364565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611672565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e3919061168f565b6107f19060ff16600a611796565b6107fa82610879565b61080c90670de0b6b3a76400006115fa565b610816919061162f565b9392505050565b6033546001600160a01b031633146108775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103af565b565b6000808290506000816001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e391906117a2565b90506000826001600160a01b0316638d928af86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611672565b9050600080826001600160a01b031663f94d4668856040518263ffffffff1660e01b815260040161097c91815260200190565b600060405180830381865afa158015610999573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c19190810190611891565b50915091508151600214610a335760405162461bcd60e51b815260206004820152603360248201527f4f7261636c65207375697461626c65206f6e6c7920666f722042616c616e63656044820152727220506f6f6c73206f66203220746f6b656e7360681b60648201526084016103af565b600082600081518110610a4857610a4861195f565b60200260200101519050600083600181518110610a6757610a6761195f565b602002602001015190506000876001600160a01b031663f89f27ed6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ad99190810190611975565b6066546040516315d5220f60e31b81526001600160a01b0386811660048301529293506000929091169063aea9107890602401602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d91906117a2565b6066546040516315d5220f60e31b81526001600160a01b0386811660048301529293506000929091169063aea9107890602401602060405180830381865afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc191906117a2565b90506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c27919061168f565b90506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d919061168f565b905060128260ff161015610cc157610ca960ff8316601261165b565b610cb490600a611796565b610cbe90856115fa565b93505b60128260ff161115610cf357610cdb601260ff841661165b565b610ce690600a611796565b610cf0908561162f565b93505b60128160ff161015610d2557610d0d60ff8216601261165b565b610d1890600a611796565b610d2290846115fa565b92505b60128160ff161115610d5757610d3f601260ff831661165b565b610d4a90600a611796565b610d54908461162f565b92505b600080610dd08a600081518110610d7057610d7061195f565b60200260200101518b600181518110610d8b57610d8b61195f565b602002602001015189600081518110610da657610da661195f565b60200260200101518a600181518110610dc157610dc161195f565b60200260200101518a8a610f00565b915091508d6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3691906117a2565b610e4086836115fa565b610e4a88856115fa565b610e549190611643565b610e5e919061162f565b9e505050505050505050505050505050919050565b600054610100900460ff16610e9a5760405162461bcd60e51b81526004016103af906119b2565b610ea2610faf565b610eab81610eae565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806000610f0f8989610fde565b90506000610f2f610f208987611100565b610f2a8989611100565b610fde565b905080821115610f72576000610f458284610fde565b9050610f5a8b610f55838b6111db565b611100565b9450610f6a8a610f2a838c6111db565b935050610fa2565b6000610f7e8383610fde565b9050610f8e8b610f2a838b6111db565b9450610f9e8a610f55838c6111db565b9350505b5050965096945050505050565b600054610100900460ff16610fd65760405162461bcd60e51b81526004016103af906119b2565b610877611307565b60008161101c5760405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b60448201526064016103af565b6000611030670de0b6b3a7640000856115fa565b905083158061104f5750670de0b6b3a764000061104d858361162f565b145b61108e5760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b60448201526064016103af565b600061109b60028561162f565b6110a59083611643565b9050818110156110ea5760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b60448201526064016103af565b60006110f6858361162f565b9695505050505050565b60008061110d83856115fa565b9050831580611124575082611122858361162f565b145b6111635760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b60448201526064016103af565b60006111786002670de0b6b3a764000061162f565b6111829083611643565b9050818110156111c75760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b60448201526064016103af565b60006110f6670de0b6b3a76400008361162f565b600060018310156112265760405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b60448201526064016103af565b600161123b670de0b6b3a764000060026115fa565b611245919061165b565b83111561128d5760405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b60448201526064016103af565b600061129883611337565b905060006112a68483611355565b905060006112bc866112b7856113b2565b6113c6565b9050816112cd579250610420915050565b60006112f087846112eb6402540be400670de0b6b3a764000061162f565b611439565b90506112fc8282611100565b979650505050505050565b600054610100900460ff1661132e5760405162461bcd60e51b81526004016103af906119b2565b61087733610eae565b6000670de0b6b3a764000061134b836113b2565b61042091906115fa565b60008060006113648585611529565b9150915080156113aa5760405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b60448201526064016103af565b509392505050565b6000610420670de0b6b3a76400008361162f565b6000806113d46002846119fd565b6113e657670de0b6b3a76400006113e8565b835b90506113f560028461162f565b92505b8215610816576114088485611100565b93506114156002846119fd565b15611427576114248185611100565b90505b61143260028461162f565b92506113f8565b600082818061145087670de0b6b3a7640000611529565b9092509050670de0b6b3a764000080600060015b88841061151a57600061147f670de0b6b3a7640000836115fa565b905060008061149f8a61149a85670de0b6b3a7640000611355565b611529565b915091506114b187610f55848c611100565b96506114bd8784610fde565b9650866114cc5750505061151a565b87156114d6579315935b80156114e0579315935b84156114f7576114f08688611355565b9550611504565b6115018688611560565b95505b505050808061151290611a11565b915050611464565b50909998505050505050505050565b6000808284106115485761153d838561165b565b600091509150611559565b611552848461165b565b6001915091505b9250929050565b60008061156d8385611643565b9050838110156108165760405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b60448201526064016103af565b6001600160a01b0381168114610eab57600080fd5b6000602082840312156115d957600080fd5b8135610816816115b2565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611614576116146115e4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261163e5761163e611619565b500490565b60008219821115611656576116566115e4565b500190565b60008282101561166d5761166d6115e4565b500390565b60006020828403121561168457600080fd5b8151610816816115b2565b6000602082840312156116a157600080fd5b815160ff8116811461081657600080fd5b600181815b808511156116ed5781600019048211156116d3576116d36115e4565b808516156116e057918102915b93841c93908002906116b7565b509250929050565b60008261170457506001610420565b8161171157506000610420565b816001811461172757600281146117315761174d565b6001915050610420565b60ff841115611742576117426115e4565b50506001821b610420565b5060208310610133831016604e8410600b8410161715611770575081810a610420565b61177a83836116b2565b806000190482111561178e5761178e6115e4565b029392505050565b600061081683836116f5565b6000602082840312156117b457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117fa576117fa6117bb565b604052919050565b600067ffffffffffffffff82111561181c5761181c6117bb565b5060051b60200190565b600082601f83011261183757600080fd5b8151602061184c61184783611802565b6117d1565b82815260059290921b8401810191818101908684111561186b57600080fd5b8286015b84811015611886578051835291830191830161186f565b509695505050505050565b6000806000606084860312156118a657600080fd5b835167ffffffffffffffff808211156118be57600080fd5b818601915086601f8301126118d257600080fd5b815160206118e261184783611802565b82815260059290921b8401810191818101908a84111561190157600080fd5b948201945b83861015611928578551611919816115b2565b82529482019490820190611906565b9189015191975090935050508082111561194157600080fd5b5061194e86828701611826565b925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561198757600080fd5b815167ffffffffffffffff81111561199e57600080fd5b6119aa84828501611826565b949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082611a0c57611a0c611619565b500690565b6000600019821415611a2557611a256115e4565b506001019056fea164736f6c634300080a000a";

type BalancerLpTokenPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerLpTokenPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerLpTokenPriceOracle__factory extends ContractFactory {
  constructor(...args: BalancerLpTokenPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BalancerLpTokenPriceOracle> {
    return super.deploy(overrides || {}) as Promise<BalancerLpTokenPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerLpTokenPriceOracle {
    return super.attach(address) as BalancerLpTokenPriceOracle;
  }
  override connect(signer: Signer): BalancerLpTokenPriceOracle__factory {
    return super.connect(signer) as BalancerLpTokenPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerLpTokenPriceOracleInterface {
    return new utils.Interface(_abi) as BalancerLpTokenPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerLpTokenPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalancerLpTokenPriceOracle;
  }
}
