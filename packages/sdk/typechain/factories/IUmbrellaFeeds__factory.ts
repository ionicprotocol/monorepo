/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUmbrellaFeeds,
  IUmbrellaFeedsInterface,
} from "../IUmbrellaFeeds";

const _abi = [
  {
    type: "function",
    name: "DECIMALS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPrice",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "price",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceData",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct IUmbrellaFeeds.PriceData",
        components: [
          {
            name: "data",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "heartbeat",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "timestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceDataByName",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct IUmbrellaFeeds.PriceData",
        components: [
          {
            name: "data",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "heartbeat",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "timestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceDataRaw",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct IUmbrellaFeeds.PriceData",
        components: [
          {
            name: "data",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "heartbeat",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "timestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceTimestamp",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "price",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "timestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceTimestampHeartbeat",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "price",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "timestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "heartbeat",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceData",
    inputs: [
      {
        name: "_key",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IUmbrellaFeeds.PriceData",
        components: [
          {
            name: "data",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "heartbeat",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "timestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "prices",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct IUmbrellaFeeds.PriceData",
        components: [
          {
            name: "data",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "heartbeat",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "timestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IUmbrellaFeeds__factory {
  static readonly abi = _abi;
  static createInterface(): IUmbrellaFeedsInterface {
    return new utils.Interface(_abi) as IUmbrellaFeedsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUmbrellaFeeds {
    return new Contract(address, _abi, signerOrProvider) as IUmbrellaFeeds;
  }
}
