/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsClaimer,
  RewardsClaimerInterface,
} from "../RewardsClaimer";

const _abi = [
  {
    type: "function",
    name: "claimRewards",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardDestination",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rewardTokens",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setRewardDestination",
    inputs: [
      {
        name: "newDestination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ClaimRewards",
    inputs: [
      {
        name: "rewardToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardDestinationUpdate",
    inputs: [
      {
        name: "newDestination",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063372500ab146100515780637bb7bed11461005b5780638457d0671461008a578063fda45d861461009d575b600080fd5b6100596100b6565b005b61006e610069366004610555565b6101cf565b6040516001600160a01b03909116815260200160405180910390f35b61005961009836600461056e565b6101f9565b60005461006e906201000090046001600160a01b031681565b60015460005b818110156101cb576000600182815481106100d9576100d961059e565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a0823190602401602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015091906105b4565b600054909150610173906001600160a01b0384811691620100009004168361029f565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67826040516101ae91815260200190565b60405180910390a2505080806101c3906105cd565b9150506100bc565b5050565b600181815481106101df57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546201000090046001600160a01b0316331461024d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6000805462010000600160b01b031916620100006001600160a01b03841690810291909117825560405190917fb7e97ad603f12568684fc43c82127d953e94f3954cf36344cbbfa34d67b0b0cf91a250565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102f19084906102f6565b505050565b600061034b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103c89092919063ffffffff16565b8051909150156102f1578080602001905181019061036991906105f6565b6102f15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610244565b60606103d784846000856103df565b949350505050565b6060824710156104405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610244565b600080866001600160a01b0316858760405161045c9190610648565b60006040518083038185875af1925050503d8060008114610499576040519150601f19603f3d011682016040523d82523d6000602084013e61049e565b606091505b50915091506104af878383876104ba565b979650505050505050565b6060831561052657825161051f576001600160a01b0385163b61051f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610244565b50816103d7565b6103d7838381511561053b5781518083602001fd5b8060405162461bcd60e51b81526004016102449190610664565b60006020828403121561056757600080fd5b5035919050565b60006020828403121561058057600080fd5b81356001600160a01b038116811461059757600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105c657600080fd5b5051919050565b60006000198214156105ef57634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561060857600080fd5b8151801515811461059757600080fd5b60005b8381101561063357818101518382015260200161061b565b83811115610642576000848401525b50505050565b6000825161065a818460208701610618565b9190910192915050565b6020815260008251806020840152610683816040850160208701610618565b601f01601f1916919091016040019291505056fea164736f6c634300080a000a";

type RewardsClaimerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsClaimerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsClaimer__factory extends ContractFactory {
  constructor(...args: RewardsClaimerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RewardsClaimer> {
    return super.deploy(overrides || {}) as Promise<RewardsClaimer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardsClaimer {
    return super.attach(address) as RewardsClaimer;
  }
  override connect(signer: Signer): RewardsClaimer__factory {
    return super.connect(signer) as RewardsClaimer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsClaimerInterface {
    return new utils.Interface(_abi) as RewardsClaimerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsClaimer {
    return new Contract(address, _abi, signerOrProvider) as RewardsClaimer;
  }
}
