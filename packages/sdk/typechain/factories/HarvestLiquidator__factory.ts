/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HarvestLiquidator,
  HarvestLiquidatorInterface,
} from "../HarvestLiquidator";

const _abi = [
  {
    type: "function",
    name: "FARM",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "IFARM",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFarmVault",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806310badf4e1461008d5780634eac22eb146100bf578063b3a9992e146100f2575b600080fd5b60408051808201825260118152702430b93b32b9ba2634b8bab4b230ba37b960791b602082015290516100849190610288565b60405180910390f35b6100a061009b3660046102f3565b61010d565b604080516001600160a01b039093168352602083019190915201610084565b6100da731571ed0bed4d987fe2b498ddbae7dfa19519f65181565b6040516001600160a01b039091168152602001610084565b6100da73a0246c9032bc3a600820415ae600c6388619a14d81565b6000806001600160a01b038516731571ed0bed4d987fe2b498ddbae7dfa19519f651141561021957731571ed0bed4d987fe2b498ddbae7dfa19519f6516001600160a01b031663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561018457600080fd5b505af1158015610198573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273a0246c9032bc3a600820415ae600c6388619a14d94508492506370a082319150602401602060405180830381865afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021291906103cc565b9050610280565b60405162461bcd60e51b815260206004820152603260248201527f496e76616c696420746f6b656e20616464726573732070617373656420746f206044820152712430b93b32b9ba2634b8bab4b230ba37b91760711b606482015260840160405180910390fd5b935093915050565b600060208083528351808285015260005b818110156102b557858101830151858201604001528201610299565b818111156102c7576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561030857600080fd5b83356001600160a01b038116811461031f57600080fd5b925060208401359150604084013567ffffffffffffffff8082111561034357600080fd5b818601915086601f83011261035757600080fd5b813581811115610369576103696102dd565b604051601f8201601f19908116603f01168101908382118183101715610391576103916102dd565b816040528281528960208487010111156103aa57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156103de57600080fd5b505191905056fea164736f6c634300080a000a";

type HarvestLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HarvestLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HarvestLiquidator__factory extends ContractFactory {
  constructor(...args: HarvestLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HarvestLiquidator> {
    return super.deploy(overrides || {}) as Promise<HarvestLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HarvestLiquidator {
    return super.attach(address) as HarvestLiquidator;
  }
  override connect(signer: Signer): HarvestLiquidator__factory {
    return super.connect(signer) as HarvestLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HarvestLiquidatorInterface {
    return new utils.Interface(_abi) as HarvestLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HarvestLiquidator {
    return new Contract(address, _abi, signerOrProvider) as HarvestLiquidator;
  }
}
