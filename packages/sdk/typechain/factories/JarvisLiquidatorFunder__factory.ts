/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JarvisLiquidatorFunder,
  JarvisLiquidatorFunderInterface,
} from "../JarvisLiquidatorFunder";

const _abi = [
  {
    type: "function",
    name: "convert",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "estimateInputAmount",
    inputs: [
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c35806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806310badf4e1461009257806330132996146100c457806389eabf0214610092575b600080fd5b60408051808201825260168152752530b93b34b9a634b8bab4b230ba37b9233ab73232b960511b602082015290516100899190610850565b60405180910390f35b6100a56100a0366004610960565b6100d7565b604080516001600160a01b039093168352602083019190915201610089565b6100a56100d23660046109b9565b6100f1565b6000806100e5858585610389565b91509150935093915050565b6000806000808480602001905181019061010b9190610a00565b5091509150819350600060129050826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610173575060408051601f3d908101601f1916820190925261017091810190610a43565b60015b61017c5761017f565b90505b600061018c82600a610b69565b90506000839050806001600160a01b0316638230ecd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190610b78565b6001600160a01b0316876001600160a01b031614156102905760405163980f23c560e01b8152600481018390526000906001600160a01b0386169063980f23c5906024015b6040805180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a9190610b95565b509050610288838b83610822565b96505061037d565b806001600160a01b031663b2016bd46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610b78565b6001600160a01b0316876001600160a01b0316141561033b5760405163d668909f60e01b8152600481018390526000906001600160a01b0386169063d668909f9060240161023a565b60405162461bcd60e51b81526020600482015260136024820152723ab735b737bbb71034b7383aba103a37b5b2b760691b604482015260640160405180910390fd5b50505050509250929050565b6000806000838060200190518101906103a29190610a00565b5060405163095ea7b360e01b81526001600160a01b038083166004830152602482018990529193508392509088169063095ea7b3906044016020604051808303816000875af11580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610bb9565b506000816001600160a01b031663b2016bd46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561045e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104829190610b78565b90506000826001600160a01b0316638230ecd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e89190610b78565b9050806001600160a01b0316896001600160a01b031614156106ec578195506000836001600160a01b0316637b34ee7f6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610563575060408051601f3d908101601f1916820190925261056091810190610bdb565b60015b61056c5761056f565b90505b80156105e3576000846001600160a01b031662b9add76040518163ffffffff1660e01b815260040160408051808303816000875af11580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d99190610b95565b97506106e6915050565b60405163980f23c560e01b8152600481018a90526000906001600160a01b0386169063980f23c5906024016040805180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e9190610b95565b50604080516080810182528c8152602081018390524281830152306060820152905163525e6b1160e01b81529192506000916001600160a01b0388169163525e6b119161069e9190600401610bf4565b60408051808303816000875af11580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610b95565b50975050505b50610816565b816001600160a01b0316896001600160a01b0316141561033b578095506000836001600160a01b031663d668909f8a6040518263ffffffff1660e01b815260040161073991815260200190565b6040805180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610b95565b5060408051608081018252828152602081018c905242818301523060608201529051631347c9d760e31b81529192506000916001600160a01b03871691639a3e4eb8916107c99190600401610bf4565b60408051808303816000875af11580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b9190610b95565b509650610816915050565b50505050935093915050565b82820281151584158583048514171661083a57600080fd5b6001826001830304018115150290509392505050565b600060208083528351808285015260005b8181101561087d57858101830151858201604001528201610861565b8181111561088f576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146108ba57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108e457600080fd5b813567ffffffffffffffff808211156108ff576108ff6108bd565b604051601f8301601f19908116603f01168101908282118183101715610927576109276108bd565b8160405283815286602085880101111561094057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561097557600080fd5b8335610980816108a5565b925060208401359150604084013567ffffffffffffffff8111156109a357600080fd5b6109af868287016108d3565b9150509250925092565b600080604083850312156109cc57600080fd5b82359150602083013567ffffffffffffffff8111156109ea57600080fd5b6109f6858286016108d3565b9150509250929050565b600080600060608486031215610a1557600080fd5b8351610a20816108a5565b6020850151909350610a31816108a5565b80925050604084015190509250925092565b600060208284031215610a5557600080fd5b815160ff81168114610a6657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610abe578160001904821115610aa457610aa4610a6d565b80851615610ab157918102915b93841c9390800290610a88565b509250929050565b600082610ad557506001610b63565b81610ae257506000610b63565b8160018114610af85760028114610b0257610b1e565b6001915050610b63565b60ff841115610b1357610b13610a6d565b50506001821b610b63565b5060208310610133831016604e8410600b8410161715610b41575081810a610b63565b610b4b8383610a83565b8060001904821115610b5f57610b5f610a6d565b0290505b92915050565b6000610a6660ff841683610ac6565b600060208284031215610b8a57600080fd5b8151610a66816108a5565b60008060408385031215610ba857600080fd5b505080516020909101519092909150565b600060208284031215610bcb57600080fd5b81518015158114610a6657600080fd5b600060208284031215610bed57600080fd5b5051919050565b8151815260208083015190820152604080830151908201526060808301516001600160a01b03169082015260808101610b6356fea164736f6c634300080a000a";

type JarvisLiquidatorFunderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JarvisLiquidatorFunderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JarvisLiquidatorFunder__factory extends ContractFactory {
  constructor(...args: JarvisLiquidatorFunderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<JarvisLiquidatorFunder> {
    return super.deploy(overrides || {}) as Promise<JarvisLiquidatorFunder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JarvisLiquidatorFunder {
    return super.attach(address) as JarvisLiquidatorFunder;
  }
  override connect(signer: Signer): JarvisLiquidatorFunder__factory {
    return super.connect(signer) as JarvisLiquidatorFunder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JarvisLiquidatorFunderInterface {
    return new utils.Interface(_abi) as JarvisLiquidatorFunderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JarvisLiquidatorFunder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JarvisLiquidatorFunder;
  }
}
