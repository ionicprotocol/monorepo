/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FlywheelStaticRewards,
  FlywheelStaticRewardsInterface,
} from "../FlywheelStaticRewards";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_flywheel",
        type: "address",
        internalType: "contract FlywheelCore",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_authority",
        type: "address",
        internalType: "contract Authority",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authority",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract Authority",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "flywheel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract FlywheelCore",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccruedRewards",
    inputs: [
      {
        name: "strategy",
        type: "address",
        internalType: "contract ERC20",
      },
      {
        name: "lastUpdatedTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rewardToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rewardsInfo",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ERC20",
      },
    ],
    outputs: [
      {
        name: "rewardsPerSecond",
        type: "uint224",
        internalType: "uint224",
      },
      {
        name: "rewardsEndTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAuthority",
    inputs: [
      {
        name: "newAuthority",
        type: "address",
        internalType: "contract Authority",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsInfo",
    inputs: [
      {
        name: "strategy",
        type: "address",
        internalType: "contract ERC20",
      },
      {
        name: "rewards",
        type: "tuple",
        internalType: "struct FlywheelStaticRewards.RewardsInfo",
        components: [
          {
            name: "rewardsPerSecond",
            type: "uint224",
            internalType: "uint224",
          },
          {
            name: "rewardsEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AuthorityUpdated",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newAuthority",
        type: "address",
        indexed: true,
        internalType: "contract Authority",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerUpdated",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsInfoUpdate",
    inputs: [
      {
        name: "strategy",
        type: "address",
        indexed: true,
        internalType: "contract ERC20",
      },
      {
        name: "rewardsPerSecond",
        type: "uint224",
        indexed: false,
        internalType: "uint224",
      },
      {
        name: "rewardsEndTimestamp",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "FlywheelError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b61380380610b6183398101604081905261002f91610211565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051859285928592909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610144919061025e565b6001600160a01b038116608081905290915061016e9083600019610178602090811b61056717901c565b5050505050610282565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101f35760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461020e57600080fd5b50565b60008060006060848603121561022657600080fd5b8351610231816101f9565b6020850151909350610242816101f9565b6040850151909250610253816101f9565b809150509250925092565b60006020828403121561027057600080fd5b815161027b816101f9565b9392505050565b60805160a0516108b46102ad6000396000818160c501526104630152600061016301526108b46000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b262cc6e11610066578063b262cc6e14610117578063b334db7b1461012a578063bf7e214f1461014b578063f7c618c11461015e578063fc56a8131461018557600080fd5b806313af4035146100985780637a9e5e4b146100ad5780637acf5b92146100c05780638da5cb5b14610104575b600080fd5b6100ab6100a63660046106a6565b6101e1565b005b6100ab6100bb3660046106a6565b610282565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100e7906001600160a01b031681565b6100ab6101253660046106ca565b61036c565b61013d61013836600461071d565b610456565b6040519081526020016100fb565b6001546100e7906001600160a01b031681565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6101bd6101933660046106a6565b6002602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016100fb565b6101f7336000356001600160e01b0319166105e4565b6102375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331480610317575060015460405163b700961360e01b81526001600160a01b039091169063b7009613906102d690339030906001600160e01b03196000351690600401610756565b602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610783565b61032057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b610382336000356001600160e01b0319166105e4565b6103bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161022e565b6001600160a01b038216600090815260026020526040902081906103e182826107ba565b50506001600160a01b0382167fcc8ac5e3ee055e8954322366397250c104503ddae709698089ea0c0cfa8da89161041b60208401846107fc565b61042b6040850160208601610819565b604080516001600160e01b03909316835263ffffffff90911660208301520160405180910390a25050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a15760405163739e221160e01b815260040160405180910390fd5b6001600160a01b03831660009081526002602090815260408083208151808301909252546001600160e01b0381168252600160e01b900463ffffffff16918101829052919015806104fb575042826020015163ffffffff16115b156105175761051063ffffffff85164261084c565b9050610548565b8363ffffffff16826020015163ffffffff1611156105485783826020015161053f9190610863565b63ffffffff1690505b815161055e9082906001600160e01b0316610888565b95945050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806105de5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161022e565b50505050565b6001546000906001600160a01b0316801580159061066e575060405163b700961360e01b81526001600160a01b0382169063b70096139061062d90879030908890600401610756565b602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610783565b8061068657506000546001600160a01b038581169116145b949350505050565b6001600160a01b03811681146106a357600080fd5b50565b6000602082840312156106b857600080fd5b81356106c38161068e565b9392505050565b60008082840360608112156106de57600080fd5b83356106e98161068e565b92506040601f19820112156106fd57600080fd5b506020830190509250929050565b63ffffffff811681146106a357600080fd5b6000806040838503121561073057600080fd5b823561073b8161068e565b9150602083013561074b8161070b565b809150509250929050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561079557600080fd5b815180151581146106c357600080fd5b6001600160e01b03811681146106a357600080fd5b81356107c5816107a5565b81546001600160e01b03199081166001600160e01b0392909216918217835560208401356107f28161070b565b60e01b1617905550565b60006020828403121561080e57600080fd5b81356106c3816107a5565b60006020828403121561082b57600080fd5b81356106c38161070b565b634e487b7160e01b600052601160045260246000fd5b60008282101561085e5761085e610836565b500390565b600063ffffffff8381169083168181101561088057610880610836565b039392505050565b60008160001904831182151516156108a2576108a2610836565b50029056fea164736f6c634300080a000a";

type FlywheelStaticRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlywheelStaticRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlywheelStaticRewards__factory extends ContractFactory {
  constructor(...args: FlywheelStaticRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _flywheel: string,
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string }
  ): Promise<FlywheelStaticRewards> {
    return super.deploy(
      _flywheel,
      _owner,
      _authority,
      overrides || {}
    ) as Promise<FlywheelStaticRewards>;
  }
  override getDeployTransaction(
    _flywheel: string,
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _flywheel,
      _owner,
      _authority,
      overrides || {}
    );
  }
  override attach(address: string): FlywheelStaticRewards {
    return super.attach(address) as FlywheelStaticRewards;
  }
  override connect(signer: Signer): FlywheelStaticRewards__factory {
    return super.connect(signer) as FlywheelStaticRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlywheelStaticRewardsInterface {
    return new utils.Interface(_abi) as FlywheelStaticRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlywheelStaticRewards {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FlywheelStaticRewards;
  }
}
