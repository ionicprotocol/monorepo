/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LeveredPositionsLens,
  LeveredPositionsLensInterface,
} from "../LeveredPositionsLens";

const _abi = [
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILeveredPositionFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowRateAtRatio",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_equityAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_targetLeverageRatio",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowableMarketsAndRates",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "markets",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "underlyings",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "underlyingsPrices",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "names",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "symbols",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "rates",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "decimals",
        type: "uint8[]",
        internalType: "uint8[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCollateralMarkets",
    inputs: [],
    outputs: [
      {
        name: "markets",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "poolOfMarket",
        type: "address[]",
        internalType: "contract IonicComptroller[]",
      },
      {
        name: "underlyings",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "underlyingPrices",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "names",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "symbols",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "decimals",
        type: "uint8[]",
        internalType: "uint8[]",
      },
      {
        name: "totalUnderlyingSupplied",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ratesPerBlock",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLeverageRatioAfterFunding",
    inputs: [
      {
        name: "pos",
        type: "address",
        internalType: "contract LeveredPosition",
      },
      {
        name: "newFunding",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNetAPY",
    inputs: [
      {
        name: "_supplyAPY",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_supplyAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_targetLeverageRatio",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "netAPY",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNetApyForPosition",
    inputs: [
      {
        name: "pos",
        type: "address",
        internalType: "contract LeveredPosition",
      },
      {
        name: "supplyAPY",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNetApyForPositionAfterFunding",
    inputs: [
      {
        name: "pos",
        type: "address",
        internalType: "contract LeveredPosition",
      },
      {
        name: "supplyAPY",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newFunding",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionInfo",
    inputs: [
      {
        name: "pos",
        type: "address",
        internalType: "contract LeveredPosition",
      },
      {
        name: "supplyApy",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "info",
        type: "tuple",
        internalType: "struct LeveredPositionsLens.PositionInfo",
        components: [
          {
            name: "collateralAssetPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowedAssetPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionSupplyAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "equityAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "equityValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currentApy",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "debtRatio",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "liquidationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyBuffer",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionsInfo",
    inputs: [
      {
        name: "positions",
        type: "address[]",
        internalType: "contract LeveredPosition[]",
      },
      {
        name: "supplyApys",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "infos",
        type: "tuple[]",
        internalType: "struct LeveredPositionsLens.PositionInfo[]",
        components: [
          {
            name: "collateralAssetPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowedAssetPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionSupplyAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "equityAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "equityValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currentApy",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "debtRatio",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "liquidationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyBuffer",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_factory",
        type: "address",
        internalType: "contract ILeveredPositionFactory",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "reinitialize",
    inputs: [
      {
        name: "_factory",
        type: "address",
        internalType: "contract ILeveredPositionFactory",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "";

type LeveredPositionsLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveredPositionsLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeveredPositionsLens__factory extends ContractFactory {
  constructor(...args: LeveredPositionsLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<LeveredPositionsLens> {
    return super.deploy(overrides || {}) as Promise<LeveredPositionsLens>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LeveredPositionsLens {
    return super.attach(address) as LeveredPositionsLens;
  }
  override connect(signer: Signer): LeveredPositionsLens__factory {
    return super.connect(signer) as LeveredPositionsLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveredPositionsLensInterface {
    return new utils.Interface(_abi) as LeveredPositionsLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveredPositionsLens {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LeveredPositionsLens;
  }
}
