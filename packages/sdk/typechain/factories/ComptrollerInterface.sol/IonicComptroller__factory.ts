/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IonicComptroller,
  IonicComptrollerInterface,
} from "../../ComptrollerInterface.sol/IonicComptroller";

const _abi = [
  {
    type: "function",
    name: "_acceptAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_addRewardsDistributor",
    inputs: [
      {
        name: "distributor",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_afterNonReentrant",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_becomeImplementation",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_beforeNonReentrant",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_blacklistBorrowingAgainstCollateral",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "blacklisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_blacklistBorrowingAgainstCollateralWhitelist",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_borrowCapWhitelist",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_deployMarket",
    inputs: [
      {
        name: "delegateType",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "constructorData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "becomeImplData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "collateralFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_removeFlywheel",
    inputs: [
      {
        name: "flywheelAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapForCollateral",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrowCap",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapForCollateralWhitelist",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapGuardian",
    inputs: [
      {
        name: "newBorrowCapGuardian",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setCloseFactor",
    inputs: [
      {
        name: "newCloseFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setCollateralFactor",
    inputs: [
      {
        name: "market",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "newCollateralFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setLiquidationIncentive",
    inputs: [
      {
        name: "newLiquidationIncentiveMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMarketBorrowCaps",
    inputs: [
      {
        name: "cTokens",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
      {
        name: "newBorrowCaps",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMarketSupplyCaps",
    inputs: [
      {
        name: "cTokens",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
      {
        name: "newSupplyCaps",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMintPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPauseGuardian",
    inputs: [
      {
        name: "newPauseGuardian",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingAdmin",
    inputs: [
      {
        name: "newPendingAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPriceOracle",
    inputs: [
      {
        name: "newOracle",
        type: "address",
        internalType: "contract BasePriceOracle",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setSeizePaused",
    inputs: [
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setTransferPaused",
    inputs: [
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setWhitelistEnforcement",
    inputs: [
      {
        name: "enforce",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setWhitelistStatuses",
    inputs: [
      {
        name: "_suppliers",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "statuses",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_supplyCapWhitelist",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_toggleAdminRights",
    inputs: [
      {
        name: "hasRights",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_unsupportMarket",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_upgrade",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "accountAssets",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addNonAccruingFlywheel",
    inputs: [
      {
        name: "flywheelAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "adminHasRights",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAllowed",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowCapForCollateral",
    inputs: [
      {
        name: "borrowed",
        type: "address",
        internalType: "address",
      },
      {
        name: "collateral",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowCaps",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowGuardianPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowWithinLimits",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "accountBorrowsNew",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowingAgainstCollateralBlacklist",
    inputs: [
      {
        name: "borrowed",
        type: "address",
        internalType: "address",
      },
      {
        name: "collateral",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cTokensByUnderlying",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkMembership",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "closeFactorMantissa",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "comptrollerImplementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enforceWhitelist",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enterMarkets",
    inputs: [
      {
        name: "cTokens",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exitMarket",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAccountLiquidity",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "error",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "shortfall",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccruingFlywheels",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllBorrowers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllBorrowersCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllMarkets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAssetAsCollateralValueCap",
    inputs: [
      {
        name: "collateral",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "cTokenModify",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "redeeming",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAssetsIn",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getHypotheticalAccountLiquidity",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenModify",
        type: "address",
        internalType: "address",
      },
      {
        name: "redeemTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrowAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxRedeemOrBorrow",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "isBorrow",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPaginatedBorrowers",
    inputs: [
      {
        name: "page",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pageSize",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_totalPages",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_pageOfBorrowers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRewardsDistributors",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelist",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedBorrowersBorrows",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "borrowed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedSuppliersSupply",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "supplied",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ionicAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ionicAdminHasRights",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBlacklistBorrowingAgainstCollateralWhitelisted",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowCapForCollateralWhitelisted",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowCapWhitelisted",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isDeprecated",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSupplyCapWhitelisted",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isUserOfPool",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidateBorrowAllowed",
    inputs: [
      {
        name: "cTokenBorrowed",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "liquidator",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateCalculateSeizeTokens",
    inputs: [
      {
        name: "cTokenBorrowed",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidationIncentiveMantissa",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "markets",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintAllowed",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "minter",
        type: "address",
        internalType: "address",
      },
      {
        name: "mintAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintGuardianPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintVerify",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "minter",
        type: "address",
        internalType: "address",
      },
      {
        name: "actualMintAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "mintTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "oracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract BasePriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauseGuardian",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redeemAllowed",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "redeemer",
        type: "address",
        internalType: "address",
      },
      {
        name: "redeemTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeemVerify",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "redeemer",
        type: "address",
        internalType: "address",
      },
      {
        name: "redeemAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "redeemTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerInSFS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayBorrowAllowed",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "payer",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
      {
        name: "repayAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsDistributors",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "seizeAllowed",
    inputs: [
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenBorrowed",
        type: "address",
        internalType: "address",
      },
      {
        name: "liquidator",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
      {
        name: "seizeTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "suppliers",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supplyCaps",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferAllowed",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "src",
        type: "address",
        internalType: "address",
      },
      {
        name: "dst",
        type: "address",
        internalType: "address",
      },
      {
        name: "transferTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelist",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IonicComptroller__factory {
  static readonly abi = _abi;
  static createInterface(): IonicComptrollerInterface {
    return new utils.Interface(_abi) as IonicComptrollerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IonicComptroller {
    return new Contract(address, _abi, signerOrProvider) as IonicComptroller;
  }
}
