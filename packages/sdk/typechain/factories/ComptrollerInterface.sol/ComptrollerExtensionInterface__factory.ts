/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ComptrollerExtensionInterface,
  ComptrollerExtensionInterfaceInterface,
} from "../../ComptrollerInterface.sol/ComptrollerExtensionInterface";

const _abi = [
  {
    type: "function",
    name: "_blacklistBorrowingAgainstCollateral",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "blacklisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_blacklistBorrowingAgainstCollateralWhitelist",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_borrowCapWhitelist",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_removeFlywheel",
    inputs: [
      {
        name: "flywheelAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapForCollateral",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrowCap",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapForCollateralWhitelist",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowCapGuardian",
    inputs: [
      {
        name: "newBorrowCapGuardian",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setBorrowPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMarketBorrowCaps",
    inputs: [
      {
        name: "cTokens",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
      {
        name: "newBorrowCaps",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMarketSupplyCaps",
    inputs: [
      {
        name: "cTokens",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
      {
        name: "newSupplyCaps",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setMintPaused",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPauseGuardian",
    inputs: [
      {
        name: "newPauseGuardian",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setSeizePaused",
    inputs: [
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setTransferPaused",
    inputs: [
      {
        name: "state",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_supplyCapWhitelist",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_unsupportMarket",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addNonAccruingFlywheel",
    inputs: [
      {
        name: "flywheelAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAccruingFlywheels",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllBorrowers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllBorrowersCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllMarkets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract ICErc20[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAssetAsCollateralValueCap",
    inputs: [
      {
        name: "collateral",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "cTokenModify",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "redeeming",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPaginatedBorrowers",
    inputs: [
      {
        name: "page",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pageSize",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_totalPages",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_pageOfBorrowers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRewardsDistributors",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelist",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedBorrowersBorrows",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "borrowed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedSuppliersSupply",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "supplied",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBlacklistBorrowingAgainstCollateralWhitelisted",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowCapForCollateralWhitelisted",
    inputs: [
      {
        name: "cTokenBorrow",
        type: "address",
        internalType: "address",
      },
      {
        name: "cTokenCollateral",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowCapWhitelisted",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSupplyCapWhitelisted",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerInSFS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ComptrollerExtensionInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ComptrollerExtensionInterfaceInterface {
    return new utils.Interface(_abi) as ComptrollerExtensionInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerExtensionInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ComptrollerExtensionInterface;
  }
}
