/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../MockPriceOracle";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_maxSecondsBeforePriceIsStale",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasPriceFeed",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "maxSecondsBeforePriceIsStale",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102da3803806102da83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b61027b8061005f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b7983a214610051578063aea910781461007a578063e073a2411461009b578063fc57d4df146100a4575b600080fd5b61006561005f3660046101bf565b50600190565b60405190151581526020015b60405180910390f35b61008d6100883660046101bf565b6100bf565b604051908152602001610071565b61008d60005481565b61008d6100b23660046101bf565b50670de0b6b3a764000090565b60006100ca826100d0565b92915050565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03831614156101065750670de0b6b3a7640000919050565b60016000610112610144565b9050670de0b6b3a76400008161012884836101f9565b610132919061022e565b61013c919061022e565b949350505050565b6000806063423360405160200161017792919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c61019a9190610242565b90506100ca816001610256565b6001600160a01b03811681146101bc57600080fd5b50565b6000602082840312156101d157600080fd5b81356101dc816101a7565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610213576102136101e3565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261023d5761023d610218565b500490565b60008261025157610251610218565b500690565b60008219821115610269576102696101e3565b50019056fea164736f6c634300080a000a";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSecondsBeforePriceIsStale: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<MockPriceOracle> {
    return super.deploy(
      _maxSecondsBeforePriceIsStale,
      overrides || {}
    ) as Promise<MockPriceOracle>;
  }
  override getDeployTransaction(
    _maxSecondsBeforePriceIsStale: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxSecondsBeforePriceIsStale,
      overrides || {}
    );
  }
  override attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  override connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new utils.Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}
