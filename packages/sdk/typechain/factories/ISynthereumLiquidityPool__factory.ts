/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISynthereumLiquidityPool,
  ISynthereumLiquidityPoolInterface,
} from "../ISynthereumLiquidityPool";

const _abi = [
  {
    type: "function",
    name: "claimFee",
    inputs: [],
    outputs: [
      {
        name: "feeClaimed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralCoverage",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralRequirement",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collateralToken",
    inputs: [],
    outputs: [
      {
        name: "collateralCurrency",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decreaseCollateral",
    inputs: [
      {
        name: "collateralToDecrease",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralToWithdraw",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "newTotalCollateral",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyShutdown",
    inputs: [],
    outputs: [
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyShutdownPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "emergencyShutdownTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "feePercentage",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "feeRecipientsInfo",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "",
        type: "uint32[]",
        internalType: "uint32[]",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMintTradeInfo",
    inputs: [
      {
        name: "inputCollateral",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "synthTokensReceived",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feePaid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRedeemTradeInfo",
    inputs: [
      {
        name: "syntheticTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "collateralAmountReceived",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feePaid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "increaseCollateral",
    inputs: [
      {
        name: "collateralToTransfer",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralToIncrease",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "newTotalCollateral",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidate",
    inputs: [
      {
        name: "numSynthTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "synthTokensLiquidated",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralReceived",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "rewardAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidationReward",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "mintParams",
        type: "tuple",
        internalType: "struct ISynthereumLiquidityPool.MintParams",
        components: [
          {
            name: "minNumTokens",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiration",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "syntheticTokensMinted",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feePaid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "redeemParams",
        type: "tuple",
        internalType: "struct ISynthereumLiquidityPool.RedeemParams",
        components: [
          {
            name: "numTokens",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minCollateral",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiration",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "collateralRedeemed",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feePaid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFeePercentage",
    inputs: [
      {
        name: "_feePercentage",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFeeRecipients",
    inputs: [
      {
        name: "feeRecipients",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "feeProportions",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidationReward",
    inputs: [
      {
        name: "_liquidationReward",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOverCollateralization",
    inputs: [
      {
        name: "_overCollateralization",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settleEmergencyShutdown",
    inputs: [],
    outputs: [
      {
        name: "synthTokensSettled",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralSettled",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "synthereumFinder",
    inputs: [],
    outputs: [
      {
        name: "finder",
        type: "address",
        internalType: "contract ISynthereumFinder",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "syntheticToken",
    inputs: [],
    outputs: [
      {
        name: "syntheticCurrency",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "syntheticTokenSymbol",
    inputs: [],
    outputs: [
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalCollateralAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalFeeAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSyntheticTokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "userFee",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "poolVersion",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawLiquidity",
    inputs: [
      {
        name: "collateralAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "remainingLiquidity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ISynthereumLiquidityPool__factory {
  static readonly abi = _abi;
  static createInterface(): ISynthereumLiquidityPoolInterface {
    return new utils.Interface(_abi) as ISynthereumLiquidityPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISynthereumLiquidityPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISynthereumLiquidityPool;
  }
}
