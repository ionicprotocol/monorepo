/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveLpTokenLiquidatorNoRegistry,
  CurveLpTokenLiquidatorNoRegistryInterface,
} from "../../CurveLpTokenLiquidatorNoRegistry.sol/CurveLpTokenLiquidatorNoRegistry";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610588806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b60408051808201825260208082527f43757276654c70546f6b656e4c697175696461746f724e6f526567697374727990820152905161007a9190610373565b60405180910390f35b6100966100913660046103f6565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b6000806000806000858060200190518101906100d191906104c3565b60405163988b1fa760e01b81526001600160a01b038c81166004830152939650919450925082916000919083169063988b1fa790602401602060405180830381865afa158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610510565b905060ff60005b60ff82811614156101f85760405163c661065760e01b815260ff821660048201526001600160a01b0384169063c661065790602401602060405180830381865afa9250505080156101be575060408051601f3d908101601f191682019092526101bb91810190610510565b60015b6101c7576101f8565b876001600160a01b0316816001600160a01b031614156101e5578192505b50806101f081610534565b915050610150565b604051630d2680e960e11b8152600481018c9052600083900b6024820152600160448201526001600160a01b03841690631a4d01d290606401600060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506001600160a01b0387161580610295575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038816145b156102f657856001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b50505050508598506102fa565b8698505b6040516370a0823160e01b81523060048201526001600160a01b038a16906370a0823190602401602060405180830381865afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190610562565b975050505050505050935093915050565b600060208083528351808285015260005b818110156103a057858101830151858201604001528201610384565b818111156103b2576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146103dd57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561040b57600080fd5b8335610416816103c8565b925060208401359150604084013567ffffffffffffffff8082111561043a57600080fd5b818601915086601f83011261044e57600080fd5b813581811115610460576104606103e0565b604051601f8201601f19908116603f01168101908382118183101715610488576104886103e0565b816040528281528960208487010111156104a157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806000606084860312156104d857600080fd5b83516104e3816103c8565b60208501519093506104f4816103c8565b6040850151909250610505816103c8565b809150509250925092565b60006020828403121561052257600080fd5b815161052d816103c8565b9392505050565b600060ff821660ff81141561055957634e487b7160e01b600052601160045260246000fd5b60010192915050565b60006020828403121561057457600080fd5b505191905056fea164736f6c634300080a000a";

type CurveLpTokenLiquidatorNoRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveLpTokenLiquidatorNoRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveLpTokenLiquidatorNoRegistry__factory extends ContractFactory {
  constructor(...args: CurveLpTokenLiquidatorNoRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CurveLpTokenLiquidatorNoRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<CurveLpTokenLiquidatorNoRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveLpTokenLiquidatorNoRegistry {
    return super.attach(address) as CurveLpTokenLiquidatorNoRegistry;
  }
  override connect(signer: Signer): CurveLpTokenLiquidatorNoRegistry__factory {
    return super.connect(signer) as CurveLpTokenLiquidatorNoRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveLpTokenLiquidatorNoRegistryInterface {
    return new utils.Interface(
      _abi
    ) as CurveLpTokenLiquidatorNoRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveLpTokenLiquidatorNoRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveLpTokenLiquidatorNoRegistry;
  }
}
