/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GammaPoolUniswapV3PriceOracle,
  GammaPoolUniswapV3PriceOracleInterface,
} from "../../GammaPoolPriceOracle.sol/GammaPoolUniswapV3PriceOracle";

const _abi = [
  {
    type: "function",
    name: "WTOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_getPositionAtPrice",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "sqrtRatioX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_wtoken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611be5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4d66de811610071578063c4d66de81461012d578063e30c397814610140578063f2fde38b14610153578063fc4d33f914610166578063fc57d4df1461016e578063fe4e026c1461018157600080fd5b80635bcf1f76146100ae5780636e96dfd7146100de578063715018a6146100f35780638da5cb5b146100fb578063aea910781461010c575b600080fd5b6066546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec366004611849565b6101a9565b005b6100f1610213565b6033546001600160a01b03166100c1565b61011f61011a366004611849565b61025b565b6040519081526020016100d5565b6100f161013b366004611849565b61026c565b6065546100c1906001600160a01b031681565b6100f1610161366004611849565b610396565b6100f1610407565b61011f61017c366004611849565b61051b565b61019461018f366004611875565b61061e565b604080519283526020830191909152016100d5565b6101b1610680565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b61021b610680565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6000610266826106dc565b92915050565b600054610100900460ff161580801561028c5750600054600160ff909116105b806102a65750303b1580156102a6575060005460ff166001145b6103095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610252565b6000805460ff19166001179055801561032c576000805461ff0019166101001790555b61033533610ec7565b606680546001600160a01b0319166001600160a01b0384161790558015610392576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610207565b5050565b61039e610680565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146104595760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610252565b600061046d6033546001600160a01b031690565b6065549091506001600160a01b031661048581610f02565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610207565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058091906118e6565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190611903565b6105f29060ff16600a611a20565b6105fb826106dc565b61060d90670de0b6b3a7640000611a2c565b6106179190611a61565b9392505050565b600080600080600061063286888c8c610f54565b9250925092506106448a8a858b611023565b909550935061065c6001600160801b03831686611a83565b94506106716001600160801b03821685611a83565b93505050509550959350505050565b6033546001600160a01b031633146106da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b565b6000808290506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074691906118e6565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906118e6565b6040516315d5220f60e31b81526001600160a01b0384166004820152909150600090339063aea9107890602401602060405180830381865afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611a9b565b6040516315d5220f60e31b81526001600160a01b0384166004820152909150600090339063aea9107890602401602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190611a9b565b905060006109a6603061099f866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611903565b61090190600a611ab4565b61090b9086611a2c565b886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190611903565b61097890600a611ab4565b6109829088611a2c565b61099090600160601b611a2c565b61099a9190611a61565b611050565b901b6111ce565b9050600080610b9f83896001600160a01b03166351e87af76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611ac3565b8a6001600160a01b0316630f35bcac6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190611ac3565b8b6001600160a01b031663fa0827436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad59190611ac3565b8c6001600160a01b031663888a91346040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611ac3565b8f8e6001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906118e6565b611243565b6040516370a0823160e01b81526001600160a01b038d811660048301529294509092506000918491908a16906370a0823190602401602060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190611a9b565b610c1f9190611a83565b6040516370a0823160e01b81526001600160a01b038d811660048301529192506000918491908a16906370a0823190602401602060405180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c929190611a9b565b610c9c9190611a83565b9050886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d009190611903565b610d0e9060ff166012611ae0565b610d1990600a611a20565b610d239083611a2c565b9150876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611903565b610d959060ff166012611ae0565b610da090600a611a20565b610daa9082611a2c565b90506000821180610dbb5750600081115b610e2d5760405162461bcd60e51b815260206004820152603860248201527f47616d6d6120756e6465726c79696e6720746f6b656e2062616c616e6365732060448201527f6e6f7420626f74682067726561746572207468616e20302e00000000000000006064820152608401610252565b8b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190611a9b565b610e998288611a2c565b610ea3848a611a2c565b610ead9190611a83565b610eb79190611a61565b9c9b505050505050505050505050565b600054610100900460ff16610eee5760405162461bcd60e51b815260040161025290611af7565b610ef6611297565b610eff81610f02565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516bffffffffffffffffffffffff19606085901b16602082015260e883811b603483015282901b6037820152600090819081908190603a0160408051808303601f1901815290829052805160209091012063514ea4bf60e01b82526004820181905291506001600160a01b0389169063514ea4bf9060240160a060405180830381865afa158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190611b59565b939c909b5092995091975050505050505050565b60008061104283611033886112c6565b61103c886112c6565b876115f9565b915091505b94509492505050565b60008161105f57506000919050565b816001600160801b82106110785760809190911c9060401b5b6801000000000000000082106110935760409190911c9060201b5b64010000000082106110aa5760209190911c9060101b5b6201000082106110bf5760109190911c9060081b5b61010082106110d35760089190911c9060041b5b601082106110e65760049190911c9060021b5b600882106110f25760011b5b60016110fe8286611a61565b6111089083611a83565b901c905060016111188286611a61565b6111229083611a83565b901c905060016111328286611a61565b61113c9083611a83565b901c9050600161114c8286611a61565b6111569083611a83565b901c905060016111668286611a61565b6111709083611a83565b901c905060016111808286611a61565b61118a9083611a83565b901c9050600161119a8286611a61565b6111a49083611a83565b901c905060006111b48286611a61565b90508082106111c357806111c5565b815b95945050505050565b806001600160a01b038116811461123e5760405162461bcd60e51b815260206004820152602e60248201527f4f766572666c6f77207768656e20636f6e76657274696e672075696e7432353660448201526d1034b73a37903ab4b73a189b181760911b6064820152608401610252565b919050565b60008060008061125688888d898961061e565b9150915060008061126a8c8c8f8b8b61061e565b90925090506112798285611a83565b6112838285611a83565b955095505050505097509795505050505050565b600054610100900460ff166112be5760405162461bcd60e51b815260040161025290611af7565b6106da611694565b60008060008360020b126112dd578260020b6112e5565b8260020b6000035b9050620d89e881111561131e5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610252565b60006001821661133257600160801b611344565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611378576ffff97272373d413259a46990580e213a0260801c5b6004821615611397576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156113b6576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156113d5576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156113f4576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611413576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611432576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611452576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611472576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611492576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156114b2576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156114d2576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156114f2576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611512576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611532576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611553576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611573576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611592576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156115af576b048a170391f7dc42444e8fa20260801c5b60008460020b13156115d05780600019816115cc576115cc611a4b565b0490505b6401000000008106156115e45760016115e7565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b0316111561161a579293925b846001600160a01b0316866001600160a01b0316116116455761163e8585856116c4565b9150611047565b836001600160a01b0316866001600160a01b0316101561167e5761166a8685856116c4565b915061167785878561173f565b9050611047565b61168985858561173f565b905094509492505050565b600054610100900460ff166116bb5760405162461bcd60e51b815260040161025290611af7565b6106da33610f02565b6000826001600160a01b0316846001600160a01b031611156116e4579192915b6001600160a01b03841661172d6fffffffffffffffffffffffffffffffff60601b606085901b166117158787611bb0565b6001600160a01b0316866001600160a01b0316611785565b6117379190611a61565b949350505050565b6000826001600160a01b0316846001600160a01b0316111561175f579192915b6117376001600160801b0383166117768686611bb0565b6001600160a01b0316600160601b5b6000808060001985870985870292508281108382030391505080600014156117bf57600084116117b457600080fd5b508290049050610617565b8084116117cb57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b0381168114610eff57600080fd5b60006020828403121561185b57600080fd5b813561061781611834565b8060020b8114610eff57600080fd5b600080600080600060a0868803121561188d57600080fd5b853561189881611866565b945060208601356118a881611866565b935060408601356118b881611834565b925060608601356118c881611834565b915060808601356118d881611834565b809150509295509295909350565b6000602082840312156118f857600080fd5b815161061781611834565b60006020828403121561191557600080fd5b815160ff8116811461061757600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561197757816000190482111561195d5761195d611926565b8085161561196a57918102915b93841c9390800290611941565b509250929050565b60008261198e57506001610266565b8161199b57506000610266565b81600181146119b157600281146119bb576119d7565b6001915050610266565b60ff8411156119cc576119cc611926565b50506001821b610266565b5060208310610133831016604e8410600b84101617156119fa575081810a610266565b611a04838361193c565b8060001904821115611a1857611a18611926565b029392505050565b6000610617838361197f565b6000816000190483118215151615611a4657611a46611926565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611a7e57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611a9657611a96611926565b500190565b600060208284031215611aad57600080fd5b5051919050565b600061061760ff84168361197f565b600060208284031215611ad557600080fd5b815161061781611866565b600082821015611af257611af2611926565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80516001600160801b038116811461123e57600080fd5b600080600080600060a08688031215611b7157600080fd5b611b7a86611b42565b94506020860151935060408601519250611b9660608701611b42565b9150611ba460808701611b42565b90509295509295909350565b60006001600160a01b0383811690831681811015611bd057611bd0611926565b03939250505056fea164736f6c634300080a000a";

type GammaPoolUniswapV3PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GammaPoolUniswapV3PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GammaPoolUniswapV3PriceOracle__factory extends ContractFactory {
  constructor(...args: GammaPoolUniswapV3PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GammaPoolUniswapV3PriceOracle> {
    return super.deploy(
      overrides || {}
    ) as Promise<GammaPoolUniswapV3PriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GammaPoolUniswapV3PriceOracle {
    return super.attach(address) as GammaPoolUniswapV3PriceOracle;
  }
  override connect(signer: Signer): GammaPoolUniswapV3PriceOracle__factory {
    return super.connect(signer) as GammaPoolUniswapV3PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GammaPoolUniswapV3PriceOracleInterface {
    return new utils.Interface(_abi) as GammaPoolUniswapV3PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaPoolUniswapV3PriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GammaPoolUniswapV3PriceOracle;
  }
}
