/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GammaPoolAlgebraPriceOracle,
  GammaPoolAlgebraPriceOracleInterface,
} from "../../GammaPoolPriceOracle.sol/GammaPoolAlgebraPriceOracle";

const _abi = [
  {
    type: "function",
    name: "WTOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_getPositionAtPrice",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "sqrtRatioX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_wtoken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bd2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4d66de811610071578063c4d66de81461012d578063e30c397814610140578063f2fde38b14610153578063fc4d33f914610166578063fc57d4df1461016e578063fe4e026c1461018157600080fd5b80635bcf1f76146100ae5780636e96dfd7146100de578063715018a6146100f35780638da5cb5b146100fb578063aea910781461010c575b600080fd5b6066546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec36600461181b565b6101a9565b005b6100f1610213565b6033546001600160a01b03166100c1565b61011f61011a36600461181b565b61025b565b6040519081526020016100d5565b6100f161013b36600461181b565b61026c565b6065546100c1906001600160a01b031681565b6100f161016136600461181b565b610396565b6100f1610407565b61011f61017c36600461181b565b61051b565b61019461018f366004611847565b61061e565b604080519283526020830191909152016100d5565b6101b1610680565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b61021b610680565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6000610266826106dc565b92915050565b600054610100900460ff161580801561028c5750600054600160ff909116105b806102a65750303b1580156102a6575060005460ff166001145b6103095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610252565b6000805460ff19166001179055801561032c576000805461ff0019166101001790555b61033533610ec7565b606680546001600160a01b0319166001600160a01b0384161790558015610392576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610207565b5050565b61039e610680565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146104595760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610252565b600061046d6033546001600160a01b031690565b6065549091506001600160a01b031661048581610f02565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610207565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058091906118b8565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906118d5565b6105f29060ff16600a6119f2565b6105fb826106dc565b61060d90670de0b6b3a76400006119fe565b6106179190611a33565b9392505050565b600080600080600061063286888c8c610f54565b9250925092506106448a8a858b610ff5565b909550935061065c6001600160801b03831686611a55565b94506106716001600160801b03821685611a55565b93505050509550959350505050565b6033546001600160a01b031633146106da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b565b6000808290506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074691906118b8565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906118b8565b6040516315d5220f60e31b81526001600160a01b0384166004820152909150600090339063aea9107890602401602060405180830381865afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611a6d565b6040516315d5220f60e31b81526001600160a01b0384166004820152909150600090339063aea9107890602401602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190611a6d565b905060006109a6603061099f866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f691906118d5565b61090190600a611a86565b61090b90866119fe565b886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d91906118d5565b61097890600a611a86565b61098290886119fe565b61099090600160601b6119fe565b61099a9190611a33565b611022565b901b6111a0565b9050600080610b9f83896001600160a01b03166351e87af76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611a95565b8a6001600160a01b0316630f35bcac6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190611a95565b8b6001600160a01b031663fa0827436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad59190611a95565b8c6001600160a01b031663888a91346040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611a95565b8f8e6001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906118b8565b611215565b6040516370a0823160e01b81526001600160a01b038d811660048301529294509092506000918491908a16906370a0823190602401602060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190611a6d565b610c1f9190611a55565b6040516370a0823160e01b81526001600160a01b038d811660048301529192506000918491908a16906370a0823190602401602060405180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c929190611a6d565b610c9c9190611a55565b9050886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0091906118d5565b610d0e9060ff166012611ab2565b610d1990600a6119f2565b610d2390836119fe565b9150876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8791906118d5565b610d959060ff166012611ab2565b610da090600a6119f2565b610daa90826119fe565b90506000821180610dbb5750600081115b610e2d5760405162461bcd60e51b815260206004820152603860248201527f47616d6d6120756e6465726c79696e6720746f6b656e2062616c616e6365732060448201527f6e6f7420626f74682067726561746572207468616e20302e00000000000000006064820152608401610252565b8b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190611a6d565b610e9982886119fe565b610ea3848a6119fe565b610ead9190611a55565b610eb79190611a33565b9c9b505050505050505050505050565b600054610100900460ff16610eee5760405162461bcd60e51b815260040161025290611ac9565b610ef6611269565b610eff81610f02565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008062ffffff851662ffffff87168860181b1760181b179050876001600160a01b031663514ea4bf826040518263ffffffff1660e01b8152600401610f9f91815260200190565b60c060405180830381865afa158015610fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe09190611b2b565b949d909c50939a509298505050505050505050565b6000806110148361100588611298565b61100e88611298565b876115cb565b915091505b94509492505050565b60008161103157506000919050565b816001600160801b821061104a5760809190911c9060401b5b6801000000000000000082106110655760409190911c9060201b5b640100000000821061107c5760209190911c9060101b5b6201000082106110915760109190911c9060081b5b61010082106110a55760089190911c9060041b5b601082106110b85760049190911c9060021b5b600882106110c45760011b5b60016110d08286611a33565b6110da9083611a55565b901c905060016110ea8286611a33565b6110f49083611a55565b901c905060016111048286611a33565b61110e9083611a55565b901c9050600161111e8286611a33565b6111289083611a55565b901c905060016111388286611a33565b6111429083611a55565b901c905060016111528286611a33565b61115c9083611a55565b901c9050600161116c8286611a33565b6111769083611a55565b901c905060006111868286611a33565b90508082106111955780611197565b815b95945050505050565b806001600160a01b03811681146112105760405162461bcd60e51b815260206004820152602e60248201527f4f766572666c6f77207768656e20636f6e76657274696e672075696e7432353660448201526d1034b73a37903ab4b73a189b181760911b6064820152608401610252565b919050565b60008060008061122888888d898961061e565b9150915060008061123c8c8c8f8b8b61061e565b909250905061124b8285611a55565b6112558285611a55565b955095505050505097509795505050505050565b600054610100900460ff166112905760405162461bcd60e51b815260040161025290611ac9565b6106da611666565b60008060008360020b126112af578260020b6112b7565b8260020b6000035b9050620d89e88111156112f05760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610252565b60006001821661130457600160801b611316565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561134a576ffff97272373d413259a46990580e213a0260801c5b6004821615611369576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611388576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156113a7576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156113c6576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156113e5576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611404576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611424576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611444576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611464576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611484576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156114a4576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156114c4576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156114e4576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611504576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611525576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611545576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611564576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611581576b048a170391f7dc42444e8fa20260801c5b60008460020b13156115a257806000198161159e5761159e611a1d565b0490505b6401000000008106156115b65760016115b9565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b031611156115ec579293925b846001600160a01b0316866001600160a01b03161161161757611610858585611696565b9150611019565b836001600160a01b0316866001600160a01b031610156116505761163c868585611696565b9150611649858785611711565b9050611019565b61165b858585611711565b905094509492505050565b600054610100900460ff1661168d5760405162461bcd60e51b815260040161025290611ac9565b6106da33610f02565b6000826001600160a01b0316846001600160a01b031611156116b6579192915b6001600160a01b0384166116ff6fffffffffffffffffffffffffffffffff60601b606085901b166116e78787611b9d565b6001600160a01b0316866001600160a01b0316611757565b6117099190611a33565b949350505050565b6000826001600160a01b0316846001600160a01b03161115611731579192915b6117096001600160801b0383166117488686611b9d565b6001600160a01b0316600160601b5b600080806000198587098587029250828110838203039150508060001415611791576000841161178657600080fd5b508290049050610617565b80841161179d57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b0381168114610eff57600080fd5b60006020828403121561182d57600080fd5b813561061781611806565b8060020b8114610eff57600080fd5b600080600080600060a0868803121561185f57600080fd5b853561186a81611838565b9450602086013561187a81611838565b9350604086013561188a81611806565b9250606086013561189a81611806565b915060808601356118aa81611806565b809150509295509295909350565b6000602082840312156118ca57600080fd5b815161061781611806565b6000602082840312156118e757600080fd5b815160ff8116811461061757600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561194957816000190482111561192f5761192f6118f8565b8085161561193c57918102915b93841c9390800290611913565b509250929050565b60008261196057506001610266565b8161196d57506000610266565b8160018114611983576002811461198d576119a9565b6001915050610266565b60ff84111561199e5761199e6118f8565b50506001821b610266565b5060208310610133831016604e8410600b84101617156119cc575081810a610266565b6119d6838361190e565b80600019048211156119ea576119ea6118f8565b029392505050565b60006106178383611951565b6000816000190483118215151615611a1857611a186118f8565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611a5057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611a6857611a686118f8565b500190565b600060208284031215611a7f57600080fd5b5051919050565b600061061760ff841683611951565b600060208284031215611aa757600080fd5b815161061781611838565b600082821015611ac457611ac46118f8565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80516001600160801b038116811461121057600080fd5b60008060008060008060c08789031215611b4457600080fd5b611b4d87611b14565b9550602087015163ffffffff81168114611b6657600080fd5b6040880151606089015191965094509250611b8360808801611b14565b9150611b9160a08801611b14565b90509295509295509295565b60006001600160a01b0383811690831681811015611bbd57611bbd6118f8565b03939250505056fea164736f6c634300080a000a";

type GammaPoolAlgebraPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GammaPoolAlgebraPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GammaPoolAlgebraPriceOracle__factory extends ContractFactory {
  constructor(...args: GammaPoolAlgebraPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GammaPoolAlgebraPriceOracle> {
    return super.deploy(
      overrides || {}
    ) as Promise<GammaPoolAlgebraPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GammaPoolAlgebraPriceOracle {
    return super.attach(address) as GammaPoolAlgebraPriceOracle;
  }
  override connect(signer: Signer): GammaPoolAlgebraPriceOracle__factory {
    return super.connect(signer) as GammaPoolAlgebraPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GammaPoolAlgebraPriceOracleInterface {
    return new utils.Interface(_abi) as GammaPoolAlgebraPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaPoolAlgebraPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GammaPoolAlgebraPriceOracle;
  }
}
