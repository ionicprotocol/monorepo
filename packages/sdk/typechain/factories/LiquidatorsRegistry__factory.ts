/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidatorsRegistry,
  LiquidatorsRegistryInterface,
} from "../LiquidatorsRegistry";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_ap",
        type: "address",
        internalType: "contract AddressesProvider",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_listExtensions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_registerExtension",
    inputs: [
      {
        name: "extensionToAdd",
        type: "address",
        internalType: "contract DiamondExtension",
      },
      {
        name: "extensionToReplace",
        type: "address",
        internalType: "contract DiamondExtension",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ap",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AddressesProvider",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "asExtension",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LiquidatorsRegistryExtension",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "customUniV3Router",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOutputToken",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByName",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByTokens",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "uniswapV3Fees",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "FunctionAlreadyAdded",
    inputs: [
      {
        name: "_functionSelector",
        type: "bytes4",
        internalType: "bytes4",
      },
      {
        name: "_currentImpl",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FunctionNotFound",
    inputs: [
      {
        name: "_functionSelector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110f53803806110f583398101604081905261002f916100d4565b6100383361005d565b600280546001600160a01b0319166001600160a01b0392909216919091179055610104565b600180546001600160a01b031916905561008181610084602090811b61048f17901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610fe2806101136000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638db87c271161008c578063dc54bc8111610066578063dc54bc81146102b1578063dee7fe48146102b7578063e30c3978146102eb578063f2fde38b146102fc576100ea565b80638db87c2714610220578063a700f9e414610249578063c8ff6fee1461027d576100ea565b8063715018a6116100c8578063715018a6146101ea57806379ba5097146101f457806389cd9855146101fc5780638da5cb5b1461020f576100ea565b8063398cd955146101615780633c4f743c146101aa5780636333d001146101d5575b60006101016000356001600160e01b03191661030f565b90506001600160a01b03811661013d57604051630a82dd7360e31b81526001600160e01b03196000351660048201526024015b60405180910390fd5b3660008037600080366000845af43d6000803e80801561015c573d6000f35b3d6000fd5b61019161016f366004610ca3565b600d60209081526000928352604080842090915290825290205462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b6002546101bd906001600160a01b031681565b6040516001600160a01b0390911681526020016101a1565b6101dd61032f565b6040516101a19190610cdc565b6101f261033e565b005b6101f261038e565b6101f261020a366004610ca3565b610408565b6000546001600160a01b03166101bd565b6101bd61022e366004610d29565b6007602052600090815260409020546001600160a01b031681565b6101bd610257366004610ca3565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b6101bd61028b366004610ca3565b600e6020908152600092835260408084209091529082529020546001600160a01b031681565b306101bd565b6101bd6102c5366004610d94565b80516020818301810180516005825292820191909301209152546001600160a01b031681565b6001546001600160a01b03166101bd565b6101f261030a366004610d29565b61041e565b600061032982600080516020610fb68339815191526104df565b92915050565b6060610339610585565b905090565b6103466105f7565b60405162461bcd60e51b815260206004820152601e60248201527f72656e6f756e6365206f776e657273686970206e6f7420616c6c6f77656400006044820152606401610134565b60015433906001600160a01b031681146103fc5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610134565b61040581610653565b50565b6104106105f7565b61041a828261066c565b5050565b6104266105f7565b600180546001600160a01b0383166001600160a01b031990911681179091556104576000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8054600090815b8181101561057a57846001600160e01b03191684600001828154811061050e5761050e610e29565b600091825260209091200154600160a01b900460e01b6001600160e01b03191614156105685783600001818154811061054957610549610e29565b6000918252602090912001546001600160a01b03169250610329915050565b8061057281610e55565b9150506104e6565b506000949350505050565b6060600080516020610fb68339815191526001018054806020026020016040519081016040528092919081815260200182805480156105ed57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105cf575b5050505050905090565b6000546001600160a01b031633146106515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610134565b565b600180546001600160a01b03191690556104058161048f565b6001600160a01b03811615610684576106848161068d565b61041a826107c2565b600080516020610fb68339815191526106a5826108ba565b60005b600182015460ff821610156107bd57826001600160a01b0316826001018260ff16815481106106d9576106d9610e29565b6000918252602090912001546001600160a01b031614156107ab5760018083018054909161070691610e70565b8154811061071657610716610e29565b6000918252602090912001546001830180546001600160a01b039092169160ff841690811061074757610747610e29565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160010180548061078857610788610e87565b600082815260209020810160001990810180546001600160a01b03191690550190555b806107b581610e9d565b9150506106a8565b505050565b600080516020610fb683398151915260005b600182015460ff8216101561087a57826001600160a01b0316826001018260ff168154811061080557610805610e29565b6000918252602090912001546001600160a01b031614156108685760405162461bcd60e51b815260206004820152601760248201527f657874656e73696f6e20616c72656164792061646465640000000000000000006044820152606401610134565b8061087281610e9d565b9150506107d4565b5061088482610a7f565b6001908101805491820181556000908152602090200180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b03166389f8132e6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109229190810190610ebd565b9050600080516020610fb683398151915260005b82518161ffff161015610a79576000838261ffff168151811061095b5761095b610e29565b6020026020010151905061096f81846104df565b6001600160a01b0316856001600160a01b03161461098f5761098f610f7d565b600061099b8285610c06565b845490915084906109ae90600190610e70565b815481106109be576109be610e29565b90600052602060002001846000018261ffff16815481106109e1576109e1610e29565b600091825260209091208254910180546001600160a01b039092166001600160a01b031983168117825592546001600160c01b0319909216909217600160a01b9182900463ffffffff169091021790558354849080610a4257610a42610e87565b600082815260209020810160001990810180546001600160c01b031916905501905550819050610a7181610f93565b915050610936565b50505050565b6000816001600160a01b03166389f8132e6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610abf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae79190810190610ebd565b600080516020610fb683398151915280549192509060005b8351811015610bff576000848281518110610b1c57610b1c610e29565b602002602001015190506000610b3282866104df565b90506001600160a01b03811615610b7757604051632c18df3360e01b81526001600160e01b0319831660048201526001600160a01b0382166024820152604401610134565b604080518082019091526001600160a01b0380891682526001600160e01b0319841660208084019182528854600181018a5560008a815291909120935193018054915160e01c600160a01b026001600160c01b0319909216939092169290921791909117905583610be781610f93565b94505050508080610bf790610e55565b915050610aff565b5050505050565b8054600090815b8161ffff168161ffff161015610c8257846001600160e01b031916846000018261ffff1681548110610c4157610c41610e29565b600091825260209091200154600160a01b900460e01b6001600160e01b0319161415610c705791506103299050565b80610c7a81610f93565b915050610c0d565b5061ffff949350505050565b6001600160a01b038116811461040557600080fd5b60008060408385031215610cb657600080fd5b8235610cc181610c8e565b91506020830135610cd181610c8e565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610d1d5783516001600160a01b031683529284019291840191600101610cf8565b50909695505050505050565b600060208284031215610d3b57600080fd5b8135610d4681610c8e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d8c57610d8c610d4d565b604052919050565b60006020808385031215610da757600080fd5b823567ffffffffffffffff80821115610dbf57600080fd5b818501915085601f830112610dd357600080fd5b813581811115610de557610de5610d4d565b610df7601f8201601f19168501610d63565b91508082528684828501011115610e0d57600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610e6957610e69610e3f565b5060010190565b600082821015610e8257610e82610e3f565b500390565b634e487b7160e01b600052603160045260246000fd5b600060ff821660ff811415610eb457610eb4610e3f565b60010192915050565b60006020808385031215610ed057600080fd5b825167ffffffffffffffff80821115610ee857600080fd5b818501915085601f830112610efc57600080fd5b815181811115610f0e57610f0e610d4d565b8060051b9150610f1f848301610d63565b8181529183018401918481019088841115610f3957600080fd5b938501935b83851015610f7157845192506001600160e01b031983168314610f615760008081fd5b8282529385019390850190610f3e565b98975050505050505050565b634e487b7160e01b600052600160045260246000fd5b600061ffff80831681811415610fab57610fab610e3f565b600101939250505056fe234c809385eaba7c8e68b2a08341f3988117f4f9fae0fac38df439aa440b2615a164736f6c634300080a000a";

type LiquidatorsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidatorsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidatorsRegistry__factory extends ContractFactory {
  constructor(...args: LiquidatorsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ap: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LiquidatorsRegistry> {
    return super.deploy(_ap, overrides || {}) as Promise<LiquidatorsRegistry>;
  }
  override getDeployTransaction(
    _ap: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_ap, overrides || {});
  }
  override attach(address: string): LiquidatorsRegistry {
    return super.attach(address) as LiquidatorsRegistry;
  }
  override connect(signer: Signer): LiquidatorsRegistry__factory {
    return super.connect(signer) as LiquidatorsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidatorsRegistryInterface {
    return new utils.Interface(_abi) as LiquidatorsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidatorsRegistry {
    return new Contract(address, _abi, signerOrProvider) as LiquidatorsRegistry;
  }
}
