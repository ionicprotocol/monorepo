/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILeveredPositionFactory,
  ILeveredPositionFactoryInterface,
} from "../../ILeveredPositionFactory.sol/ILeveredPositionFactory";

const _abi = [
  {
    type: "function",
    name: "_setLiquidatorsRegistry",
    inputs: [
      {
        name: "_liquidatorsRegistry",
        type: "address",
        internalType: "contract ILiquidatorsRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPairWhitelisted",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_whitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "blocksPerYear",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "closeAndRemoveUserPosition",
    inputs: [
      {
        name: "position",
        type: "address",
        internalType: "contract LeveredPosition",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createAndFundPosition",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_fundingAsset",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "_fundingAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LeveredPosition",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createAndFundPositionAtRatio",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_fundingAsset",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "_fundingAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_leverageRatio",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LeveredPosition",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createPosition",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "_stableMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LeveredPosition",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeDistributor",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFeeDistributor",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccountsWithOpenPositions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowableMarketsByCollateral",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMinBorrowNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionsByAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionsExtension",
    inputs: [
      {
        name: "msgSig",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRedemptionStrategies",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "strategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "strategiesData",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedCollateralMarkets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidatorsRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILiquidatorsRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeClosedPosition",
    inputs: [
      {
        name: "closedPosition",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "removed",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ILeveredPositionFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ILeveredPositionFactoryInterface {
    return new utils.Interface(_abi) as ILeveredPositionFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILeveredPositionFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILeveredPositionFactory;
  }
}
