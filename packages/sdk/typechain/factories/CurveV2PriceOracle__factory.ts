/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveV2PriceOracle,
  CurveV2PriceOracleInterface,
} from "../CurveV2PriceOracle";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllSupportedTokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPoolForSwap",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICurvePool",
      },
      {
        name: "",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "",
        type: "int128",
        internalType: "int128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_tokens",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_pools",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolFor",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerPool",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tokens",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061152e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063938bd8ec1161008c578063e30c397811610066578063e30c397814610212578063f2fde38b14610225578063fc4d33f914610238578063fc57d4df1461024057600080fd5b8063938bd8ec1461018c578063aea91078146101c8578063b700a49e146101e957600080fd5b8063715018a6116100c8578063715018a61461014d5780637286e5e51461015557806373cf25f8146101685780638da5cb5b1461017b57600080fd5b80630107e472146100ef5780634f64b2be1461010d5780636e96dfd714610138575b600080fd5b6100f7610253565b60405161010491906110d9565b60405180910390f35b61012061011b366004611126565b6102b5565b6040516001600160a01b039091168152602001610104565b61014b610146366004611164565b6102df565b005b61014b610349565b61014b610163366004611181565b610391565b61014b610176366004611272565b61059e565b6033546001600160a01b0316610120565b61019f61019a366004611181565b61083e565b604080516001600160a01b039094168452600f92830b6020850152910b90820152606001610104565b6101db6101d6366004611164565b6109c2565b604051908152602001610104565b6101206101f7366004611164565b6066602052600090815260409020546001600160a01b031681565b606554610120906001600160a01b031681565b61014b610233366004611164565b6109d3565b61014b610a44565b6101db61024e366004611164565b610b58565b606060678054806020026020016040519081016040528092919081815260200182805480156102ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161028d575b5050505050905090565b606781815481106102c557600080fd5b6000918252602090912001546001600160a01b0316905081565b6102e7610c5b565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610351610c5b565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b610399610c5b565b60405163c661065760e01b8152600260048201526001600160a01b0382169063c661065790602401602060405180830381865afa9250505080156103fa575060408051601f3d908101601f191682019092526103f7918101906112d6565b60015b61040357610443565b60405162461bcd60e51b8152602060048201526015602482015274216f6e6c792074776f20746f6b656e20706f6f6c7360581b6044820152606401610388565b6001600160a01b038083166000908152606660205260409020541680156104b85760405162461bcd60e51b8152602060048201526024808201527f54686973204c5020746f6b656e20697320616c726561647920726567697374656044820152633932b21760e11b6064820152608401610388565b6001600160a01b03838116600090815260666020526040812080546001600160a01b03191692851692909217909155805b60675481101561054657846001600160a01b031660678281548110610510576105106112f3565b6000918252602090912001546001600160a01b031614156105345760019150610546565b8061053e8161131f565b9150506104e9565b508061059857606780546001810182556000919091527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0180546001600160a01b0319166001600160a01b0386161790555b50505050565b600054610100900460ff16158080156105be5750600054600160ff909116105b806105d85750303b1580156105d8575060005460ff166001145b61063b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610388565b6000805460ff19166001179055801561065e576000805461ff0019166101001790555b81518351146106c95760405162461bcd60e51b815260206004820152603160248201527f4e6f204c5020746f6b656e7320737570706c696564206f72206172726179206c60448201527032b733ba3439903737ba1032b8bab0b61760791b6064820152608401610388565b6106d233610cb7565b60005b82518110156107f2578281815181106106f0576106f06112f3565b60200260200101516001600160a01b031663c661065760026040518263ffffffff1660e01b815260040161072691815260200190565b602060405180830381865afa92505050801561075f575060408051601f3d908101601f1916820190925261075c918101906112d6565b60015b61040357828181518110610775576107756112f3565b602002602001015160666000868481518110610793576107936112f3565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080806107ea9061131f565b9150506106d5565b508015610839576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60008080805b6067548110156109ae5760006066600060678481548110610867576108676112f3565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910181205490911691506000199081905b60405163c661065760e01b81526fffffffffffffffffffffffffffffffff821660048201526001600160a01b0385169063c661065790602401602060405180830381865afa92505050801561090f575060408051601f3d908101601f1916820190925261090c918101906112d6565b60015b61091857610997565b8a6001600160a01b0316816001600160a01b0316141561093a57819350610958565b896001600160a01b0316816001600160a01b03161415610958578192505b816109628161133a565b9250505060001982600f0b13801561097e575060001983600f0b135b156109925750919550935091506109bb9050565b61089d565b5050505080806109a69061131f565b915050610844565b5060008060009250925092505b9250925092565b60006109cd82610cf2565b92915050565b6109db610c5b565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b03163314610a965760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610388565b6000610aaa6033546001600160a01b031690565b6065549091506001600160a01b0316610ac28161102d565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910161033d565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd91906112d6565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c219190611369565b610c2f9060ff16600a611470565b610c3882610cf2565b610c4a90670de0b6b3a764000061147c565b610c54919061149b565b9392505050565b6033546001600160a01b03163314610cb55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610388565b565b600054610100900460ff16610cde5760405162461bcd60e51b8152600401610388906114bd565b610ce661107f565b610cef8161102d565b50565b6001600160a01b0380821660009081526066602052604081205490911680610d5c5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206973206e6f7420726567697374657265642e00000000000000006044820152606401610388565b600080826001600160a01b03166386fc88d36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc19190611508565b60405163c661065760e01b8152600060048201529091506001600160a01b03808716919085169063c661065790602401602060405180830381865afa158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3291906112d6565b6001600160a01b03161415610f415760405163c661065760e01b8152600160048201526001600160a01b0384169063c661065790602401602060405180830381865afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa91906112d6565b6040516315d5220f60e31b81526001600160a01b0382166004820152909250600090339063aea9107890602401602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190611508565b905081610f2d82670de0b6b3a764000061147c565b610f37919061149b565b9695505050505050565b60405163c661065760e01b8152600060048201526001600160a01b0384169063c661065790602401602060405180830381865afa158015610f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faa91906112d6565b6040516315d5220f60e31b81526001600160a01b0382166004820152909250600090339063aea9107890602401602060405180830381865afa158015610ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110189190611508565b9050670de0b6b3a7640000610f2d838361147c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110a65760405162461bcd60e51b8152600401610388906114bd565b610cb5600054610100900460ff166110d05760405162461bcd60e51b8152600401610388906114bd565b610cb53361102d565b6020808252825182820181905260009190848201906040850190845b8181101561111a5783516001600160a01b0316835292840192918401916001016110f5565b50909695505050505050565b60006020828403121561113857600080fd5b5035919050565b6001600160a01b0381168114610cef57600080fd5b803561115f8161113f565b919050565b60006020828403121561117657600080fd5b8135610c548161113f565b6000806040838503121561119457600080fd5b823561119f8161113f565b915060208301356111af8161113f565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111e157600080fd5b8135602067ffffffffffffffff808311156111fe576111fe6111ba565b8260051b604051601f19603f83011681018181108482111715611223576112236111ba565b60405293845285810183019383810192508785111561124157600080fd5b83870191505b848210156112675761125882611154565b83529183019190830190611247565b979650505050505050565b6000806040838503121561128557600080fd5b823567ffffffffffffffff8082111561129d57600080fd5b6112a9868387016111d0565b935060208501359150808211156112bf57600080fd5b506112cc858286016111d0565b9150509250929050565b6000602082840312156112e857600080fd5b8151610c548161113f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561133357611333611309565b5060010190565b600081600f0b6f7fffffffffffffffffffffffffffffff81141561136057611360611309565b60010192915050565b60006020828403121561137b57600080fd5b815160ff81168114610c5457600080fd5b600181815b808511156113c75781600019048211156113ad576113ad611309565b808516156113ba57918102915b93841c9390800290611391565b509250929050565b6000826113de575060016109cd565b816113eb575060006109cd565b8160018114611401576002811461140b57611427565b60019150506109cd565b60ff84111561141c5761141c611309565b50506001821b6109cd565b5060208310610133831016604e8410600b841016171561144a575081810a6109cd565b611454838361138c565b806000190482111561146857611468611309565b029392505050565b6000610c5483836113cf565b600081600019048311821515161561149657611496611309565b500290565b6000826114b857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561151a57600080fd5b505191905056fea164736f6c634300080a000a";

type CurveV2PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveV2PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveV2PriceOracle__factory extends ContractFactory {
  constructor(...args: CurveV2PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CurveV2PriceOracle> {
    return super.deploy(overrides || {}) as Promise<CurveV2PriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveV2PriceOracle {
    return super.attach(address) as CurveV2PriceOracle;
  }
  override connect(signer: Signer): CurveV2PriceOracle__factory {
    return super.connect(signer) as CurveV2PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveV2PriceOracleInterface {
    return new utils.Interface(_abi) as CurveV2PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveV2PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as CurveV2PriceOracle;
  }
}
