/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SolidlyLpTokenLiquidator,
  SolidlyLpTokenLiquidatorInterface,
} from "../../SolidlyLpTokenLiquidator.sol/SolidlyLpTokenLiquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c30806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b604080518082018252601881527f536f6c69646c794c70546f6b656e4c697175696461746f7200000000000000006020820152905161007a9190610926565b60405180910390f35b6100966100913660046109b8565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b60008060008590506000816001600160a01b03166322be3de16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101219190610a69565b90506000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610163573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101879190610a92565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed9190610a92565b60405163a9059cbb60e01b81526001600160a01b03861660048201819052602482018b905291925063a9059cbb906044016020604051808303816000875af115801561023d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102619190610a69565b5060405163226bf2d160e21b815230600482015260009081906001600160a01b038716906389afcb449060240160408051808303816000875af11580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610aaf565b915091506000808a8060200190518101906102eb9190610ad3565b91509150856001600160a01b0316816001600160a01b031614610399576103138683866104a5565b6040516313dcfc5960e01b81526001600160a01b038316906313dcfc599061034c9087906000908b9087908e9030904290600401610b0d565b6000604051808303816000875af115801561036b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103939190810190610b48565b50610426565b6103a48583856104a5565b6040516313dcfc5960e01b81526001600160a01b038316906313dcfc59906103dd9086906000908a9087908e9030904290600401610b0d565b6000604051808303816000875af11580156103fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104249190810190610b48565b505b6040516370a0823160e01b815230600482015290995089906001600160a01b038216906370a0823190602401602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610bee565b98505050505050505050935093915050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610bee565b90508181101561055457801561053e5761053e6001600160a01b03851684600061055a565b6105546001600160a01b0385168460001961055a565b50505050565b8015806105d45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610bee565b155b6106445760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261069690849061069b565b505050565b60006106f0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661076d9092919063ffffffff16565b805190915015610696578080602001905181019061070e9190610a69565b6106965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063b565b606061077c8484600085610784565b949350505050565b6060824710156107e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161063b565b600080866001600160a01b031685876040516108019190610c07565b60006040518083038185875af1925050503d806000811461083e576040519150601f19603f3d011682016040523d82523d6000602084013e610843565b606091505b50915091506108548783838761085f565b979650505050505050565b606083156108cb5782516108c4576001600160a01b0385163b6108c45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063b565b508161077c565b61077c83838151156108e05781518083602001fd5b8060405162461bcd60e51b815260040161063b9190610926565b60005b838110156109155781810151838201526020016108fd565b838111156105545750506000910152565b60208152600082518060208401526109458160408501602087016108fa565b601f01601f19169190910160400192915050565b6001600160a01b038116811461096e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109b0576109b0610971565b604052919050565b6000806000606084860312156109cd57600080fd5b83356109d881610959565b92506020848101359250604085013567ffffffffffffffff808211156109fd57600080fd5b818701915087601f830112610a1157600080fd5b813581811115610a2357610a23610971565b610a35601f8201601f19168501610987565b91508082528884828501011115610a4b57600080fd5b80848401858401376000848284010152508093505050509250925092565b600060208284031215610a7b57600080fd5b81518015158114610a8b57600080fd5b9392505050565b600060208284031215610aa457600080fd5b8151610a8b81610959565b60008060408385031215610ac257600080fd5b505080516020909101519092909150565b60008060408385031215610ae657600080fd5b8251610af181610959565b6020840151909250610b0281610959565b809150509250929050565b96875260208701959095526001600160a01b0393841660408701529183166060860152151560808501521660a083015260c082015260e00190565b60006020808385031215610b5b57600080fd5b825167ffffffffffffffff80821115610b7357600080fd5b818501915085601f830112610b8757600080fd5b815181811115610b9957610b99610971565b8060051b9150610baa848301610987565b8181529183018401918481019088841115610bc457600080fd5b938501935b83851015610be257845182529385019390850190610bc9565b98975050505050505050565b600060208284031215610c0057600080fd5b5051919050565b60008251610c198184602087016108fa565b919091019291505056fea164736f6c634300080a000a";

type SolidlyLpTokenLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SolidlyLpTokenLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SolidlyLpTokenLiquidator__factory extends ContractFactory {
  constructor(...args: SolidlyLpTokenLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SolidlyLpTokenLiquidator> {
    return super.deploy(overrides || {}) as Promise<SolidlyLpTokenLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SolidlyLpTokenLiquidator {
    return super.attach(address) as SolidlyLpTokenLiquidator;
  }
  override connect(signer: Signer): SolidlyLpTokenLiquidator__factory {
    return super.connect(signer) as SolidlyLpTokenLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolidlyLpTokenLiquidatorInterface {
    return new utils.Interface(_abi) as SolidlyLpTokenLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolidlyLpTokenLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SolidlyLpTokenLiquidator;
  }
}
