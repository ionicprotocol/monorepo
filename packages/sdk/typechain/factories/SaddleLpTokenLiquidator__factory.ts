/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SaddleLpTokenLiquidator,
  SaddleLpTokenLiquidatorInterface,
} from "../SaddleLpTokenLiquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b604080518082018252601781527f536164646c654c70546f6b656e4c697175696461746f720000000000000000006020820152905161007a91906102e3565b60405180910390f35b610096610091366004610366565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b6000806000806000858060200190518101906100d19190610433565b60405163988b1fa760e01b81526001600160a01b038c81166004830152939650919450925060009184169063988b1fa790602401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101469190610480565b6040516319b02f4960e21b81526001600160a01b0386811660048301529192506000918316906366c0bd2490602401602060405180830381865afa158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b691906104a4565b6040516301f1d0ab60e51b8152600481018b905260ff82166024820152600160448201524260648201529091506001600160a01b03831690633e3a1560906084016020604051808303816000875af1158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a91906104c7565b95506001600160a01b038516158061026e575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038616145b156102cf57826001600160a01b031663d0e30db0876040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b50505050508296506102d3565b8496505b8496505050505050935093915050565b600060208083528351808285015260005b81811015610310578581018301518582016040015282016102f4565b81811115610322576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461034d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561037b57600080fd5b833561038681610338565b925060208401359150604084013567ffffffffffffffff808211156103aa57600080fd5b818601915086601f8301126103be57600080fd5b8135818111156103d0576103d0610350565b604051601f8201601f19908116603f011681019083821181831017156103f8576103f8610350565b8160405282815289602084870101111561041157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060006060848603121561044857600080fd5b835161045381610338565b602085015190935061046481610338565b604085015190925061047581610338565b809150509250925092565b60006020828403121561049257600080fd5b815161049d81610338565b9392505050565b6000602082840312156104b657600080fd5b815160ff8116811461049d57600080fd5b6000602082840312156104d957600080fd5b505191905056fea164736f6c634300080a000a";

type SaddleLpTokenLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaddleLpTokenLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaddleLpTokenLiquidator__factory extends ContractFactory {
  constructor(...args: SaddleLpTokenLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SaddleLpTokenLiquidator> {
    return super.deploy(overrides || {}) as Promise<SaddleLpTokenLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SaddleLpTokenLiquidator {
    return super.attach(address) as SaddleLpTokenLiquidator;
  }
  override connect(signer: Signer): SaddleLpTokenLiquidator__factory {
    return super.connect(signer) as SaddleLpTokenLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaddleLpTokenLiquidatorInterface {
    return new utils.Interface(_abi) as SaddleLpTokenLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SaddleLpTokenLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SaddleLpTokenLiquidator;
  }
}
