/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComptrollerV1Storage,
  ComptrollerV1StorageInterface,
} from "../../ComptrollerStorage.sol/ComptrollerV1Storage";

const _abi = [
  {
    type: "function",
    name: "accountAssets",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "adminHasRights",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "closeFactorMantissa",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ionicAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ionicAdminHasRights",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidationIncentiveMantissa",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "oracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract BasePriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60806040526002805461ffff60a01b191661010160a01b17905534801561002557600080fd5b506101e9806100356000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c91a424f11610066578063c91a424f14610116578063cf6bfd2d14610129578063dce154491461013d578063e875544614610150578063f851a4401461015957600080fd5b80630a755ec21461009857806326782247146100c15780634ada90af146100ec5780637dc0d1d014610103575b600080fd5b6002546100ac90600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6002546100d4906001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b6100f560055481565b6040519081526020016100b8565b6003546100d4906001600160a01b031681565b6000546100d4906001600160a01b031681565b6002546100ac90600160a01b900460ff1681565b6100d461014b3660046101a4565b61016c565b6100f560045481565b6001546100d4906001600160a01b031681565b6007602052816000526040600020818154811061018857600080fd5b6000918252602090912001546001600160a01b03169150829050565b600080604083850312156101b757600080fd5b82356001600160a01b03811681146101ce57600080fd5b94602093909301359350505056fea164736f6c634300080a000a";

type ComptrollerV1StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComptrollerV1StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComptrollerV1Storage__factory extends ContractFactory {
  constructor(...args: ComptrollerV1StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ComptrollerV1Storage> {
    return super.deploy(overrides || {}) as Promise<ComptrollerV1Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ComptrollerV1Storage {
    return super.attach(address) as ComptrollerV1Storage;
  }
  override connect(signer: Signer): ComptrollerV1Storage__factory {
    return super.connect(signer) as ComptrollerV1Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerV1StorageInterface {
    return new utils.Interface(_abi) as ComptrollerV1StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerV1Storage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ComptrollerV1Storage;
  }
}
