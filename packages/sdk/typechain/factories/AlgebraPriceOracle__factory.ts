/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AlgebraPriceOracle,
  AlgebraPriceOracleInterface,
} from "../AlgebraPriceOracle";

const _abi = [
  {
    type: "function",
    name: "SUPPORTED_BASE_TOKENS",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "WTOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setSupportedBaseTokens",
    inputs: [
      {
        name: "_supportedBaseTokens",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "canAdminOverwrite",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceX96FromSqrtPriceX96",
    inputs: [
      {
        name: "token0",
        type: "address",
        internalType: "address",
      },
      {
        name: "priceToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    outputs: [
      {
        name: "price_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getSupportedBaseTokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_wtoken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_supportedBaseTokens",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolFeeds",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "poolAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "twapWindow",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "baseToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPoolFeeds",
    inputs: [
      {
        name: "underlyings",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "assetConfig",
        type: "tuple[]",
        internalType:
          "struct ConcentratedLiquidityBasePriceOracle.AssetConfig[]",
        components: [
          {
            name: "poolAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "twapWindow",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "baseToken",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d48806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063946d9204116100a2578063d856737d11610071578063d856737d14610276578063e30c397814610289578063f2fde38b1461029c578063fc4d33f9146102af578063fc57d4df146102b757600080fd5b8063946d9204146101d9578063aea91078146101ec578063b92363a3146101ff578063cef109011461021257600080fd5b80636e96dfd7116100de5780636e96dfd71461018a578063715018a61461019f57806379422aba146101a75780638da5cb5b146101c857600080fd5b80630fee7bc1146101105780635bcf1f7614610140578063656b0fd1146101585780636d913a1c14610175575b600080fd5b61012361011e366004611476565b6102ca565b6040516001600160a01b0390911681526020015b60405180910390f35b6067546101239061010090046001600160a01b031681565b6067546101659060ff1681565b6040519015158152602001610137565b61017d6102f4565b604051610137919061148f565b61019d6101983660046114f1565b610356565b005b61019d6103c0565b6101ba6101b536600461150e565b610408565b604051908152602001610137565b6033546001600160a01b0316610123565b61019d6101e7366004611661565b610471565b6101ba6101fa3660046114f1565b6105b9565b61019d61020d3660046116b1565b6105ca565b61024c6102203660046114f1565b6066602052600090815260409020805460018201546002909201546001600160a01b0391821692911683565b604080516001600160a01b0394851681526020810193909352921691810191909152606001610137565b61019d6102843660046117ab565b6107bb565b606554610123906001600160a01b031681565b61019d6102aa3660046114f1565b6107da565b61019d61084b565b6101ba6102c53660046114f1565b61095f565b606881815481106102da57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060606880548060200260200160405190810160405280929190818152602001828054801561034c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161032e575b5050505050905090565b61035e610a5b565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b6103c8610a5b565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b60006104336001600160a01b0383168061042e670de0b6b3a7640000600160c01b611814565b610ab7565b9050826001600160a01b0316846001600160a01b03161461046a57610467816ec097ce7bc90715b34b9f1000000000611814565b90505b9392505050565b600054610100900460ff16158080156104915750600054600160ff909116105b806104ab5750303b1580156104ab575060005460ff166001145b61050e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103ff565b6000805460ff191660011790558015610531576000805461ff0019166101001790555b61053a33610b66565b60678054610100600160a81b0319166101006001600160a01b03861602179055815161056d9060689060208501906113fc565b5080156105b4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006105c482610ba1565b92915050565b6105d2610a5b565b600082511180156105e4575080518251145b6106565760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e000000000000000060648201526084016103ff565b60005b82518110156105b457600083828151811061067657610676611828565b60200260200101519050606760019054906101000a90046001600160a01b03166001600160a01b03168383815181106106b1576106b1611828565b6020026020010151604001516001600160a01b031614806106f357506106f38383815181106106e2576106e2611828565b602002602001015160400151610db4565b61073f5760405162461bcd60e51b815260206004820152601c60248201527f4261736520746f6b656e206d75737420626520737570706f727465640000000060448201526064016103ff565b82828151811061075157610751611828565b6020908102919091018101516001600160a01b03928316600090815260668352604090819020825181549086166001600160a01b031991821617825593830151600182015591015160029091018054919093169116179055806107b38161183e565b915050610659565b6107c3610a5b565b80516107d69060689060208401906113fc565b5050565b6107e2610a5b565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b0316331461089d5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b60448201526064016103ff565b60006108b16033546001600160a01b031690565b6065549091506001600160a01b03166108c981610e1e565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91016103b4565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190611859565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190611876565b610a369060ff16600a61197d565b610a3f82610ba1565b610a5190670de0b6b3a7640000611989565b61046a9190611814565b6033546001600160a01b03163314610ab55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ff565b565b600080806000198587098587029250828110838203039150508060001415610af15760008411610ae657600080fd5b50829004905061046a565b808411610afd57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600054610100900460ff16610b8d5760405162461bcd60e51b81526004016103ff906119a8565b610b95610e70565b610b9e81610e1e565b50565b604080516002808252606082018352600092839291906020830190803683375050506001600160a01b03848116600090815260666020526040812060018101546002909101548451949550909392169183918591610c0157610c01611828565b602002602001019063ffffffff16908163ffffffff1681525050600083600181518110610c3057610c30611828565b63ffffffff9092166020928302919091018201526001600160a01b03808716600090815260669092526040808320549051639d3a524160e01b8152911691908290639d3a524190610c859088906004016119f3565b600060405180830381865afa158015610ca2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cca9190810190611b68565b505050905060008482600081518110610ce557610ce5611828565b602002602001015183600181518110610d0057610d00611828565b6020026020010151610d129190611c7d565b610d1c9190611ccd565b90506000610d2982610e9f565b90506000610d99856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d929190611859565b8b84610408565b9050610da6868b836111d2565b9a9950505050505050505050565b6000805b606854811015610e1557826001600160a01b031660688281548110610ddf57610ddf611828565b6000918252602090912001546001600160a01b03161415610e035750600192915050565b80610e0d8161183e565b915050610db8565b50600092915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e975760405162461bcd60e51b81526004016103ff906119a8565b610ab56113cc565b60008060008360020b12610eb6578260020b610ebe565b8260020b6000035b9050620d89e8811115610ef75760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016103ff565b600060018216610f0b57600160801b610f1d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610f51576ffff97272373d413259a46990580e213a0260801c5b6004821615610f70576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610f8f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610fae576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610fcd576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610fec576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561100b576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561102b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561104b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561106b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561108b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156110ab576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156110cb576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156110eb576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561110b576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561112c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561114c576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561116b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611188576b048a170391f7dc42444e8fa20260801c5b60008460020b13156111a95780600019816111a5576111a56117e8565b0490505b6401000000008106156111bd5760016111c0565b60005b60ff16602082901c0192505050919050565b600080806001600160a01b03861615806111fe57506067546001600160a01b0387811661010090920416145b1561120c5760129150611274565b856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e9190611876565b60ff1691505b6040516315d5220f60e31b81526001600160a01b0387166004820152600090339063aea9107890602401602060405180830381865afa1580156112bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112df9190611d0b565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113459190611876565b60ff169050808411156113785761135c8185611d24565b61136790600a61197d565b6113719087611814565b92506113a3565b8084101561139f5761138a8482611d24565b61139590600a61197d565b6113719087611989565b8592505b670de0b6b3a76400006113b68385611989565b6113c09190611814565b98975050505050505050565b600054610100900460ff166113f35760405162461bcd60e51b81526004016103ff906119a8565b610ab533610e1e565b828054828255906000526020600020908101928215611451579160200282015b8281111561145157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061141c565b5061145d929150611461565b5090565b5b8082111561145d5760008155600101611462565b60006020828403121561148857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156114d05783516001600160a01b0316835292840192918401916001016114ab565b50909695505050505050565b6001600160a01b0381168114610b9e57600080fd5b60006020828403121561150357600080fd5b813561046a816114dc565b60008060006060848603121561152357600080fd5b833561152e816114dc565b9250602084013561153e816114dc565b9150604084013561154e816114dc565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561159257611592611559565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156115c1576115c1611559565b604052919050565b600067ffffffffffffffff8211156115e3576115e3611559565b5060051b60200190565b600082601f8301126115fe57600080fd5b8135602061161361160e836115c9565b611598565b82815260059290921b8401810191818101908684111561163257600080fd5b8286015b84811015611656578035611649816114dc565b8352918301918301611636565b509695505050505050565b6000806040838503121561167457600080fd5b823561167f816114dc565b9150602083013567ffffffffffffffff81111561169b57600080fd5b6116a7858286016115ed565b9150509250929050565b60008060408084860312156116c557600080fd5b833567ffffffffffffffff808211156116dd57600080fd5b6116e9878388016115ed565b945060209150818601358181111561170057600080fd5b86019050601f8101871361171357600080fd5b803561172161160e826115c9565b8181526060918202830184019184820191908a84111561174057600080fd5b938501935b8385101561179a5780858c03121561175d5760008081fd5b61176561156f565b8535611770816114dc565b8152858701358782015287860135611787816114dc565b8189015283529384019391850191611745565b508096505050505050509250929050565b6000602082840312156117bd57600080fd5b813567ffffffffffffffff8111156117d457600080fd5b6117e0848285016115ed565b949350505050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082611823576118236117e8565b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611852576118526117fe565b5060010190565b60006020828403121561186b57600080fd5b815161046a816114dc565b60006020828403121561188857600080fd5b815160ff8116811461046a57600080fd5b600181815b808511156118d45781600019048211156118ba576118ba6117fe565b808516156118c757918102915b93841c939080029061189e565b509250929050565b6000826118eb575060016105c4565b816118f8575060006105c4565b816001811461190e576002811461191857611934565b60019150506105c4565b60ff841115611929576119296117fe565b50506001821b6105c4565b5060208310610133831016604e8410600b8410161715611957575081810a6105c4565b6119618383611899565b8060001904821115611975576119756117fe565b029392505050565b600061046a83836118dc565b60008160001904831182151516156119a3576119a36117fe565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252825182820181905260009190848201906040850190845b818110156114d057835163ffffffff1683529284019291840191600101611a0f565b600082601f830112611a4257600080fd5b81516020611a5261160e836115c9565b82815260059290921b84018101918181019086841115611a7157600080fd5b8286015b84811015611656578051611a88816114dc565b8352918301918301611a75565b600082601f830112611aa657600080fd5b81516020611ab661160e836115c9565b82815260059290921b84018101918181019086841115611ad557600080fd5b8286015b848110156116565780516dffffffffffffffffffffffffffff81168114611b005760008081fd5b8352918301918301611ad9565b600082601f830112611b1e57600080fd5b81516020611b2e61160e836115c9565b82815260059290921b84018101918181019086841115611b4d57600080fd5b8286015b848110156116565780518352918301918301611b51565b60008060008060808587031215611b7e57600080fd5b845167ffffffffffffffff80821115611b9657600080fd5b818701915087601f830112611baa57600080fd5b81516020611bba61160e836115c9565b82815260059290921b8401810191818101908b841115611bd957600080fd5b948201945b83861015611c075785518060060b8114611bf85760008081fd5b82529482019490820190611bde565b918a0151919850909350505080821115611c2057600080fd5b611c2c88838901611a31565b94506040870151915080821115611c4257600080fd5b611c4e88838901611a95565b93506060870151915080821115611c6457600080fd5b50611c7187828801611b0d565b91505092959194509250565b60008160060b8360060b6000811281667fffffffffffff1901831281151615611ca857611ca86117fe565b81667fffffffffffff018313811615611cc357611cc36117fe565b5090039392505050565b60008160060b8360060b80611ce457611ce46117e8565b667fffffffffffff19821460001982141615611d0257611d026117fe565b90059392505050565b600060208284031215611d1d57600080fd5b5051919050565b600082821015611d3657611d366117fe565b50039056fea164736f6c634300080a000a";

type AlgebraPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlgebraPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlgebraPriceOracle__factory extends ContractFactory {
  constructor(...args: AlgebraPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AlgebraPriceOracle> {
    return super.deploy(overrides || {}) as Promise<AlgebraPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AlgebraPriceOracle {
    return super.attach(address) as AlgebraPriceOracle;
  }
  override connect(signer: Signer): AlgebraPriceOracle__factory {
    return super.connect(signer) as AlgebraPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlgebraPriceOracleInterface {
    return new utils.Interface(_abi) as AlgebraPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlgebraPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as AlgebraPriceOracle;
  }
}
