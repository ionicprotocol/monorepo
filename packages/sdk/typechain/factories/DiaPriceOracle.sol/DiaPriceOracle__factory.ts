/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiaPriceOracle,
  DiaPriceOracleInterface,
} from "../../DiaPriceOracle.sol/DiaPriceOracle";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "canAdminOverwrite",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "wtoken",
        type: "address",
        internalType: "address",
      },
      {
        name: "nativeTokenUsd",
        type: "address",
        internalType: "contract DIAOracleV2",
      },
      {
        name: "nativeTokenUsdKey",
        type: "string",
        internalType: "string",
      },
      {
        name: "masterPriceOracle",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
      {
        name: "usdToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CAN_ADMIN_OVERWRITE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MASTER_PRICE_ORACLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN_USD_KEY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN_USD_PRICE_FEED",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract DIAOracleV2",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "USD_TOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "WTOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAdmin",
    inputs: [
      {
        name: "newAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeeds",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "feed",
        type: "address",
        internalType: "contract DIAOracleV2",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setPriceFeeds",
    inputs: [
      {
        name: "underlyings",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "feeds",
        type: "address[]",
        internalType: "contract DIAOracleV2[]",
      },
      {
        name: "keys",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "NewAdmin",
    inputs: [
      {
        name: "oldAdmin",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200177c3803806200177c833981016040819052620000359162000182565b600180546001600160a01b0319166001600160a01b038981169190911790915586151560805285811660a052841660c05282516200007b9060029060208601906200009b565b506001600160a01b0391821660e0521661010052506200031e9350505050565b828054620000a990620002e1565b90600052602060002090601f016020900481019282620000cd576000855562000118565b82601f10620000e857805160ff191683800117855562000118565b8280016001018555821562000118579182015b8281111562000118578251825591602001919060010190620000fb565b50620001269291506200012a565b5090565b5b808211156200012657600081556001016200012b565b6001600160a01b03811681146200015757600080fd5b50565b8051620001678162000141565b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a0312156200019e57600080fd5b8751620001ab8162000141565b809750506020808901518015158114620001c457600080fd5b60408a0151909750620001d78162000141565b60608a0151909650620001ea8162000141565b60808a01519095506001600160401b03808211156200020857600080fd5b818b0191508b601f8301126200021d57600080fd5b8151818111156200023257620002326200016c565b604051601f8201601f19908116603f011681019083821181831017156200025d576200025d6200016c565b816040528281528e868487010111156200027657600080fd5b600093505b828410156200029a57848401860151818501870152928501926200027b565b82841115620002ac5760008684830101525b809850505050505050620002c360a089016200015a565b9150620002d360c089016200015a565b905092959891949750929550565b600181811c90821680620002f657607f821691505b602082108114156200031857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516113f16200038b600039600081816101b10152610a0601526000818161014e0152610a3101526000818160fa015281816109c30152610b84015260008181610175015261082401526000818160be015261056901526113f16000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639d23c812116100715780639d23c812146101ac5780639dcb511a146101d3578063aea91078146101f4578063b48f0a5414610215578063f851a44014610228578063fc57d4df1461023b57600080fd5b806319983c85146100b95780633a750685146100f55780634805e467146101345780635381c2ae146101495780635bcf1f76146101705780638f28397014610197575b600080fd5b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b61011c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ec565b61013c61024e565b6040516100ec9190610dac565b61011c7f000000000000000000000000000000000000000000000000000000000000000081565b61011c7f000000000000000000000000000000000000000000000000000000000000000081565b6101aa6101a5366004610dde565b6102dc565b005b61011c7f000000000000000000000000000000000000000000000000000000000000000081565b6101e66101e1366004610dde565b610397565b6040516100ec929190610dfb565b610207610202366004610dde565b610446565b6040519081526020016100ec565b6101aa610223366004610fea565b610457565b60015461011c906001600160a01b031681565b610207610249366004610dde565b6106ec565b6002805461025b906110d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610287906110d0565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b6001546001600160a01b031633146103365760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b60448201526064015b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a15050565b600060208190529081526040902080546001820180546001600160a01b0390921692916103c3906110d0565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef906110d0565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905082565b600061045182610820565b92915050565b6001546001600160a01b031633146104ac5760405162461bcd60e51b815260206004820152601860248201527729b2b73232b91034b9903737ba103a34329030b236b4b71760411b604482015260640161032d565b600083511180156104be575081518351145b80156104cb575080518351145b61053d5760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e0000000000000000606482015260840161032d565b60005b83518110156106e657600084828151811061055d5761055d611105565b602002602001015190507f0000000000000000000000000000000000000000000000000000000000000000610633576001600160a01b0381811660009081526020819052604090205416156106335760405162461bcd60e51b815260206004820152605060248201527f41646d696e2063616e6e6f74206f7665727772697465206578697374696e672060448201527f61737369676e6d656e7473206f6620707269636520666565647320746f20756e60648201526f3232b9363cb4b733903a37b5b2b7399760811b608482015260a40161032d565b604051806040016040528085848151811061065057610650611105565b60200260200101516001600160a01b0316815260200184848151811061067857610678611105565b6020908102919091018101519091526001600160a01b03838116600090815280835260409020835181546001600160a01b031916921691909117815582820151805191926106ce92600185019290910190610cc6565b509050505080806106de90611131565b915050610540565b50505050565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610751919061114c565b9050600061075e82610820565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190611169565b60ff16905060128111156107f7576107dd60128261118c565b6107e890600a611287565b6107f29083611293565b610817565b61080281601261118c565b61080d90600a611287565b61081790836112b5565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061086957506001600160a01b038216155b1561087d5750670de0b6b3a7640000919050565b6001600160a01b038083166000908152602081815260408083208151808301909252805490941681526001840180549394919391928401916108be906110d0565b80601f01602080910402602001604051908101604052809291908181526020018280546108ea906110d0565b80156109375780601f1061090c57610100808354040283529160200191610937565b820191906000526020600020905b81548152906001019060200180831161091a57829003601f168201915b5050509190925250508151919250506001600160a01b03166109c15760405162461bcd60e51b815260206004820152603b60248201527f4e6f206f7261636c65207072696365206665656420666f756e6420666f72207460448201527f68697320756e6465726c79696e6720455243323020746f6b656e2e0000000000606482015260840161032d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b6a576040516315d5220f60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063aea9107890602401602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e91906112d4565b90506000610abb826ec097ce7bc90715b34b9f1000000000611293565b835160208501516040516304b01c2560e51b81529293506000926001600160a01b039092169163960384a091610af391600401610dac565b6040805180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190611309565b50905081610b566001600160801b0383166b204fce5e3e250261100000006112b5565b610b609190611293565b9695505050505050565b6040516304b01c2560e51b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063960384a090610bba9060029060040161133c565b6040805180830381865afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611309565b5090506000816001600160801b031611610c18575060009392505050565b815160208301516040516304b01c2560e51b81526000926001600160a01b03169163960384a091610c4c9190600401610dac565b6040805180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190611309565b509050816001600160801b0316816001600160801b0316670de0b6b3a7640000610cb691906112b5565b6108179190611293565b50919050565b828054610cd2906110d0565b90600052602060002090601f016020900481019282610cf45760008555610d3a565b82601f10610d0d57805160ff1916838001178555610d3a565b82800160010185558215610d3a579182015b82811115610d3a578251825591602001919060010190610d1f565b50610d46929150610d4a565b5090565b5b80821115610d465760008155600101610d4b565b6000815180845260005b81811015610d8557602081850181015186830182015201610d69565b81811115610d97576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610dbf6020830184610d5f565b9392505050565b6001600160a01b0381168114610ddb57600080fd5b50565b600060208284031215610df057600080fd5b8135610dbf81610dc6565b6001600160a01b0383168152604060208201819052600090610e1f90830184610d5f565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e6657610e66610e27565b604052919050565b600067ffffffffffffffff821115610e8857610e88610e27565b5060051b60200190565b600082601f830112610ea357600080fd5b81356020610eb8610eb383610e6e565b610e3d565b82815260059290921b84018101918181019086841115610ed757600080fd5b8286015b84811015610efb578035610eee81610dc6565b8352918301918301610edb565b509695505050505050565b6000601f8381840112610f1857600080fd5b82356020610f28610eb383610e6e565b82815260059290921b85018101918181019087841115610f4757600080fd5b8287015b84811015610fde57803567ffffffffffffffff80821115610f6c5760008081fd5b818a0191508a603f830112610f815760008081fd5b85820135604082821115610f9757610f97610e27565b610fa8828b01601f19168901610e3d565b92508183528c81838601011115610fbf5760008081fd5b8181850189850137506000908201870152845250918301918301610f4b565b50979650505050505050565b600080600060608486031215610fff57600080fd5b833567ffffffffffffffff8082111561101757600080fd5b818601915086601f83011261102b57600080fd5b8135602061103b610eb383610e6e565b82815260059290921b8401810191818101908a84111561105a57600080fd5b948201945b8386101561108157853561107281610dc6565b8252948201949082019061105f565b9750508701359250508082111561109757600080fd5b6110a387838801610e92565b935060408601359150808211156110b957600080fd5b506110c686828701610f06565b9150509250925092565b600181811c908216806110e457607f821691505b60208210811415610cc057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111455761114561111b565b5060010190565b60006020828403121561115e57600080fd5b8151610dbf81610dc6565b60006020828403121561117b57600080fd5b815160ff81168114610dbf57600080fd5b60008282101561119e5761119e61111b565b500390565b600181815b808511156111de5781600019048211156111c4576111c461111b565b808516156111d157918102915b93841c93908002906111a8565b509250929050565b6000826111f557506001610451565b8161120257506000610451565b816001811461121857600281146112225761123e565b6001915050610451565b60ff8411156112335761123361111b565b50506001821b610451565b5060208310610133831016604e8410600b8410161715611261575081810a610451565b61126b83836111a3565b806000190482111561127f5761127f61111b565b029392505050565b6000610dbf83836111e6565b6000826112b057634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112cf576112cf61111b565b500290565b6000602082840312156112e657600080fd5b5051919050565b80516001600160801b038116811461130457600080fd5b919050565b6000806040838503121561131c57600080fd5b611325836112ed565b9150611333602084016112ed565b90509250929050565b600060208083526000845481600182811c91508083168061135e57607f831692505b85831081141561137c57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561139957600181146113aa576113d5565b60ff198616825287820196506113d5565b60008b81526020902060005b868110156113cf578154848201529085019089016113b6565b83019750505b5094999850505050505050505056fea164736f6c634300080a000a";

type DiaPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiaPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiaPriceOracle__factory extends ContractFactory {
  constructor(...args: DiaPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: string,
    canAdminOverwrite: boolean,
    wtoken: string,
    nativeTokenUsd: string,
    nativeTokenUsdKey: string,
    masterPriceOracle: string,
    usdToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DiaPriceOracle> {
    return super.deploy(
      _admin,
      canAdminOverwrite,
      wtoken,
      nativeTokenUsd,
      nativeTokenUsdKey,
      masterPriceOracle,
      usdToken,
      overrides || {}
    ) as Promise<DiaPriceOracle>;
  }
  override getDeployTransaction(
    _admin: string,
    canAdminOverwrite: boolean,
    wtoken: string,
    nativeTokenUsd: string,
    nativeTokenUsdKey: string,
    masterPriceOracle: string,
    usdToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _admin,
      canAdminOverwrite,
      wtoken,
      nativeTokenUsd,
      nativeTokenUsdKey,
      masterPriceOracle,
      usdToken,
      overrides || {}
    );
  }
  override attach(address: string): DiaPriceOracle {
    return super.attach(address) as DiaPriceOracle;
  }
  override connect(signer: Signer): DiaPriceOracle__factory {
    return super.connect(signer) as DiaPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiaPriceOracleInterface {
    return new utils.Interface(_abi) as DiaPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiaPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as DiaPriceOracle;
  }
}
