/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LeveredPositionFactoryFirstExtension,
  LeveredPositionFactoryFirstExtensionInterface,
} from "../LeveredPositionFactoryFirstExtension";

const _abi = [
  {
    type: "function",
    name: "_getExtensionFunctions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "blocksPerYear",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "closeAndRemoveUserPosition",
    inputs: [
      {
        name: "position",
        type: "address",
        internalType: "contract LeveredPosition",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeDistributor",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFeeDistributor",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccountsWithOpenPositions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowableMarketsByCollateral",
    inputs: [
      {
        name: "_collateralMarket",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMinBorrowNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionsByAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "positions",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "closed",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPositionsExtension",
    inputs: [
      {
        name: "msgSig",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRedemptionStrategies",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "strategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "strategiesData",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedCollateralMarkets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidatorsRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILiquidatorsRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeClosedPosition",
    inputs: [
      {
        name: "closedPosition",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "NoSuchPosition",
    inputs: [],
  },
  {
    type: "error",
    name: "PairNotWhitelisted",
    inputs: [],
  },
  {
    type: "error",
    name: "PositionNotClosed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610096565b600180546001600160a01b031916905561004381610046602090811b610a0617901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112d8806100a56000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063d337a1da11610071578063d337a1da1461022e578063e30c397814610241578063ed287f3f14610252578063f2fde38b14610273578063f4e610661461028657600080fd5b80638da5cb5b146101e9578063a339d751146101fa578063a385fb9614610202578063ca2de6bc1461020b57600080fd5b806316bb997f116100e957806316bb997f1461019b578063715018a6146101ae57806379ba5097146101b857806386ef7482146101c057806389f8132e146101d457600080fd5b80630973e9161461011b5780630d43e8ad146101455780630da2262c1461017057806312468b7714610186575b600080fd5b61012e610129366004610d62565b610299565b60405161013c929190610dc3565b60405180910390f35b600954610158906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b6101786103c8565b60405190815260200161013c565b61018e61043b565b60405161013c9190610e1c565b600a54610158906001600160a01b031681565b6101b6610447565b005b6101b661049c565b6101586101ce366004610e2f565b50600090565b6101dc610516565b60405161013c9190610e59565b6000546001600160a01b0316610158565b61018e6107e0565b610178600b5481565b61021e610219366004610d62565b6107ec565b604051901515815260200161013c565b61021e61023c366004610d62565b6107f8565b6001546001600160a01b0316610158565b610265610260366004610ea7565b6108e8565b60405161013c929190610f10565b6101b6610281366004610d62565b610971565b61018e610294366004610d62565b6109e2565b6001600160a01b038116600090815260046020526040902060609081906102bf90610a56565b9150815167ffffffffffffffff8111156102db576102db610fc9565b604051908082528060200260200182016040528015610304578160200160208202803683370190505b50905060005b82518110156103c25782818151811061032557610325610fdf565b60200260200101516001600160a01b0316633e2f147f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190610ff5565b8282815181106103a0576103a0610fdf565b91151560209283029190910190910152806103ba8161102d565b91505061030a565b50915091565b6009546040805163fdb25fb160e01b815290516000926001600160a01b03169163fdb25fb19160048083019260209291908290030181865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190611048565b905090565b60606104366002610a56565b61044f610a63565b60405162461bcd60e51b815260206004820152601e60248201527f72656e6f756e6365206f776e657273686970206e6f7420616c6c6f776564000060448201526064015b60405180910390fd5b60015433906001600160a01b0316811461050a5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610493565b61051381610abf565b50565b60408051600980825261014082019092526060919060009082602082016101208036833701905050905063328b79af60e21b8161055284611061565b93508360ff168151811061056857610568610fdf565b6001600160e01b03199092166020928302919091019091015263699bd0ed60e11b8161059384611061565b93508360ff16815181106105a9576105a9610fdf565b6001600160e01b031990921660209283029190910190910152630368898b60e21b816105d484611061565b93508360ff16815181106105ea576105ea610fdf565b6001600160e01b03199092166020928302919091019091015263ed287f3f60e01b8161061584611061565b93508360ff168151811061062b5761062b610fdf565b6001600160e01b031990921660209283029190910190910152637a73083360e11b8161065684611061565b93508360ff168151811061066c5761066c610fdf565b6001600160e01b03199092166020928302919091019091015263a339d75160e01b8161069784611061565b93508360ff16815181106106ad576106ad610fdf565b6001600160e01b0319909216602092830291909101909101526312468b7760e01b816106d884611061565b93508360ff16815181106106ee576106ee610fdf565b6001600160e01b0319909216602092830291909101909101526304b9f48b60e11b8161071984611061565b93508360ff168151811061072f5761072f610fdf565b6001600160e01b031990921660209283029190910190910152634377ba4160e11b8161075a84611061565b93508360ff168151811061077057610770610fdf565b6001600160e01b03199092166020928302919091019091015260ff8216156107da5760405162461bcd60e51b815260206004820152601c60248201527f7573652074686520636f7272656374206172726179206c656e677468000000006044820152606401610493565b92915050565b60606104366005610a56565b60006107da8233610ad8565b6000610802610a63565b6000826001600160a01b031663cb2af14b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610866919061107e565b604051632f86e2dd60e01b81526001600160a01b03808316600483015291925090841690632f86e2dd906024016020604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190611048565b506108e18382610ad8565b9392505050565b600a5460405163ed287f3f60e01b81526001600160a01b0384811660048301528381166024830152606092839291169063ed287f3f90604401600060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261096691908101906111d9565b915091509250929050565b610979610a63565b600180546001600160a01b0383166001600160a01b031990911681179091556109aa6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6001600160a01b03811660009081526007602052604090206060906107da90610a56565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606060006108e183610bdf565b6000546001600160a01b03163314610abd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610493565b565b600180546001600160a01b031916905561051381610a06565b6001600160a01b0381166000908152600460205260408120610b1681856001600160a01b031660009081526001919091016020526040902054151590565b610b3357604051632af0900d60e21b815260040160405180910390fd5b836001600160a01b0316633e2f147f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190610ff5565b610bb2576040516345916a4760e11b815260040160405180910390fd5b610bbc8185610c3b565b9150610bc781610c50565b610bd857610bd6600284610c3b565b505b5092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c2f57602002820191906000526020600020905b815481526020019060010190808311610c1b575b50505050509050919050565b60006108e1836001600160a01b038416610c5a565b60006107da825490565b60008181526001830160205260408120548015610d43576000610c7e60018361129e565b8554909150600090610c929060019061129e565b9050818114610cf7576000866000018281548110610cb257610cb2610fdf565b9060005260206000200154905080876000018481548110610cd557610cd5610fdf565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d0857610d086112b5565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107da565b60009150506107da565b6001600160a01b038116811461051357600080fd5b600060208284031215610d7457600080fd5b81356108e181610d4d565b600081518084526020808501945080840160005b83811015610db85781516001600160a01b031687529582019590820190600101610d93565b509495945050505050565b604081526000610dd66040830185610d7f565b82810360208481019190915284518083528582019282019060005b81811015610e0f578451151583529383019391830191600101610df1565b5090979650505050505050565b6020815260006108e16020830184610d7f565b600060208284031215610e4157600080fd5b81356001600160e01b0319811681146108e157600080fd5b6020808252825182820181905260009190848201906040850190845b81811015610e9b5783516001600160e01b03191683529284019291840191600101610e75565b50909695505050505050565b60008060408385031215610eba57600080fd5b8235610ec581610d4d565b91506020830135610ed581610d4d565b809150509250929050565b60005b83811015610efb578181015183820152602001610ee3565b83811115610f0a576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b82811015610f525781516001600160a01b031684529284019290840190600101610f2d565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015610fba57601f198087850301865282518051808652610f9c818b88018c8501610ee0565b96890196601f01909116939093018701925090860190600101610f74565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561100757600080fd5b815180151581146108e157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561104157611041611017565b5060010190565b60006020828403121561105a57600080fd5b5051919050565b600060ff82168061107457611074611017565b6000190192915050565b60006020828403121561109057600080fd5b81516108e181610d4d565b604051601f8201601f1916810167ffffffffffffffff811182821017156110c4576110c4610fc9565b604052919050565b600067ffffffffffffffff8211156110e6576110e6610fc9565b5060051b60200190565b6000601f838184011261110257600080fd5b82516020611117611112836110cc565b61109b565b82815260059290921b8501810191818101908784111561113657600080fd5b8287015b848110156111cd57805167ffffffffffffffff8082111561115b5760008081fd5b818a0191508a603f8301126111705760008081fd5b8582015160408282111561118657611186610fc9565b611197828b01601f1916890161109b565b92508183528c818386010111156111ae5760008081fd5b6111bd82898501838701610ee0565b505084525091830191830161113a565b50979650505050505050565b600080604083850312156111ec57600080fd5b825167ffffffffffffffff8082111561120457600080fd5b818501915085601f83011261121857600080fd5b81516020611228611112836110cc565b82815260059290921b8401810191818101908984111561124757600080fd5b948201945b8386101561126e57855161125f81610d4d565b8252948201949082019061124c565b9188015191965090935050508082111561128757600080fd5b50611294858286016110f0565b9150509250929050565b6000828210156112b0576112b0611017565b500390565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080a000a";

type LeveredPositionFactoryFirstExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveredPositionFactoryFirstExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeveredPositionFactoryFirstExtension__factory extends ContractFactory {
  constructor(...args: LeveredPositionFactoryFirstExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<LeveredPositionFactoryFirstExtension> {
    return super.deploy(
      overrides || {}
    ) as Promise<LeveredPositionFactoryFirstExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LeveredPositionFactoryFirstExtension {
    return super.attach(address) as LeveredPositionFactoryFirstExtension;
  }
  override connect(
    signer: Signer
  ): LeveredPositionFactoryFirstExtension__factory {
    return super.connect(
      signer
    ) as LeveredPositionFactoryFirstExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveredPositionFactoryFirstExtensionInterface {
    return new utils.Interface(
      _abi
    ) as LeveredPositionFactoryFirstExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveredPositionFactoryFirstExtension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LeveredPositionFactoryFirstExtension;
  }
}
