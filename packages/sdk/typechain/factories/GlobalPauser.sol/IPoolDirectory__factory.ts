/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPoolDirectory,
  IPoolDirectoryInterface,
} from "../../GlobalPauser.sol/IPoolDirectory";

const _abi = [
  {
    type: "function",
    name: "getActivePools",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IPoolDirectory.Pool[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "creator",
            type: "address",
            internalType: "address",
          },
          {
            name: "comptroller",
            type: "address",
            internalType: "address",
          },
          {
            name: "blockPosted",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timestampPosted",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IPoolDirectory__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolDirectoryInterface {
    return new utils.Interface(_abi) as IPoolDirectoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPoolDirectory {
    return new Contract(address, _abi, signerOrProvider) as IPoolDirectory;
  }
}
