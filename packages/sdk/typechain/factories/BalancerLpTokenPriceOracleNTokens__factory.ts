/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerLpTokenPriceOracleNTokens,
  BalancerLpTokenPriceOracleNTokensInterface,
} from "../BalancerLpTokenPriceOracleNTokens";

const _abi = [
  {
    type: "function",
    name: "BONE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "BPOW_PRECISION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "EXIT_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "INIT_POOL_SUPPLY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_IN_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_OUT_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_TOTAL_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BALANCE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_masterPriceOracle",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "masterPriceOracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c81806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063b7b800a4116100de578063c6580d1211610097578063ec09302111610071578063ec093021146102a3578063f2fde38b146102ab578063fc4d33f9146102be578063fc57d4df146102c657600080fd5b8063c6580d1214610288578063e30c397814610290578063e4a28a521461019357600080fd5b8063b7b800a414610255578063ba019dab1461025d578063bc063e1a14610265578063bc694ea21461026d578063c36596a6146101b6578063c4d66de81461027557600080fd5b8063867378c51161014b578063992e2a9211610125578063992e2a921461021f578063aea9107814610227578063b0e0d1361461023a578063b46493a71461024257600080fd5b8063867378c5146101ea5780638da5cb5b146101f25780639381cd2b1461021757600080fd5b806309a3bbe414610193578063189d00ca146101ae578063218b5382146101b65780636e96dfd7146101c5578063715018a6146101da57806376c7a3c7146101e2575b600080fd5b61019b6102d9565b6040519081526020015b60405180910390f35b61019b6102ef565b61019b670de0b6b3a764000081565b6101d86101d336600461180f565b610306565b005b6101d8610370565b61019b6103b8565b61019b6103cd565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101a5565b61019b6103e4565b61019b6103f7565b61019b61023536600461180f565b610415565b61019b600881565b6066546101ff906001600160a01b031681565b61019b600281565b61019b600181565b61019b610426565b61019b610439565b6101d861028336600461180f565b610458565b61019b600081565b6065546101ff906001600160a01b031681565b61019b610582565b6101d86102b936600461180f565b610595565b6101d8610606565b61019b6102d436600461180f565b61071a565b6102ec670de0b6b3a76400006032611842565b81565b6102ec6402540be400670de0b6b3a7640000611877565b61030e61081d565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b61037861081d565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6102ec620f4240670de0b6b3a7640000611877565b6102ec64e8d4a51000670de0b6b3a7640000611877565b6102ec670de0b6b3a76400006064611842565b61040a6003670de0b6b3a7640000611877565b6102ec90600161188b565b600061042082610879565b92915050565b6102ec600a670de0b6b3a7640000611877565b600161044e670de0b6b3a76400006002611842565b6102ec91906118a3565b600054610100900460ff16158080156104785750600054600160ff909116105b806104925750303b158015610492575060005460ff166001145b6104f55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6000805460ff191660011790558015610518576000805461ff0019166101001790555b61052133610dfc565b606680546001600160a01b0319166001600160a01b038416179055801561057e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610364565b5050565b6102ec6002670de0b6b3a7640000611877565b61059d61081d565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146106585760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b60448201526064016103af565b600061066c6033546001600160a01b031690565b6065549091506001600160a01b031661068481610e37565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610364565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f91906118ba565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906118d7565b6107f19060ff16600a6119de565b6107fa82610879565b61080c90670de0b6b3a7640000611842565b6108169190611877565b9392505050565b6033546001600160a01b031633146108775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103af565b565b6000808290506000816001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e391906119ea565b90506000826001600160a01b0316638d928af86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094991906118ba565b9050600080826001600160a01b031663f94d4668856040518263ffffffff1660e01b815260040161097c91815260200190565b600060405180830381865afa158015610999573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c19190810190611ad9565b50915091506000825190506000866001600160a01b031663f89f27ed6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a349190810190611ba7565b905080518214610a7c5760405162461bcd60e51b81526020600482015260136024820152726e546f6b656e7320213d206e5765696768747360681b60448201526064016103af565b60008267ffffffffffffffff811115610a9757610a97611a03565b604051908082528060200260200182016040528015610ac0578160200160208202803683370190505b50905060005b83811015610d065760665486516000916001600160a01b03169063aea9107890899085908110610af857610af8611be4565b60200260200101516040518263ffffffff1660e01b8152600401610b2b91906001600160a01b0391909116815260200190565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906119ea565b90506000878381518110610b8257610b82611be4565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610beb91906118d7565b60ff1690506012811015610c5657610c048160126118a3565b610c0f90600a6119de565b878481518110610c2157610c21611be4565b6020026020010151610c339190611842565b878481518110610c4557610c45611be4565b602002602001018181525050610cd2565b6012811115610c9957610c6a6012826118a3565b610c7590600a6119de565b878481518110610c8757610c87611be4565b6020026020010151610c339190611877565b868381518110610cab57610cab611be4565b6020026020010151878481518110610cc557610cc5611be4565b6020026020010181815250505b81848481518110610ce557610ce5611be4565b60200260200101818152505050508080610cfe90611bfa565b915050610ac6565b506000610d14858484610e89565b90506000805b8251811015610d7f57838181518110610d3557610d35611be4565b6020026020010151838281518110610d4f57610d4f611be4565b6020026020010151610d619190611842565b610d6b908361188b565b915080610d7781611bfa565b915050610d1a565b50896001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de291906119ea565b610dec9082611877565b9c9b505050505050505050505050565b600054610100900460ff16610e235760405162461bcd60e51b81526004016103af90611c15565b610e2b6111f7565b610e3481610e37565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606000845167ffffffffffffffff811115610ea757610ea7611a03565b604051908082528060200260200182016040528015610ed0578160200160208202803683370190505b50905060005b85518110156111ee576000865167ffffffffffffffff811115610efb57610efb611a03565b604051908082528060200260200182016040528015610f24578160200160208202803683370190505b5090506000875167ffffffffffffffff811115610f4357610f43611a03565b604051908082528060200260200182016040528015610f6c578160200160208202803683370190505b50905060005b88518110156110c65780841415610fc8576001838281518110610f9757610f97611be4565b6020026020010181815250506001828281518110610fb757610fb7611be4565b6020026020010181815250506110b4565b611004898581518110610fdd57610fdd611be4565b60200260200101518a8381518110610ff757610ff7611be4565b6020026020010151611226565b83828151811061101657611016611be4565b60200260200101818152505061109561106189868151811061103a5761103a611be4565b602002602001015189848151811061105457611054611be4565b6020026020010151611348565b6110908a848151811061107657611076611be4565b60200260200101518a888151811061105457611054611be4565b611226565b8282815181106110a7576110a7611be4565b6020026020010181815250505b806110be81611bfa565b915050610f72565b5060008884815181106110db576110db611be4565b6020026020010151905060005b83518110156111b857600084828151811061110557611105611be4565b60200260200101519050600084838151811061112357611123611be4565b60200260200101519050808211156111775760006111418284611226565b905061116f8561116a838f888151811061115d5761115d611be4565b6020026020010151611423565b611348565b9450506111a3565b60006111838383611226565b905061119f8561116a838f888151811061115d5761115d611be4565b9450505b505080806111b090611bfa565b9150506110e8565b50808585815181106111cc576111cc611be4565b60200260200101818152505050505080806111e690611bfa565b915050610ed6565b50949350505050565b600054610100900460ff1661121e5760405162461bcd60e51b81526004016103af90611c15565b61087761154f565b6000816112645760405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b60448201526064016103af565b6000611278670de0b6b3a764000085611842565b90508315806112975750670de0b6b3a76400006112958583611877565b145b6112d65760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b60448201526064016103af565b60006112e3600285611877565b6112ed908361188b565b9050818110156113325760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b60448201526064016103af565b600061133e8583611877565b9695505050505050565b6000806113558385611842565b905083158061136c57508261136a8583611877565b145b6113ab5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b60448201526064016103af565b60006113c06002670de0b6b3a7640000611877565b6113ca908361188b565b90508181101561140f5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b60448201526064016103af565b600061133e670de0b6b3a764000083611877565b6000600183101561146e5760405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b60448201526064016103af565b6001611483670de0b6b3a76400006002611842565b61148d91906118a3565b8311156114d55760405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b60448201526064016103af565b60006114e08361157f565b905060006114ee848361159d565b90506000611504866114ff856115fa565b61160e565b905081611515579250610420915050565b600061153887846115336402540be400670de0b6b3a7640000611877565b611681565b90506115448282611348565b979650505050505050565b600054610100900460ff166115765760405162461bcd60e51b81526004016103af90611c15565b61087733610e37565b6000670de0b6b3a7640000611593836115fa565b6104209190611842565b60008060006115ac8585611771565b9150915080156115f25760405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b60448201526064016103af565b509392505050565b6000610420670de0b6b3a764000083611877565b60008061161c600284611c60565b61162e57670de0b6b3a7640000611630565b835b905061163d600284611877565b92505b8215610816576116508485611348565b935061165d600284611c60565b1561166f5761166c8185611348565b90505b61167a600284611877565b9250611640565b600082818061169887670de0b6b3a7640000611771565b9092509050670de0b6b3a764000080600060015b8884106117625760006116c7670de0b6b3a764000083611842565b90506000806116e78a6116e285670de0b6b3a764000061159d565b611771565b915091506116f98761116a848c611348565b96506117058784611226565b96508661171457505050611762565b871561171e579315935b8015611728579315935b841561173f57611738868861159d565b955061174c565b61174986886117a8565b95505b505050808061175a90611bfa565b9150506116ac565b50909998505050505050505050565b6000808284106117905761178583856118a3565b6000915091506117a1565b61179a84846118a3565b6001915091505b9250929050565b6000806117b5838561188b565b9050838110156108165760405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b60448201526064016103af565b6001600160a01b0381168114610e3457600080fd5b60006020828403121561182157600080fd5b8135610816816117fa565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561185c5761185c61182c565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261188657611886611861565b500490565b6000821982111561189e5761189e61182c565b500190565b6000828210156118b5576118b561182c565b500390565b6000602082840312156118cc57600080fd5b8151610816816117fa565b6000602082840312156118e957600080fd5b815160ff8116811461081657600080fd5b600181815b8085111561193557816000190482111561191b5761191b61182c565b8085161561192857918102915b93841c93908002906118ff565b509250929050565b60008261194c57506001610420565b8161195957506000610420565b816001811461196f576002811461197957611995565b6001915050610420565b60ff84111561198a5761198a61182c565b50506001821b610420565b5060208310610133831016604e8410600b84101617156119b8575081810a610420565b6119c283836118fa565b80600019048211156119d6576119d661182c565b029392505050565b6000610816838361193d565b6000602082840312156119fc57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a4257611a42611a03565b604052919050565b600067ffffffffffffffff821115611a6457611a64611a03565b5060051b60200190565b600082601f830112611a7f57600080fd5b81516020611a94611a8f83611a4a565b611a19565b82815260059290921b84018101918181019086841115611ab357600080fd5b8286015b84811015611ace5780518352918301918301611ab7565b509695505050505050565b600080600060608486031215611aee57600080fd5b835167ffffffffffffffff80821115611b0657600080fd5b818601915086601f830112611b1a57600080fd5b81516020611b2a611a8f83611a4a565b82815260059290921b8401810191818101908a841115611b4957600080fd5b948201945b83861015611b70578551611b61816117fa565b82529482019490820190611b4e565b91890151919750909350505080821115611b8957600080fd5b50611b9686828701611a6e565b925050604084015190509250925092565b600060208284031215611bb957600080fd5b815167ffffffffffffffff811115611bd057600080fd5b611bdc84828501611a6e565b949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c0e57611c0e61182c565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082611c6f57611c6f611861565b50069056fea164736f6c634300080a000a";

type BalancerLpTokenPriceOracleNTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerLpTokenPriceOracleNTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerLpTokenPriceOracleNTokens__factory extends ContractFactory {
  constructor(...args: BalancerLpTokenPriceOracleNTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BalancerLpTokenPriceOracleNTokens> {
    return super.deploy(
      overrides || {}
    ) as Promise<BalancerLpTokenPriceOracleNTokens>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerLpTokenPriceOracleNTokens {
    return super.attach(address) as BalancerLpTokenPriceOracleNTokens;
  }
  override connect(signer: Signer): BalancerLpTokenPriceOracleNTokens__factory {
    return super.connect(signer) as BalancerLpTokenPriceOracleNTokens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerLpTokenPriceOracleNTokensInterface {
    return new utils.Interface(
      _abi
    ) as BalancerLpTokenPriceOracleNTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerLpTokenPriceOracleNTokens {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalancerLpTokenPriceOracleNTokens;
  }
}
