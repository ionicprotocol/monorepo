/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  FeedRegistryInterface,
  FeedRegistryInterfaceInterface,
} from "../FeedRegistryInterface";

const _abi = [
  {
    type: "function",
    name: "confirmFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "description",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAnswer",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentPhaseId",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "currentPhaseId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "contract AggregatorV2V3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNextRoundId",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    outputs: [
      {
        name: "nextRoundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPhase",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "phaseId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "phase",
        type: "tuple",
        internalType: "struct FeedRegistryInterface.Phase",
        components: [
          {
            name: "phaseId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "startingAggregatorRoundId",
            type: "uint80",
            internalType: "uint80",
          },
          {
            name: "endingAggregatorRoundId",
            type: "uint80",
            internalType: "uint80",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPhaseFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "phaseId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "contract AggregatorV2V3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPhaseRange",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "phaseId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "startingRoundId",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "endingRoundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPreviousRoundId",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    outputs: [
      {
        name: "previousRoundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProposedFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "proposedAggregator",
        type: "address",
        internalType: "contract AggregatorV2V3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoundData",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "_roundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    outputs: [
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "startedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "updatedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "answeredInRound",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoundFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    outputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "contract AggregatorV2V3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTimestamp",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isFeedEnabled",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestAnswer",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestRound",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "roundId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestRoundData",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "startedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "updatedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "answeredInRound",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestTimestamp",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proposeFeed",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proposedGetRoundData",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
      {
        name: "roundId",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    outputs: [
      {
        name: "id",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "startedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "updatedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "answeredInRound",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proposedLatestRoundData",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "id",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "startedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "updatedAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "answeredInRound",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [
      {
        name: "base",
        type: "address",
        internalType: "address",
      },
      {
        name: "quote",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "FeedConfirmed",
    inputs: [
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "denomination",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "latestAggregator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "previousAggregator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "nextPhaseId",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FeedProposed",
    inputs: [
      {
        name: "asset",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "denomination",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "proposedAggregator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "currentAggregator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

export class FeedRegistryInterface__factory {
  static readonly abi = _abi;
  static createInterface(): FeedRegistryInterfaceInterface {
    return new utils.Interface(_abi) as FeedRegistryInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedRegistryInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FeedRegistryInterface;
  }
}
