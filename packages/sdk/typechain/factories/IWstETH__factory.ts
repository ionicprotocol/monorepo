/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IWstETH, IWstETHInterface } from "../IWstETH";

const _abi = [
  {
    type: "function",
    name: "stETH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stEthPerToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokensPerStEth",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unwrap",
    inputs: [
      {
        name: "_wstETHAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IWstETH__factory {
  static readonly abi = _abi;
  static createInterface(): IWstETHInterface {
    return new utils.Interface(_abi) as IWstETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWstETH {
    return new Contract(address, _abi, signerOrProvider) as IWstETH;
  }
}
