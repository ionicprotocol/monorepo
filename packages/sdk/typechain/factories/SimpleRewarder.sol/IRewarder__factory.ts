/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRewarder,
  IRewarderInterface,
} from "../../SimpleRewarder.sol/IRewarder";

const _abi = [
  {
    type: "function",
    name: "onSaddleReward",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "saddleAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newLpAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pendingTokens",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "saddleAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "contract IERC20[]",
      },
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IRewarder__factory {
  static readonly abi = _abi;
  static createInterface(): IRewarderInterface {
    return new utils.Interface(_abi) as IRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRewarder {
    return new Contract(address, _abi, signerOrProvider) as IRewarder;
  }
}
