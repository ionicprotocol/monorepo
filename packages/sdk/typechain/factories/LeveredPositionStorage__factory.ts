/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LeveredPositionStorage,
  LeveredPositionStorageInterface,
} from "../LeveredPositionStorage";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_positionOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralAsset",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collateralMarket",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILeveredPositionFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IonicComptroller",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positionOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stableAsset",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stableMarket",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516101cf3803806101cf83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161014461008b600039600061011501526101446000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a7e269a61161005b578063a7e269a6146100d7578063aabaecd6146100ea578063c45a0155146100fd578063cb2af14b1461011057600080fd5b806316f0115b146100825780636813f999146100b1578063a415deda146100c4575b600080fd5b600354610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600554610095906001600160a01b031681565b600154610095906001600160a01b031681565b600254610095906001600160a01b031681565b600454610095906001600160a01b031681565b600054610095906001600160a01b031681565b6100957f00000000000000000000000000000000000000000000000000000000000000008156fea164736f6c634300080a000a";

type LeveredPositionStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveredPositionStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeveredPositionStorage__factory extends ContractFactory {
  constructor(...args: LeveredPositionStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _positionOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LeveredPositionStorage> {
    return super.deploy(
      _positionOwner,
      overrides || {}
    ) as Promise<LeveredPositionStorage>;
  }
  override getDeployTransaction(
    _positionOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_positionOwner, overrides || {});
  }
  override attach(address: string): LeveredPositionStorage {
    return super.attach(address) as LeveredPositionStorage;
  }
  override connect(signer: Signer): LeveredPositionStorage__factory {
    return super.connect(signer) as LeveredPositionStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveredPositionStorageInterface {
    return new utils.Interface(_abi) as LeveredPositionStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveredPositionStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LeveredPositionStorage;
  }
}
