/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveV2LpTokenPriceOracleNoRegistry,
  CurveV2LpTokenPriceOracleNoRegistryInterface,
} from "../CurveV2LpTokenPriceOracleNoRegistry";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllLPTokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPoolForSwap",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICurvePool",
      },
      {
        name: "",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "",
        type: "int128",
        internalType: "int128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_lpTokens",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_pools",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lpTokens",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "masterPriceOracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract MasterPriceOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerPool",
    inputs: [
      {
        name: "_lpToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "usdToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063aea9107811610097578063f897a22b11610066578063f897a22b14610248578063fa09e1e11461025b578063fc4d33f914610270578063fc57d4df1461027857600080fd5b8063aea91078146101ee578063b46493a71461020f578063e30c397814610222578063f2fde38b1461023557600080fd5b806373cf25f8116100d357806373cf25f8146101655780638da5cb5b14610178578063938bd8ec14610189578063988b1fa7146101c557600080fd5b80631bb5e2dc146101055780636e96dfd714610135578063715018a61461014a5780637286e5e514610152575b600080fd5b610118610113366004610e7a565b61028b565b6040516001600160a01b0390911681526020015b60405180910390f35b610148610143366004610eb8565b6102b5565b005b61014861031f565b610148610160366004610ed5565b610367565b610148610173366004610fc6565b6104ca565b6033546001600160a01b0316610118565b61019c610197366004610ed5565b6106e5565b604080516001600160a01b039094168452600f92830b6020850152910b9082015260600161012c565b6101186101d3366004610eb8565b6068602052600090815260409020546001600160a01b031681565b6102016101fc366004610eb8565b610869565b60405190815260200161012c565b606754610118906001600160a01b031681565b606554610118906001600160a01b031681565b610148610243366004610eb8565b61087a565b606654610118906001600160a01b031681565b6102636108eb565b60405161012c919061102a565b61014861094d565b610201610286366004610eb8565b610a61565b6069818154811061029b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6102bd610b64565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610327610b64565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b61036f610b64565b6001600160a01b038083166000908152606860205260409020541680156103e45760405162461bcd60e51b8152602060048201526024808201527f54686973204c5020746f6b656e20697320616c726561647920726567697374656044820152633932b21760e11b606482015260840161035e565b6001600160a01b03838116600090815260686020526040812080546001600160a01b03191692851692909217909155805b60695481101561047257846001600160a01b03166069828154811061043c5761043c611077565b6000918252602090912001546001600160a01b031614156104605760019150610472565b8061046a816110a3565b915050610415565b50806104c457606980546001810182556000919091527f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143080180546001600160a01b0319166001600160a01b0386161790555b50505050565b600054610100900460ff16158080156104ea5750600054600160ff909116105b806105045750303b158015610504575060005460ff166001145b6105675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161035e565b6000805460ff19166001179055801561058a576000805461ff0019166101001790555b81518351146105f55760405162461bcd60e51b815260206004820152603160248201527f4e6f204c5020746f6b656e7320737570706c696564206f72206172726179206c60448201527032b733ba3439903737ba1032b8bab0b61760791b606482015260840161035e565b6105fe33610bc0565b60005b82518110156106995782818151811061061c5761061c611077565b60200260200101516068600086848151811061063a5761063a611077565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080610691906110a3565b915050610601565b5080156106e0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60008080805b606954811015610855576000606860006069848154811061070e5761070e611077565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910181205490911691506000199081905b60405163c661065760e01b81526fffffffffffffffffffffffffffffffff821660048201526001600160a01b0385169063c661065790602401602060405180830381865afa9250505080156107b6575060408051601f3d908101601f191682019092526107b3918101906110be565b60015b6107bf5761083e565b8a6001600160a01b0316816001600160a01b031614156107e1578193506107ff565b896001600160a01b0316816001600160a01b031614156107ff578192505b81610809816110db565b9250505060001982600f0b138015610825575060001983600f0b135b156108395750919550935091506108629050565b610744565b50505050808061084d906110a3565b9150506106eb565b5060008060009250925092505b9250925092565b600061087482610bfb565b92915050565b610882610b64565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6060606980548060200260200160405190810160405280929190818152602001828054801561094357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610925575b5050505050905090565b6065546001600160a01b0316331461099f5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b604482015260640161035e565b60006109b36033546001600160a01b031690565b6065549091506001600160a01b03166109cb81610dce565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610313565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac691906110be565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a919061110a565b610b389060ff16600a611211565b610b4182610bfb565b610b5390670de0b6b3a764000061121d565b610b5d919061123c565b9392505050565b6033546001600160a01b03163314610bbe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035e565b565b600054610100900460ff16610be75760405162461bcd60e51b815260040161035e9061125e565b610bef610e20565b610bf881610dce565b50565b6001600160a01b0380821660009081526068602052604081205490911680610c655760405162461bcd60e51b815260206004820152601b60248201527f4c5020746f6b656e206973206e6f7420726567697374657265642e0000000000604482015260640161035e565b60405163c661065760e01b8152600060048201819052906001600160a01b0383169063c661065790602401602060405180830381865afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd191906110be565b90506000826001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3791906112a9565b6040516315d5220f60e31b81526001600160a01b0384166004820152909150600090339063aea9107890602401602060405180830381865afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da591906112a9565b9050670de0b6b3a7640000610dba828461121d565b610dc4919061123c565b9695505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e475760405162461bcd60e51b815260040161035e9061125e565b610bbe600054610100900460ff16610e715760405162461bcd60e51b815260040161035e9061125e565b610bbe33610dce565b600060208284031215610e8c57600080fd5b5035919050565b6001600160a01b0381168114610bf857600080fd5b8035610eb381610e93565b919050565b600060208284031215610eca57600080fd5b8135610b5d81610e93565b60008060408385031215610ee857600080fd5b8235610ef381610e93565b91506020830135610f0381610e93565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f3557600080fd5b8135602067ffffffffffffffff80831115610f5257610f52610f0e565b8260051b604051601f19603f83011681018181108482111715610f7757610f77610f0e565b604052938452858101830193838101925087851115610f9557600080fd5b83870191505b84821015610fbb57610fac82610ea8565b83529183019190830190610f9b565b979650505050505050565b60008060408385031215610fd957600080fd5b823567ffffffffffffffff80821115610ff157600080fd5b610ffd86838701610f24565b9350602085013591508082111561101357600080fd5b5061102085828601610f24565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561106b5783516001600160a01b031683529284019291840191600101611046565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156110b7576110b761108d565b5060010190565b6000602082840312156110d057600080fd5b8151610b5d81610e93565b600081600f0b6f7fffffffffffffffffffffffffffffff8114156111015761110161108d565b60010192915050565b60006020828403121561111c57600080fd5b815160ff81168114610b5d57600080fd5b600181815b8085111561116857816000190482111561114e5761114e61108d565b8085161561115b57918102915b93841c9390800290611132565b509250929050565b60008261117f57506001610874565b8161118c57506000610874565b81600181146111a257600281146111ac576111c8565b6001915050610874565b60ff8411156111bd576111bd61108d565b50506001821b610874565b5060208310610133831016604e8410600b84101617156111eb575081810a610874565b6111f5838361112d565b80600019048211156112095761120961108d565b029392505050565b6000610b5d8383611170565b60008160001904831182151516156112375761123761108d565b500290565b60008261125957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156112bb57600080fd5b505191905056fea164736f6c634300080a000a";

type CurveV2LpTokenPriceOracleNoRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveV2LpTokenPriceOracleNoRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveV2LpTokenPriceOracleNoRegistry__factory extends ContractFactory {
  constructor(...args: CurveV2LpTokenPriceOracleNoRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CurveV2LpTokenPriceOracleNoRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<CurveV2LpTokenPriceOracleNoRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveV2LpTokenPriceOracleNoRegistry {
    return super.attach(address) as CurveV2LpTokenPriceOracleNoRegistry;
  }
  override connect(
    signer: Signer
  ): CurveV2LpTokenPriceOracleNoRegistry__factory {
    return super.connect(
      signer
    ) as CurveV2LpTokenPriceOracleNoRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveV2LpTokenPriceOracleNoRegistryInterface {
    return new utils.Interface(
      _abi
    ) as CurveV2LpTokenPriceOracleNoRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveV2LpTokenPriceOracleNoRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveV2LpTokenPriceOracleNoRegistry;
  }
}
