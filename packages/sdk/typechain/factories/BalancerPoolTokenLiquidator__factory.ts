/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerPoolTokenLiquidator,
  BalancerPoolTokenLiquidatorInterface,
} from "../BalancerPoolTokenLiquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506110fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b604080518082018252601b81527f42616c616e636572506f6f6c546f6b656e4c697175696461746f7200000000006020820152905161007a9190610c17565b60405180910390f35b610096610091366004610ca9565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b60008060008590506000816001600160a01b031663be3bbd2e6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101259190810190610df2565b90506000815167ffffffffffffffff81111561014357610143610c62565b60405190808252806020026020018201604052801561016c578160200160208202803683370190505b5060405163b02f0b7360e01b81529091506001600160a01b0384169063b02f0b739061019e908a908590600401610e27565b600060405180830381600087803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b50505050600080878060200190518101906101e79190610e75565b91509150835181511461028d5760405162461bcd60e51b815260206004820152605860248201527f53776170207061746873206172726179206c656e677468206d757374206d617460448201527f636820746865206e756d626572206f6620756e6465726c79696e6720746f6b6560648201527f6e7320696e207468652042616c616e63657220706f6f6c2e0000000000000000608482015260a4015b60405180910390fd5b60015b815181101561046a5760008282815181106102ad576102ad610f3d565b602002602001015151116102da578481815181106102cd576102cd610f3d565b6020026020010151610334565b8181815181106102ec576102ec610f3d565b6020026020010151600183838151811061030857610308610f3d565b60200260200101515161031b9190610f69565b8151811061032b5761032b610f3d565b60200260200101515b6001600160a01b031660008360008151811061035257610352610f3d565b60200260200101515111610380578560008151811061037357610373610f3d565b60200260200101516103dc565b8260008151811061039357610393610f3d565b60200260200101516001846000815181106103b0576103b0610f3d565b6020026020010151516103c39190610f69565b815181106103d3576103d3610f3d565b60200260200101515b6001600160a01b0316146104585760405162461bcd60e51b815260206004820152603b60248201527f416c6c20756e6465726c79696e6720746f6b656e20737761702070617468732060448201527f6d757374206f7574707574207468652073616d6520746f6b656e2e00000000006064820152608401610284565b8061046281610f80565b915050610290565b5060005b815181101561068157600082828151811061048b5761048b610f3d565b60200260200101515111801561052457508481815181106104ae576104ae610f3d565b60200260200101516001600160a01b03168282815181106104d1576104d1610f3d565b602002602001015160018484815181106104ed576104ed610f3d565b6020026020010151516105009190610f69565b8151811061051057610510610f3d565b60200260200101516001600160a01b031614155b1561066f57600085828151811061053d5761053d610f3d565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190610f9b565b90506105d78683815181106105c8576105c8610f3d565b6020026020010151858361079b565b836001600160a01b03166338ed17398260008686815181106105fb576105fb610f3d565b602002602001015130426040518663ffffffff1660e01b8152600401610625959493929190610fb4565b6000604051808303816000875af1158015610644573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066c9190810190611025565b50505b8061067981610f80565b91505061046e565b5060008160008151811061069757610697610f3d565b602002602001015151116106c557836000815181106106b8576106b8610f3d565b6020026020010151610721565b806000815181106106d8576106d8610f3d565b60200260200101516001826000815181106106f5576106f5610f3d565b6020026020010151516107089190610f69565b8151811061071857610718610f3d565b60200260200101515b6040516370a0823160e01b81523060048201529097506001600160a01b038816906370a0823190602401602060405180830381865afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190610f9b565b95505050505050935093915050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190610f9b565b90508181101561084a578015610834576108346001600160a01b038516846000610850565b61084a6001600160a01b03851684600019610850565b50505050565b8015806108ca5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190610f9b565b155b6109355760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610284565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261098790849061098c565b505050565b60006109e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a5e9092919063ffffffff16565b80519091501561098757808060200190518101906109ff91906110ab565b6109875760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610284565b6060610a6d8484600085610a75565b949350505050565b606082471015610ad65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610284565b600080866001600160a01b03168587604051610af291906110d4565b60006040518083038185875af1925050503d8060008114610b2f576040519150601f19603f3d011682016040523d82523d6000602084013e610b34565b606091505b5091509150610b4587838387610b50565b979650505050505050565b60608315610bbc578251610bb5576001600160a01b0385163b610bb55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b5081610a6d565b610a6d8383815115610bd15781518083602001fd5b8060405162461bcd60e51b81526004016102849190610c17565b60005b83811015610c06578181015183820152602001610bee565b8381111561084a5750506000910152565b6020815260008251806020840152610c36816040850160208701610beb565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610c5f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ca157610ca1610c62565b604052919050565b600080600060608486031215610cbe57600080fd5b8335610cc981610c4a565b92506020848101359250604085013567ffffffffffffffff80821115610cee57600080fd5b818701915087601f830112610d0257600080fd5b813581811115610d1457610d14610c62565b610d26601f8201601f19168501610c78565b91508082528884828501011115610d3c57600080fd5b80848401858401376000848284010152508093505050509250925092565b600067ffffffffffffffff821115610d7457610d74610c62565b5060051b60200190565b600082601f830112610d8f57600080fd5b81516020610da4610d9f83610d5a565b610c78565b82815260059290921b84018101918181019086841115610dc357600080fd5b8286015b84811015610de7578051610dda81610c4a565b8352918301918301610dc7565b509695505050505050565b600060208284031215610e0457600080fd5b815167ffffffffffffffff811115610e1b57600080fd5b610a6d84828501610d7e565b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015610e6857845183529383019391830191600101610e4c565b5090979650505050505050565b60008060408385031215610e8857600080fd5b8251610e9381610c4a565b8092505060208084015167ffffffffffffffff80821115610eb357600080fd5b818601915086601f830112610ec757600080fd5b8151610ed5610d9f82610d5a565b81815260059190911b83018401908481019089831115610ef457600080fd5b8585015b83811015610f2c57805185811115610f105760008081fd5b610f1e8c89838a0101610d7e565b845250918601918601610ef8565b508096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610f7b57610f7b610f53565b500390565b6000600019821415610f9457610f94610f53565b5060010190565b600060208284031215610fad57600080fd5b5051919050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156110045784516001600160a01b031683529383019391830191600101610fdf565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561103857600080fd5b825167ffffffffffffffff81111561104f57600080fd5b8301601f8101851361106057600080fd5b805161106e610d9f82610d5a565b81815260059190911b8201830190838101908783111561108d57600080fd5b928401925b82841015610b4557835182529284019290840190611092565b6000602082840312156110bd57600080fd5b815180151581146110cd57600080fd5b9392505050565b600082516110e6818460208701610beb565b919091019291505056fea164736f6c634300080a000a";

type BalancerPoolTokenLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerPoolTokenLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerPoolTokenLiquidator__factory extends ContractFactory {
  constructor(...args: BalancerPoolTokenLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BalancerPoolTokenLiquidator> {
    return super.deploy(
      overrides || {}
    ) as Promise<BalancerPoolTokenLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerPoolTokenLiquidator {
    return super.attach(address) as BalancerPoolTokenLiquidator;
  }
  override connect(signer: Signer): BalancerPoolTokenLiquidator__factory {
    return super.connect(signer) as BalancerPoolTokenLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerPoolTokenLiquidatorInterface {
    return new utils.Interface(_abi) as BalancerPoolTokenLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerPoolTokenLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalancerPoolTokenLiquidator;
  }
}
