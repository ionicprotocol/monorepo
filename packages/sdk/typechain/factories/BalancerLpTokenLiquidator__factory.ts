/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerLpTokenLiquidator,
  BalancerLpTokenLiquidatorInterface,
} from "../BalancerLpTokenLiquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610907806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b604080518082018252601981527f42616c616e6365724c70546f6b656e4c697175696461746f72000000000000006020820152905161007a91906104af565b60405180910390f35b610096610091366004610528565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b60008060008590506000816001600160a01b0316638d928af86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012191906105d9565b90506000826001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610163573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018791906105f6565b604051631f29a8cd60e31b8152600481018290529091506000906001600160a01b0384169063f94d466890602401600060405180830381865afa1580156101d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101fa919081019061069e565b505090506000600019905060008880602001905181019061021b91906105d9565b90506000805b84518110156102af57826001600160a01b03168582815181106102465761024661076c565b60200260200101516001600160a01b03161415610265578093506102af565b8c6001600160a01b03168582815181106102815761028161076c565b60200260200101516001600160a01b0316141561029d57600191505b806102a781610798565b915050610221565b506000845167ffffffffffffffff8111156102cc576102cc6104e1565b6040519080825280602002602001820160405280156102f5578160200160208202803683370190505b509050600181858151811061030c5761030c61076c565b60200260200101818152505084848151811061032a5761032a61076c565b602002602001015199506000808d848761034491906107b3565b604051602001610356939291906107ca565b60408051601f1981840301815260808301825288835260208301859052828201819052600060608401529051638bdb391360e01b81529092506001600160a01b038a1690638bdb3913906103b4908b9030908190879060040161083b565b600060405180830381600087803b1580156103ce57600080fd5b505af11580156103e2573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526001600160a01b038f1692506370a082319150602401602060405180830381865afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e91906105f6565b9a5050505050505050505050935093915050565b6000815180845260005b818110156104885760208185018101518683018201520161046c565b8181111561049a576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006104c26020830184610462565b9392505050565b6001600160a01b03811681146104de57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610520576105206104e1565b604052919050565b60008060006060848603121561053d57600080fd5b8335610548816104c9565b92506020848101359250604085013567ffffffffffffffff8082111561056d57600080fd5b818701915087601f83011261058157600080fd5b813581811115610593576105936104e1565b6105a5601f8201601f191685016104f7565b915080825288848285010111156105bb57600080fd5b80848401858401376000848284010152508093505050509250925092565b6000602082840312156105eb57600080fd5b81516104c2816104c9565b60006020828403121561060857600080fd5b5051919050565b600067ffffffffffffffff821115610629576106296104e1565b5060051b60200190565b600082601f83011261064457600080fd5b815160206106596106548361060f565b6104f7565b82815260059290921b8401810191818101908684111561067857600080fd5b8286015b84811015610693578051835291830191830161067c565b509695505050505050565b6000806000606084860312156106b357600080fd5b835167ffffffffffffffff808211156106cb57600080fd5b818601915086601f8301126106df57600080fd5b815160206106ef6106548361060f565b82815260059290921b8401810191818101908a84111561070e57600080fd5b948201945b83861015610735578551610726816104c9565b82529482019490820190610713565b9189015191975090935050508082111561074e57600080fd5b5061075b86828701610633565b925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156107ac576107ac610782565b5060010190565b6000828210156107c5576107c5610782565b500390565b60608101600485106107ec57634e487b7160e01b600052602160045260246000fd5b938152602081019290925260409091015290565b600081518084526020808501945080840160005b8381101561083057815187529582019590820190600101610814565b509495945050505050565b8481526000602060018060a01b038087168285015280861660408501526080606085015261010084018551608080870152818151808452610120880191508583019350600092505b808310156108a557835185168252928501926001929092019190850190610883565b50848801519450607f199350838782030160a08801526108c58186610800565b94505050506040850151818584030160c08601526108e38382610462565b92505050606084015161069360e08501821515905256fea164736f6c634300080a000a";

type BalancerLpTokenLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerLpTokenLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerLpTokenLiquidator__factory extends ContractFactory {
  constructor(...args: BalancerLpTokenLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BalancerLpTokenLiquidator> {
    return super.deploy(overrides || {}) as Promise<BalancerLpTokenLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerLpTokenLiquidator {
    return super.attach(address) as BalancerLpTokenLiquidator;
  }
  override connect(signer: Signer): BalancerLpTokenLiquidator__factory {
    return super.connect(signer) as BalancerLpTokenLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerLpTokenLiquidatorInterface {
    return new utils.Interface(_abi) as BalancerLpTokenLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerLpTokenLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalancerLpTokenLiquidator;
  }
}
