/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapTwapPriceOracleV2Resolver,
  UniswapTwapPriceOracleV2ResolverInterface,
} from "../UniswapTwapPriceOracleV2Resolver";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_pairConfigs",
        type: "tuple[]",
        internalType: "struct UniswapTwapPriceOracleV2Resolver.PairConfig[]",
        components: [
          {
            name: "pair",
            type: "address",
            internalType: "address",
          },
          {
            name: "baseToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "minPeriod",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deviationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "_root",
        type: "address",
        internalType: "contract UniswapTwapPriceOracleV2Root",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addPair",
    inputs: [
      {
        name: "pair",
        type: "tuple",
        internalType: "struct UniswapTwapPriceOracleV2Resolver.PairConfig",
        components: [
          {
            name: "pair",
            type: "address",
            internalType: "address",
          },
          {
            name: "baseToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "minPeriod",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deviationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeRoot",
    inputs: [
      {
        name: "_root",
        type: "address",
        internalType: "contract UniswapTwapPriceOracleV2Root",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "checker",
    inputs: [],
    outputs: [
      {
        name: "canExec",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "execPayload",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPairs",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct UniswapTwapPriceOracleV2Resolver.PairConfig[]",
        components: [
          {
            name: "pair",
            type: "address",
            internalType: "address",
          },
          {
            name: "baseToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "minPeriod",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deviationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWorkablePairs",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastUpdate",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeFromPairs",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "root",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract UniswapTwapPriceOracleV2Root",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePairs",
    inputs: [
      {
        name: "workablePairs",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "";

type UniswapTwapPriceOracleV2ResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapTwapPriceOracleV2ResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapTwapPriceOracleV2Resolver__factory extends ContractFactory {
  constructor(...args: UniswapTwapPriceOracleV2ResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pairConfigs: UniswapTwapPriceOracleV2Resolver.PairConfigStruct[],
    _root: string,
    overrides?: Overrides & { from?: string }
  ): Promise<UniswapTwapPriceOracleV2Resolver> {
    return super.deploy(
      _pairConfigs,
      _root,
      overrides || {}
    ) as Promise<UniswapTwapPriceOracleV2Resolver>;
  }
  override getDeployTransaction(
    _pairConfigs: UniswapTwapPriceOracleV2Resolver.PairConfigStruct[],
    _root: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_pairConfigs, _root, overrides || {});
  }
  override attach(address: string): UniswapTwapPriceOracleV2Resolver {
    return super.attach(address) as UniswapTwapPriceOracleV2Resolver;
  }
  override connect(signer: Signer): UniswapTwapPriceOracleV2Resolver__factory {
    return super.connect(signer) as UniswapTwapPriceOracleV2Resolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapTwapPriceOracleV2ResolverInterface {
    return new utils.Interface(
      _abi
    ) as UniswapTwapPriceOracleV2ResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapTwapPriceOracleV2Resolver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapTwapPriceOracleV2Resolver;
  }
}
