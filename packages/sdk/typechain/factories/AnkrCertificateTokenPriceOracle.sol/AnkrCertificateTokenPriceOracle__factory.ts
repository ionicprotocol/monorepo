/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AnkrCertificateTokenPriceOracle,
  AnkrCertificateTokenPriceOracleInterface,
} from "../../AnkrCertificateTokenPriceOracle.sol/AnkrCertificateTokenPriceOracle";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "aTokenCertificate",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAnkrCertificate",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "ankrCertificateToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108f6806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d156ca5611610066578063d156ca561461011e578063e30c397814610131578063f2fde38b14610144578063fc4d33f914610157578063fc57d4df1461015f57600080fd5b80636e96dfd7146100a3578063715018a6146100b85780638da5cb5b146100c0578063aea91078146100ea578063c4d66de81461010b575b600080fd5b6100b66100b13660046107fc565b610172565b005b6100b66101dc565b6033546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100fd6100f83660046107fc565b610224565b6040519081526020016100e1565b6100b66101193660046107fc565b610287565b6066546100cd906001600160a01b031681565b6065546100cd906001600160a01b031681565b6100b66101523660046107fc565b6103b1565b6100b6610422565b6100fd61016d3660046107fc565b610536565b61017a6105ff565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b6101e46105ff565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6066546000906001600160a01b038381169116146102795760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420756e6465726c79696e6760701b604482015260640161021b565b61028161065b565b92915050565b600054610100900460ff16158080156102a75750600054600160ff909116105b806102c15750303b1580156102c1575060005460ff166001145b6103245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161021b565b6000805460ff191660011790558015610347576000805461ff0019166101001790555b61035033610700565b606680546001600160a01b0319166001600160a01b03841617905580156103ad576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016101d0565b5050565b6103b96105ff565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146104745760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b604482015260640161021b565b60006104886033546001600160a01b031690565b6065549091506001600160a01b03166104a08161073b565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91016101d0565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190610819565b6066549091506001600160a01b038083169116146105f05760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420756e6465726c79696e6760701b604482015260640161021b565b6105f861065b565b9392505050565b6033546001600160a01b031633146106595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021b565b565b600080670de0b6b3a764000090506000606660009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190610836565b9050806106ef838061084f565b6106f9919061087c565b9250505090565b600054610100900460ff166107275760405162461bcd60e51b815260040161021b9061089e565b61072f61078d565b6107388161073b565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107b45760405162461bcd60e51b815260040161021b9061089e565b610659600054610100900460ff166107de5760405162461bcd60e51b815260040161021b9061089e565b6106593361073b565b6001600160a01b038116811461073857600080fd5b60006020828403121561080e57600080fd5b81356105f8816107e7565b60006020828403121561082b57600080fd5b81516105f8816107e7565b60006020828403121561084857600080fd5b5051919050565b600081600019048311821515161561087757634e487b7160e01b600052601160045260246000fd5b500290565b60008261089957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080a000a";

type AnkrCertificateTokenPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnkrCertificateTokenPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnkrCertificateTokenPriceOracle__factory extends ContractFactory {
  constructor(...args: AnkrCertificateTokenPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AnkrCertificateTokenPriceOracle> {
    return super.deploy(
      overrides || {}
    ) as Promise<AnkrCertificateTokenPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnkrCertificateTokenPriceOracle {
    return super.attach(address) as AnkrCertificateTokenPriceOracle;
  }
  override connect(signer: Signer): AnkrCertificateTokenPriceOracle__factory {
    return super.connect(signer) as AnkrCertificateTokenPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnkrCertificateTokenPriceOracleInterface {
    return new utils.Interface(
      _abi
    ) as AnkrCertificateTokenPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnkrCertificateTokenPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AnkrCertificateTokenPriceOracle;
  }
}
