/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveLiquidityGaugeV2Liquidator,
  CurveLiquidityGaugeV2LiquidatorInterface,
} from "../CurveLiquidityGaugeV2Liquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e14610083575b600080fd5b604080518082018252601f81527f43757276654c6971756964697479476175676556324c697175696461746f72006020820152905161007a91906103de565b60405180910390f35b610096610091366004610461565b6100b5565b604080516001600160a01b03909316835260208301919091520161007a565b604051632e1a7d4d60e01b815260048101839052600090819085906001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b1580156100fe57600080fd5b505af1158015610112573d6000803e3d6000fd5b50505050806001600160a01b03166382c630666040518163ffffffff1660e01b8152600401602060405180830381865afa158015610154573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610178919061052e565b60405163bdf475c360e01b81526001600160a01b0382166004820152909650600090737d86446ddb609ed0f5f8684acf30380a356b2b4c9063bdf475c390602401602060405180830381865afa1580156101d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fa919061052e565b9050600080868060200190518101906102139190610552565b604051630d2680e960e11b8152600481018b9052600083900b60248201526001604482015291935091506001600160a01b03841690631a4d01d290606401600060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50505050806001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316146102b657806102b9565b60005b95506001600160a01b03861615610337576040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610592565b610339565b475b94506001600160a01b0386166103d15773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561039857600080fd5b505af11580156103ac573d6000803e3d6000fd5b505050505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29550505050506103d6565b505050505b935093915050565b600060208083528351808285015260005b8181101561040b578581018301518582016040015282016103ef565b8181111561041d576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461044857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561047657600080fd5b833561048181610433565b925060208401359150604084013567ffffffffffffffff808211156104a557600080fd5b818601915086601f8301126104b957600080fd5b8135818111156104cb576104cb61044b565b604051601f8201601f19908116603f011681019083821181831017156104f3576104f361044b565b8160405282815289602084870101111561050c57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561054057600080fd5b815161054b81610433565b9392505050565b6000806040838503121561056557600080fd5b825160ff8116811461057657600080fd5b602084015190925061058781610433565b809150509250929050565b6000602082840312156105a457600080fd5b505191905056fea164736f6c634300080a000a";

type CurveLiquidityGaugeV2LiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveLiquidityGaugeV2LiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveLiquidityGaugeV2Liquidator__factory extends ContractFactory {
  constructor(...args: CurveLiquidityGaugeV2LiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CurveLiquidityGaugeV2Liquidator> {
    return super.deploy(
      overrides || {}
    ) as Promise<CurveLiquidityGaugeV2Liquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveLiquidityGaugeV2Liquidator {
    return super.attach(address) as CurveLiquidityGaugeV2Liquidator;
  }
  override connect(signer: Signer): CurveLiquidityGaugeV2Liquidator__factory {
    return super.connect(signer) as CurveLiquidityGaugeV2Liquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveLiquidityGaugeV2LiquidatorInterface {
    return new utils.Interface(
      _abi
    ) as CurveLiquidityGaugeV2LiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveLiquidityGaugeV2Liquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveLiquidityGaugeV2Liquidator;
  }
}
