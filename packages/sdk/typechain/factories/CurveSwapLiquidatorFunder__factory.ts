/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveSwapLiquidatorFunder,
  CurveSwapLiquidatorFunderInterface,
} from "../CurveSwapLiquidatorFunder";

const _abi = [
  {
    type: "function",
    name: "convert",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "estimateInputAmount",
    inputs: [
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dc0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806310badf4e1461009957806330132996146100cb57806389eabf0214610099575b600080fd5b604080518082018252601981527f4375727665537761704c697175696461746f7246756e6465720000000000000060208201529051610090919061094c565b60405180910390f35b6100ac6100a7366004610a5c565b6100de565b604080516001600160a01b039093168352602083019190915201610090565b6100ac6100d9366004610ab5565b6100f8565b6000806100ec858585610352565b91509150935093915050565b60008060008060008060008060008980602001905181019061011a9190610afc565b50929650909450925090506001600160a01b038316156101ae576040516324e2f63b60e21b81526001600160a01b038381166004830152828116602483015284169063938bd8ec90604401606060405180830381865afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a69190610b88565b919850965094505b6001600160a01b038716610236576040516324e2f63b60e21b81526001600160a01b038381166004830152828116602483015285169063938bd8ec90604401606060405180830381865afa15801561020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e9190610b88565b919850965094505b505050506001600160a01b0383166102835760405162461bcd60e51b815260206004820152600b60248201526a0858dd5c9d99481c1bdbdb60aa1b60448201526064015b60405180910390fd5b60405163c661065760e01b8152600f83900b60048201526000906001600160a01b0385169063c661065790602401602060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610bcd565b90506000610303858585858d6106e1565b90506000610341868686606461031a876046610c07565b6103249190610c26565b6064610331886082610c07565b61033b9190610c26565b8f6107f8565b929a92995091975050505050505050565b6000806000806000808680602001905181019061036f9190610afc565b939750919550909350909150899050600080806001600160a01b0387161561040b576040516324e2f63b60e21b81526001600160a01b038581166004830152878116602483015288169063938bd8ec90604401606060405180830381865afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610b88565b919450925090505b6001600160a01b038316610493576040516324e2f63b60e21b81526001600160a01b038581166004830152878116602483015289169063938bd8ec90604401606060405180830381865afa158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610b88565b919450925090505b6001600160a01b0383166104d75760405162461bcd60e51b815260206004820152600b60248201526a0858dd5c9d99481c1bdbdb60aa1b604482015260640161027a565b60405163095ea7b360e01b81526001600160a01b038481166004830152602482018e90528e169063095ea7b3906044016020604051808303816000875af1158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190610c48565b50604051630f7c084960e21b8152600f83810b600483015282900b6024820152604481018d9052600060648201526001600160a01b03841690633df02124906084016020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610c6a565b506001600160a01b0386161580610602575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038716145b1561066357846001600160a01b031663d0e30db08a6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b5050505050849950610667565b8599505b6040516370a0823160e01b81523060048201526001600160a01b038b16906370a0823190602401602060405180830381865afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610c6a565b98505050505050505050935093915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190610c83565b61075190600a610d8c565b604051635e0d443f60e01b8152600f88810b600483015287900b6024820152604481018290529091506000906001600160a01b03891690635e0d443f90606401602060405180830381865afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190610c6a565b90506000816107e18487610c07565b6107eb9190610c26565b9998505050505050505050565b6000828410610808575082610942565b600060026108168587610d9b565b6108209190610c26565b604051635e0d443f60e01b8152600f89810b600483015288900b6024820152604481018290529091506000906001600160a01b038a1690635e0d443f90606401602060405180830381865afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190610c6a565b9050806108e25760405162461bcd60e51b815260206004820152600f60248201526e06f757470757420616d6f756e74203608c1b604482015260640161027a565b8381101580156109085750600a6108fa85600b610c07565b6109049190610c26565b8111155b1561091557509050610942565b838111156109345761092b8989898986896107f8565b92505050610942565b61092b8989898589896107f8565b9695505050505050565b600060208083528351808285015260005b818110156109795785810183015185820160400152820161095d565b8181111561098b576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146109b657600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109e057600080fd5b813567ffffffffffffffff808211156109fb576109fb6109b9565b604051601f8301601f19908116603f01168101908282118183101715610a2357610a236109b9565b81604052838152866020858801011115610a3c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a7157600080fd5b8335610a7c816109a1565b925060208401359150604084013567ffffffffffffffff811115610a9f57600080fd5b610aab868287016109cf565b9150509250925092565b60008060408385031215610ac857600080fd5b82359150602083013567ffffffffffffffff811115610ae657600080fd5b610af2858286016109cf565b9150509250929050565b600080600080600060a08688031215610b1457600080fd5b8551610b1f816109a1565b6020870151909550610b30816109a1565b6040870151909450610b41816109a1565b6060870151909350610b52816109a1565b6080870151909250610b63816109a1565b809150509295509295909350565b8051600f81900b8114610b8357600080fd5b919050565b600080600060608486031215610b9d57600080fd5b8351610ba8816109a1565b9250610bb660208501610b71565b9150610bc460408501610b71565b90509250925092565b600060208284031215610bdf57600080fd5b8151610bea816109a1565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c2157610c21610bf1565b500290565b600082610c4357634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610c5a57600080fd5b81518015158114610bea57600080fd5b600060208284031215610c7c57600080fd5b5051919050565b600060208284031215610c9557600080fd5b815160ff81168114610bea57600080fd5b600181815b80851115610ce1578160001904821115610cc757610cc7610bf1565b80851615610cd457918102915b93841c9390800290610cab565b509250929050565b600082610cf857506001610d86565b81610d0557506000610d86565b8160018114610d1b5760028114610d2557610d41565b6001915050610d86565b60ff841115610d3657610d36610bf1565b50506001821b610d86565b5060208310610133831016604e8410600b8410161715610d64575081810a610d86565b610d6e8383610ca6565b8060001904821115610d8257610d82610bf1565b0290505b92915050565b6000610bea60ff841683610ce9565b60008219821115610dae57610dae610bf1565b50019056fea164736f6c634300080a000a";

type CurveSwapLiquidatorFunderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveSwapLiquidatorFunderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveSwapLiquidatorFunder__factory extends ContractFactory {
  constructor(...args: CurveSwapLiquidatorFunderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CurveSwapLiquidatorFunder> {
    return super.deploy(overrides || {}) as Promise<CurveSwapLiquidatorFunder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveSwapLiquidatorFunder {
    return super.attach(address) as CurveSwapLiquidatorFunder;
  }
  override connect(signer: Signer): CurveSwapLiquidatorFunder__factory {
    return super.connect(signer) as CurveSwapLiquidatorFunder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveSwapLiquidatorFunderInterface {
    return new utils.Interface(_abi) as CurveSwapLiquidatorFunderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveSwapLiquidatorFunder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveSwapLiquidatorFunder;
  }
}
