/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RecursivePriceOracle,
  RecursivePriceOracleInterface,
} from "../RecursivePriceOracle";

const _abi = [
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICToken",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610430806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fc57d4df14610030575b600080fd5b61004361003e366004610358565b610055565b60405190815260200160405180910390f35b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ba919061037c565b90506000816001600160a01b0316635fe3b5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610120919061037c565b9050816001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101849190610399565b156101f357816001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101eb91906103bb565b949350505050565b670de0b6b3a7640000816001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e919061037c565b60405163fc57d4df60e01b81526001600160a01b038581166004830152919091169063fc57d4df90602401602060405180830381865afa1580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca91906103bb565b836001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906103bb565b61033691906103d4565b6101eb9190610401565b6001600160a01b038116811461035557600080fd5b50565b60006020828403121561036a57600080fd5b813561037581610340565b9392505050565b60006020828403121561038e57600080fd5b815161037581610340565b6000602082840312156103ab57600080fd5b8151801515811461037557600080fd5b6000602082840312156103cd57600080fd5b5051919050565b60008160001904831182151516156103fc57634e487b7160e01b600052601160045260246000fd5b500290565b60008261041e57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080a000a";

type RecursivePriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecursivePriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RecursivePriceOracle__factory extends ContractFactory {
  constructor(...args: RecursivePriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RecursivePriceOracle> {
    return super.deploy(overrides || {}) as Promise<RecursivePriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RecursivePriceOracle {
    return super.attach(address) as RecursivePriceOracle;
  }
  override connect(signer: Signer): RecursivePriceOracle__factory {
    return super.connect(signer) as RecursivePriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecursivePriceOracleInterface {
    return new utils.Interface(_abi) as RecursivePriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RecursivePriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RecursivePriceOracle;
  }
}
