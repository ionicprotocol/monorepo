/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AdjustableAnkrBNBIrm,
  AdjustableAnkrBNBIrmInterface,
  AdjustableAnkrInterestRateModelParamsStruct,
  AnkrRateProviderParamsStruct,
} from "../../AdjustableAnkrBNBIrm.sol/AdjustableAnkrBNBIrm";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_adjustableAnkrInterestRateModelParams",
        type: "tuple",
        internalType: "struct AdjustableAnkrInterestRateModelParams",
        components: [
          {
            name: "blocksPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "multiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "jumpMultiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "kink",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "_ankrRateProviderParams",
        type: "tuple",
        internalType: "struct AnkrRateProviderParams",
        components: [
          {
            name: "day",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "rate_provider",
            type: "address",
            internalType: "address",
          },
          {
            name: "abond",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setIrmParameters",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct AdjustableAnkrInterestRateModelParams",
        components: [
          {
            name: "blocksPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "multiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "jumpMultiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "kink",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ankrRateProviderParams",
    inputs: [],
    outputs: [
      {
        name: "day",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "rate_provider",
        type: "address",
        internalType: "address",
      },
      {
        name: "abond",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blocksPerYear",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAnkrRate",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBaseRatePerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMultiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInterestRateModel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "jumpMultiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "kink",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAnkrRateProviderParams",
    inputs: [
      {
        name: "_ankrRateProviderParams",
        type: "tuple",
        internalType: "struct AnkrRateProviderParams",
        components: [
          {
            name: "day",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "rate_provider",
            type: "address",
            internalType: "address",
          },
          {
            name: "abond",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "utilizationRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "NewInterestParams",
    inputs: [
      {
        name: "multiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "jumpMultiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "kink",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ba7380380610ba783398101604081905261002f916101d8565b8161003933610106565b80516001819055602082015161004f9190610286565b60025560015460408201516100649190610286565b60038190556060828101516004819055600254604080519182526020820194909452928301527f865bfff1eb39dc370f97b2eb5990d963c50228429828ad935a4470166c711fc1910160405180910390a150805160058054602084015160ff9093166001600160a81b0319909116176101006001600160a01b0393841602179055604090910151600680546001600160a01b03191691909216179055506102a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051608081016001600160401b038111828210171561018657634e487b7160e01b600052604160045260246000fd5b60405290565b604051606081016001600160401b038111828210171561018657634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146101d357600080fd5b919050565b60008082840360e08112156101ec57600080fd5b60808112156101fa57600080fd5b610202610156565b84518152602085015160208201526040850151604082015260608501516060820152809350506060607f198201121561023a57600080fd5b5061024361018c565b608084015160ff8116811461025757600080fd5b815261026560a085016101bc565b602082015261027660c085016101bc565b6040820152809150509250929050565b6000826102a357634e487b7160e01b600052601260045260246000fd5b500490565b6108f0806102b76000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806399e23865116100a2578063cbf408c111610071578063cbf408c1146101d7578063e8ac4e36146101df578063ee39a28b146101f2578063f2fde38b1461023f578063fd2da3391461025257600080fd5b806399e23865146101aa578063a385fb96146101b2578063b8168816146101bb578063b9f9850a146101ce57600080fd5b8063715018a6116100de578063715018a6146101695780638726bb89146101735780638da5cb5b1461017c578063904627e01461019757600080fd5b806315f24053146101105780631fcdf96b146101365780632191f92a1461013e5780636e71e2d814610156575b600080fd5b61012361011e3660046106b9565b61025b565b6040519081526020015b60405180910390f35b600254610123565b610146600181565b604051901515815260200161012d565b6101236101643660046106b9565b610333565b61017161037b565b005b61012360025481565b6000546040516001600160a01b03909116815260200161012d565b6101716101a53660046106e5565b61038f565b610123610416565b61012360015481565b6101236101c9366004610759565b610425565b61012360035481565b6101236104a1565b6101716101ed3660046107a7565b61053d565b6005546006546102169160ff8116916001600160a01b036101009092048216911683565b6040805160ff90941684526001600160a01b03928316602085015291169082015260600161012d565b61017161024d366004610829565b610591565b61012360045481565b600080610269858585610333565b905060006102756104a1565b905060045482116102b55780670de0b6b3a764000060025484610298919061085a565b6102a29190610879565b6102ac919061089b565b9250505061032c565b600081670de0b6b3a76400006002546004546102d1919061085a565b6102db9190610879565b6102e5919061089b565b90506000600454846102f791906108b3565b905081670de0b6b3a764000060035483610311919061085a565b61031b9190610879565b610325919061089b565b9450505050505b9392505050565b6000826103425750600061032c565b8161034d848661089b565b61035791906108b3565b61036984670de0b6b3a764000061085a565b6103739190610879565b949350505050565b61038361060f565b61038d6000610669565b565b61039761060f565b8051600181905560208201516103ad9190610879565b60025560015460408201516103c29190610879565b60038190556060828101516004819055600254604080519182526020820194909452928301527f865bfff1eb39dc370f97b2eb5990d963c50228429828ad935a4470166c711fc1910160405180910390a150565b60006104206104a1565b905090565b60008061043a83670de0b6b3a76400006108b3565b9050600061044987878761025b565b90506000670de0b6b3a7640000610460848461085a565b61046a9190610879565b9050670de0b6b3a7640000816104818a8a8a610333565b61048b919061085a565b6104959190610879565b98975050505050505050565b600154600554600654604051630ab2abfd60e21b81526001600160a01b03918216600482015260ff83166024820152600093926064926101009091041690632acaaff490604401602060405180830381865afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052991906108ca565b6105339190610879565b6104209190610879565b61054561060f565b805160058054602084015160ff9093166001600160a81b0319909116176101006001600160a01b0393841602179055604090910151600680546001600160a01b03191691909216179055565b61059961060f565b6001600160a01b0381166106035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61060c81610669565b50565b6000546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156106ce57600080fd5b505081359360208301359350604090920135919050565b6000608082840312156106f757600080fd5b6040516080810181811067ffffffffffffffff8211171561072857634e487b7160e01b600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000806000806080858703121561076f57600080fd5b5050823594602084013594506040840135936060013592509050565b80356001600160a01b03811681146107a257600080fd5b919050565b6000606082840312156107b957600080fd5b6040516060810181811067ffffffffffffffff821117156107ea57634e487b7160e01b600052604160045260246000fd5b604052823560ff811681146107fe57600080fd5b815261080c6020840161078b565b602082015261081d6040840161078b565b60408201529392505050565b60006020828403121561083b57600080fd5b61032c8261078b565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561087457610874610844565b500290565b60008261089657634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156108ae576108ae610844565b500190565b6000828210156108c5576108c5610844565b500390565b6000602082840312156108dc57600080fd5b505191905056fea164736f6c634300080a000a";

type AdjustableAnkrBNBIrmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdjustableAnkrBNBIrmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdjustableAnkrBNBIrm__factory extends ContractFactory {
  constructor(...args: AdjustableAnkrBNBIrmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _adjustableAnkrInterestRateModelParams: AdjustableAnkrInterestRateModelParamsStruct,
    _ankrRateProviderParams: AnkrRateProviderParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<AdjustableAnkrBNBIrm> {
    return super.deploy(
      _adjustableAnkrInterestRateModelParams,
      _ankrRateProviderParams,
      overrides || {}
    ) as Promise<AdjustableAnkrBNBIrm>;
  }
  override getDeployTransaction(
    _adjustableAnkrInterestRateModelParams: AdjustableAnkrInterestRateModelParamsStruct,
    _ankrRateProviderParams: AnkrRateProviderParamsStruct,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _adjustableAnkrInterestRateModelParams,
      _ankrRateProviderParams,
      overrides || {}
    );
  }
  override attach(address: string): AdjustableAnkrBNBIrm {
    return super.attach(address) as AdjustableAnkrBNBIrm;
  }
  override connect(signer: Signer): AdjustableAnkrBNBIrm__factory {
    return super.connect(signer) as AdjustableAnkrBNBIrm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdjustableAnkrBNBIrmInterface {
    return new utils.Interface(_abi) as AdjustableAnkrBNBIrmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdjustableAnkrBNBIrm {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AdjustableAnkrBNBIrm;
  }
}
