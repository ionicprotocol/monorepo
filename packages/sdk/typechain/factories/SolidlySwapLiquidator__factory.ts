/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SolidlySwapLiquidator,
  SolidlySwapLiquidatorInterface,
} from "../SolidlySwapLiquidator";

const _abi = [
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610525806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806310badf4e1461007b575b600080fd5b604080518082018252601581527429b7b634b2363ca9bbb0b82634b8bab4b230ba37b960591b602082015290516100729190610275565b60405180910390f35b61008e610089366004610329565b6100ad565b604080516001600160a01b039093168352602083019190915201610072565b6000806100bb8585856100c7565b91509150935093915050565b6000806000806000858060200190518101906100e391906103ef565b60405163095ea7b360e01b81526001600160a01b038085166004830152602482018c905293965091945092509089169063095ea7b3906044016020604051808303816000875af115801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f9190610437565b506040516313dcfc5960e01b815260048101889052600060248201526001600160a01b038981166044830152838116606483015282151560848301523060a48301524260c48301528416906313dcfc599060e4016000604051808303816000875af11580156101d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101fa9190810190610459565b506040516370a0823160e01b815230600482015291945084916001600160a01b038316906370a0823190602401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026891906104ff565b9350505050935093915050565b600060208083528351808285015260005b818110156102a257858101830151858201604001528201610286565b818111156102b4576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146102df57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610321576103216102e2565b604052919050565b60008060006060848603121561033e57600080fd5b8335610349816102ca565b92506020848101359250604085013567ffffffffffffffff8082111561036e57600080fd5b818701915087601f83011261038257600080fd5b813581811115610394576103946102e2565b6103a6601f8201601f191685016102f8565b915080825288848285010111156103bc57600080fd5b80848401858401376000848284010152508093505050509250925092565b805180151581146103ea57600080fd5b919050565b60008060006060848603121561040457600080fd5b835161040f816102ca565b6020850151909350610420816102ca565b915061042e604085016103da565b90509250925092565b60006020828403121561044957600080fd5b610452826103da565b9392505050565b6000602080838503121561046c57600080fd5b825167ffffffffffffffff8082111561048457600080fd5b818501915085601f83011261049857600080fd5b8151818111156104aa576104aa6102e2565b8060051b91506104bb8483016102f8565b81815291830184019184810190888411156104d557600080fd5b938501935b838510156104f3578451825293850193908501906104da565b98975050505050505050565b60006020828403121561051157600080fd5b505191905056fea164736f6c634300080a000a";

type SolidlySwapLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SolidlySwapLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SolidlySwapLiquidator__factory extends ContractFactory {
  constructor(...args: SolidlySwapLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SolidlySwapLiquidator> {
    return super.deploy(overrides || {}) as Promise<SolidlySwapLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SolidlySwapLiquidator {
    return super.attach(address) as SolidlySwapLiquidator;
  }
  override connect(signer: Signer): SolidlySwapLiquidator__factory {
    return super.connect(signer) as SolidlySwapLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolidlySwapLiquidatorInterface {
    return new utils.Interface(_abi) as SolidlySwapLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SolidlySwapLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SolidlySwapLiquidator;
  }
}
