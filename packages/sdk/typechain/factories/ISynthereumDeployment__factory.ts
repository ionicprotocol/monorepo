/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISynthereumDeployment,
  ISynthereumDeploymentInterface,
} from "../ISynthereumDeployment";

const _abi = [
  {
    type: "function",
    name: "collateralToken",
    inputs: [],
    outputs: [
      {
        name: "collateralCurrency",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "synthereumFinder",
    inputs: [],
    outputs: [
      {
        name: "finder",
        type: "address",
        internalType: "contract ISynthereumFinder",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "syntheticToken",
    inputs: [],
    outputs: [
      {
        name: "syntheticCurrency",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "syntheticTokenSymbol",
    inputs: [],
    outputs: [
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "poolVersion",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class ISynthereumDeployment__factory {
  static readonly abi = _abi;
  static createInterface(): ISynthereumDeploymentInterface {
    return new utils.Interface(_abi) as ISynthereumDeploymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISynthereumDeployment {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISynthereumDeployment;
  }
}
