/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidatorsRegistrySecondExtension,
  LiquidatorsRegistrySecondExtensionInterface,
} from "../LiquidatorsRegistrySecondExtension";

const _abi = [
  {
    type: "function",
    name: "_getExtensionFunctions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "_removeRedemptionStrategy",
    inputs: [
      {
        name: "strategyToRemove",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_resetRedemptionStrategies",
    inputs: [
      {
        name: "strategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setDefaultOutputToken",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setRedemptionStrategies",
    inputs: [
      {
        name: "strategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setRedemptionStrategy",
    inputs: [
      {
        name: "strategy",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setSlippages",
    inputs: [
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "slippages",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setUniswapV3Fees",
    inputs: [
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "fees",
        type: "uint24[]",
        internalType: "uint24[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setUniswapV3Routers",
    inputs: [
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "routers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ap",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AddressesProvider",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "customUniV3Router",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOutputToken",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllPairsStrategies",
    inputs: [],
    outputs: [
      {
        name: "strategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "inputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "outputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pairsStrategiesMatch",
    inputs: [
      {
        name: "configStrategies",
        type: "address[]",
        internalType: "contract IRedemptionStrategy[]",
      },
      {
        name: "configInputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "configOutputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByName",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByTokens",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "uniswapPairsFeesMatch",
    inputs: [
      {
        name: "configInputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "configOutputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "configFees",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "uniswapPairsRoutersMatch",
    inputs: [
      {
        name: "configInputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "configOutputTokens",
        type: "address[]",
        internalType: "contract IERC20Upgradeable[]",
      },
      {
        name: "configRouters",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "uniswapV3Fees",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "";

type LiquidatorsRegistrySecondExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidatorsRegistrySecondExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidatorsRegistrySecondExtension__factory extends ContractFactory {
  constructor(...args: LiquidatorsRegistrySecondExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<LiquidatorsRegistrySecondExtension> {
    return super.deploy(
      overrides || {}
    ) as Promise<LiquidatorsRegistrySecondExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LiquidatorsRegistrySecondExtension {
    return super.attach(address) as LiquidatorsRegistrySecondExtension;
  }
  override connect(
    signer: Signer
  ): LiquidatorsRegistrySecondExtension__factory {
    return super.connect(signer) as LiquidatorsRegistrySecondExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidatorsRegistrySecondExtensionInterface {
    return new utils.Interface(
      _abi
    ) as LiquidatorsRegistrySecondExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidatorsRegistrySecondExtension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidatorsRegistrySecondExtension;
  }
}
