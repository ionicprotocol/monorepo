/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMasset, IMassetInterface } from "../IMasset";

const _abi = [
  {
    type: "function",
    name: "bAssetIndexes",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collectInterest",
    inputs: [],
    outputs: [
      {
        name: "swapFeesGained",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectPlatformInterest",
    inputs: [],
    outputs: [
      {
        name: "mintAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBasket",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBasset",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "personal",
        type: "tuple",
        internalType: "struct MassetStructs.BassetPersonal",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "integrator",
            type: "address",
            internalType: "address",
          },
          {
            name: "hasTxFee",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum MassetStructs.BassetStatus",
          },
        ],
      },
      {
        name: "data",
        type: "tuple",
        internalType: "struct MassetStructs.BassetData",
        components: [
          {
            name: "ratio",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "vaultBalance",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBassets",
    inputs: [],
    outputs: [
      {
        name: "personal",
        type: "tuple[]",
        internalType: "struct MassetStructs.BassetPersonal[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "integrator",
            type: "address",
            internalType: "address",
          },
          {
            name: "hasTxFee",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum MassetStructs.BassetStatus",
          },
        ],
      },
      {
        name: "data",
        type: "tuple[]",
        internalType: "struct MassetStructs.BassetData[]",
        components: [
          {
            name: "ratio",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "vaultBalance",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMintMultiOutput",
    inputs: [
      {
        name: "_inputs",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_inputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "mintOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMintOutput",
    inputs: [
      {
        name: "_input",
        type: "address",
        internalType: "address",
      },
      {
        name: "_inputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "mintOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRedeemExactBassetsOutput",
    inputs: [
      {
        name: "_outputs",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_outputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "mAssetAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRedeemOutput",
    inputs: [
      {
        name: "_output",
        type: "address",
        internalType: "address",
      },
      {
        name: "_mAssetQuantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "bAssetOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSwapOutput",
    inputs: [
      {
        name: "_input",
        type: "address",
        internalType: "address",
      },
      {
        name: "_output",
        type: "address",
        internalType: "address",
      },
      {
        name: "_inputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "swapOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "migrateBassets",
    inputs: [
      {
        name: "_bAssets",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_newIntegration",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "_input",
        type: "address",
        internalType: "address",
      },
      {
        name: "_inputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minOutputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "mintOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintMulti",
    inputs: [
      {
        name: "_inputs",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_inputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_minOutputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "mintOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "_output",
        type: "address",
        internalType: "address",
      },
      {
        name: "_mAssetQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minOutputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "outputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeemExactBassets",
    inputs: [
      {
        name: "_outputs",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_outputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_maxMassetQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "mAssetRedeemed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeemMasset",
    inputs: [
      {
        name: "_mAssetQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minOutputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "outputQuantities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCacheSize",
    inputs: [
      {
        name: "_cacheSize",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFees",
    inputs: [
      {
        name: "_swapFee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_redemptionFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTransferFeesFlag",
    inputs: [
      {
        name: "_bAsset",
        type: "address",
        internalType: "address",
      },
      {
        name: "_flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "_input",
        type: "address",
        internalType: "address",
      },
      {
        name: "_output",
        type: "address",
        internalType: "address",
      },
      {
        name: "_inputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minOutputQuantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "swapOutput",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeForgeValidator",
    inputs: [
      {
        name: "_newForgeValidator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IMasset__factory {
  static readonly abi = _abi;
  static createInterface(): IMassetInterface {
    return new utils.Interface(_abi) as IMassetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMasset {
    return new Contract(address, _abi, signerOrProvider) as IMasset;
  }
}
