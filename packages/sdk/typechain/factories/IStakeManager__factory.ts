/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IStakeManager, IStakeManagerInterface } from "../IStakeManager";

const _abi = [
  {
    type: "function",
    name: "convertBnbToBnbX",
    inputs: [
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertBnbXToBnb",
    inputs: [
      {
        name: "_amountInBnbX",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getContracts",
    inputs: [],
    outputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_bnbX",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenHub",
        type: "address",
        internalType: "address",
      },
      {
        name: "_bcDepositWallet",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getExtraBnbInContract",
    inputs: [],
    outputs: [
      {
        name: "_extraBnb",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalPooledBnb",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IStakeManager__factory {
  static readonly abi = _abi;
  static createInterface(): IStakeManagerInterface {
    return new utils.Interface(_abi) as IStakeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStakeManager {
    return new Contract(address, _abi, signerOrProvider) as IStakeManager;
  }
}
