/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { JumpRateModel, JumpRateModelInterface } from "../JumpRateModel";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_blocksPerYear",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "baseRatePerYear",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "multiplierPerYear",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "jumpMultiplierPerYear",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "kink_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "baseRatePerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blocksPerYear",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInterestRateModel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "jumpMultiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "kink",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "utilizationRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "NewInterestParams",
    inputs: [
      {
        name: "baseRatePerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "multiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "jumpMultiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "kink",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104de3803806104de83398101604081905261002f916100c1565b600085905561003e8585610101565b60025560005461004e9084610101565b60015560005461005e9083610101565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a15050505050610123565b600080600080600060a086880312156100d957600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008261011e57634e487b7160e01b600052601260045260246000fd5b500490565b6103ac806101326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a385fb9611610066578063a385fb96146100f2578063b8168816146100fb578063b9f9850a1461010e578063f14039de14610117578063fd2da3391461012057600080fd5b806315f24053146100985780632191f92a146100be5780636e71e2d8146100d65780638726bb89146100e9575b600080fd5b6100ab6100a63660046102bb565b610129565b6040519081526020015b60405180910390f35b6100c6600181565b60405190151581526020016100b5565b6100ab6100e43660046102bb565b6101f7565b6100ab60015481565b6100ab60005481565b6100ab6101093660046102e7565b61023f565b6100ab60035481565b6100ab60025481565b6100ab60045481565b6000806101378585856101f7565b9050600454811161017857600254670de0b6b3a76400006001548361015c919061032f565b610166919061034e565b6101709190610370565b9150506101f0565b6000600254670de0b6b3a7640000600154600454610196919061032f565b6101a0919061034e565b6101aa9190610370565b90506000600454836101bc9190610388565b905081670de0b6b3a7640000600354836101d6919061032f565b6101e0919061034e565b6101ea9190610370565b93505050505b9392505050565b600082610206575060006101f0565b816102118486610370565b61021b9190610388565b61022d84670de0b6b3a764000061032f565b610237919061034e565b949350505050565b60008061025483670de0b6b3a7640000610388565b90506000610263878787610129565b90506000670de0b6b3a764000061027a848461032f565b610284919061034e565b9050670de0b6b3a76400008161029b8a8a8a6101f7565b6102a5919061032f565b6102af919061034e565b98975050505050505050565b6000806000606084860312156102d057600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156102fd57600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561034957610349610319565b500290565b60008261036b57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561038357610383610319565b500190565b60008282101561039a5761039a610319565b50039056fea164736f6c634300080a000a";

type JumpRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JumpRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JumpRateModel__factory extends ContractFactory {
  constructor(...args: JumpRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _blocksPerYear: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<JumpRateModel> {
    return super.deploy(
      _blocksPerYear,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      overrides || {}
    ) as Promise<JumpRateModel>;
  }
  override getDeployTransaction(
    _blocksPerYear: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _blocksPerYear,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      overrides || {}
    );
  }
  override attach(address: string): JumpRateModel {
    return super.attach(address) as JumpRateModel;
  }
  override connect(signer: Signer): JumpRateModel__factory {
    return super.connect(signer) as JumpRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpRateModelInterface {
    return new utils.Interface(_abi) as JumpRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JumpRateModel {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModel;
  }
}
