/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GammaUniswapV3LpTokenLiquidator,
  GammaUniswapV3LpTokenLiquidatorInterface,
} from "../../GammaUniswapV3LpTokenLiquidator.sol/GammaUniswapV3LpTokenLiquidator";

const _abi = [
  {
    type: "function",
    name: "exactInputSingle",
    inputs: [
      {
        name: "swapRouter",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "vault",
        type: "address",
        internalType: "contract IHypervisor",
      },
      {
        name: "swapAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getSqrtX96Price",
    inputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c6b806100206000396000f3fe60806040526004361061003f5760003560e01c806302a74dd21461004457806306fdde031461006a57806310badf4e146100b6578063bddf8a79146100f5575b600080fd5b6100576100523660046108b3565b61012d565b6040519081526020015b60405180910390f35b34801561007657600080fd5b50604080518082018252601f81527f47616d6d61556e697377617056334c70546f6b656e4c697175696461746f7200602082015290516100619190610917565b3480156100c257600080fd5b506100d66100d1366004610982565b61048b565b604080516001600160a01b039093168352602083019190915201610061565b34801561010157600080fd5b50610115610110366004610a4f565b6104a5565b6040516001600160a01b039091168152602001610061565b600080836001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610a73565b90506001600160a01b0385166102e857836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610a73565b6001600160a01b0316866001600160a01b03161461028357836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610a73565b6102e5565b836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610a73565b94505b866001600160a01b031663414bf389604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001846001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610a90565b62ffffff168152602001306001600160a01b031681526020014281526020018681526020016000815260200160006001600160a01b03168152506040518263ffffffff1660e01b815260040161043d919081516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b6020604051808303816000875af115801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190610ab5565b979650505050505050565b600080610499858585610516565b91509150935093915050565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610af5565b5094979650505050505050565b6000808461052261087d565b60405163542acc3960e11b81526001600160a01b0383169063a855987290610554908990309081908790600401610b8f565b60408051808303816000875af1158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190610be5565b50506000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190610a73565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190610a73565b90506000808880602001905181019061067b9190610c09565b91509150600080846001600160a01b0316846001600160a01b0316141561070e576040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190610ab5565b915085905061077c565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190610ab5565b91508490505b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905282169063095ea7b3906044016020604051808303816000875af11580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef9190610c43565b506107fd8382868b8661012d565b506040516370a0823160e01b815230600482015293995089936001600160a01b038516906370a0823190602401602060405180830381865afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190610ab5565b98505050505050505050935093915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b03811681146108b057600080fd5b50565b600080600080600060a086880312156108cb57600080fd5b85356108d68161089b565b945060208601356108e68161089b565b935060408601356108f68161089b565b925060608601356109068161089b565b949793965091946080013592915050565b600060208083528351808285015260005b8181101561094457858101830151858201604001528201610928565b81811115610956576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561099757600080fd5b83356109a28161089b565b925060208401359150604084013567ffffffffffffffff808211156109c657600080fd5b818601915086601f8301126109da57600080fd5b8135818111156109ec576109ec61096c565b604051601f8201601f19908116603f01168101908382118183101715610a1457610a1461096c565b81604052828152896020848701011115610a2d57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610a6157600080fd5b8135610a6c8161089b565b9392505050565b600060208284031215610a8557600080fd5b8151610a6c8161089b565b600060208284031215610aa257600080fd5b815162ffffff81168114610a6c57600080fd5b600060208284031215610ac757600080fd5b5051919050565b805161ffff81168114610ae057600080fd5b919050565b80518015158114610ae057600080fd5b600080600080600080600060e0888a031215610b1057600080fd5b8751610b1b8161089b565b8097505060208801518060020b8114610b3357600080fd5b9550610b4160408901610ace565b9450610b4f60608901610ace565b9350610b5d60808901610ace565b925060a088015160ff81168114610b7357600080fd5b9150610b8160c08901610ae5565b905092959891949750929550565b8481526001600160a01b03848116602080840191909152908416604083015260e0820190606083018460005b6004811015610bd857815183529183019190830190600101610bbb565b5050505095945050505050565b60008060408385031215610bf857600080fd5b505080516020909101519092909150565b60008060408385031215610c1c57600080fd5b8251610c278161089b565b6020840151909250610c388161089b565b809150509250929050565b600060208284031215610c5557600080fd5b610a6c82610ae556fea164736f6c634300080a000a";

type GammaUniswapV3LpTokenLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GammaUniswapV3LpTokenLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GammaUniswapV3LpTokenLiquidator__factory extends ContractFactory {
  constructor(...args: GammaUniswapV3LpTokenLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GammaUniswapV3LpTokenLiquidator> {
    return super.deploy(
      overrides || {}
    ) as Promise<GammaUniswapV3LpTokenLiquidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GammaUniswapV3LpTokenLiquidator {
    return super.attach(address) as GammaUniswapV3LpTokenLiquidator;
  }
  override connect(signer: Signer): GammaUniswapV3LpTokenLiquidator__factory {
    return super.connect(signer) as GammaUniswapV3LpTokenLiquidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GammaUniswapV3LpTokenLiquidatorInterface {
    return new utils.Interface(
      _abi
    ) as GammaUniswapV3LpTokenLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaUniswapV3LpTokenLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GammaUniswapV3LpTokenLiquidator;
  }
}
