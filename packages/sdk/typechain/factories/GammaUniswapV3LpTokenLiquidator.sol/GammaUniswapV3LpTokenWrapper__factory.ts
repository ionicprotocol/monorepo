/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GammaUniswapV3LpTokenWrapper,
  GammaUniswapV3LpTokenWrapperInterface,
} from "../../GammaUniswapV3LpTokenLiquidator.sol/GammaUniswapV3LpTokenWrapper";

const _abi = [
  {
    type: "function",
    name: "exactInputSingle",
    inputs: [
      {
        name: "swapRouter",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "vault",
        type: "address",
        internalType: "contract IHypervisor",
      },
      {
        name: "swapAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getSqrtX96Price",
    inputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "strategyData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111b0806100206000396000f3fe60806040526004361061003f5760003560e01c806302a74dd21461004457806306fdde031461006a57806310badf4e146100b6578063bddf8a79146100f5575b600080fd5b610057610052366004610c41565b61012d565b6040519081526020015b60405180910390f35b34801561007657600080fd5b50604080518082018252601c81527f47616d6d61556e697377617056334c70546f6b656e5772617070657200000000602082015290516100619190610ca5565b3480156100c257600080fd5b506100d66100d1366004610d10565b61048b565b604080516001600160a01b039093168352602083019190915201610061565b34801561010157600080fd5b50610115610110366004610ddd565b6104a5565b6040516001600160a01b039091168152602001610061565b600080836001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610e01565b90506001600160a01b0385166102e857836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610e01565b6001600160a01b0316866001600160a01b03161461028357836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610e01565b6102e5565b836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610e01565b94505b866001600160a01b031663414bf389604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001846001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610e1e565b62ffffff168152602001306001600160a01b031681526020014281526020018681526020016000815260200160006001600160a01b03168152506040518263ffffffff1660e01b815260040161043d919081516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b6020604051808303816000875af115801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190610e43565b979650505050505050565b600080610499858585610516565b91509150935093915050565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610e94565b5094979650505050505050565b6000806000806000858060200190518101906105329190610f26565b9250925092506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610e01565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190610e01565b9050600080600080856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190610f73565b61067790600a61108a565b90506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190610f73565b6106e890600a61108a565b90506000816106ff84670de0b6b3a7640000611099565b61070991906110b8565b9050600064e8d4a510008211610720576001610725565b620f42405b62ffffff16905060006107938b6001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101109190610e01565b6001600160a01b0316905081600160c01b6107ae82866110b8565b6107b960028561108a565b6107c39190611099565b6107cd91906110b8565b6107d79190611099565b604051635ccfb71d60e01b81526001600160a01b038d811660048301528c811660248301526044820188905291975060009450849350908d169150635ccfb71d906064016040805180830381865afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b91906110da565b9092509050600083600261086f84866110fe565b61087991906110b8565b61088b90670de0b6b3a7640000611099565b61089591906110b8565b9050856108aa82670de0b6b3a7640000611099565b6108b491906110b8565b96505050505050600082670de0b6b3a76400006108d191906110fe565b6108e38e670de0b6b3a7640000611099565b6108ed91906110b8565b9050856001600160a01b03168e6001600160a01b03161461090e5780610918565b610918818e611116565b60405163095ea7b360e01b81529094506001600160a01b038f16935063095ea7b39250610960915089908e906004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a3919061112d565b506109b2868c6000878561012d565b50506040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a219190610e43565b6040516370a0823160e01b81523060048201529092506001600160a01b038416906370a0823190602401602060405180830381865afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c9190610e43565b60405163095ea7b360e01b81526001600160a01b038781166004830152602482018590529192509085169063095ea7b3906044016020604051808303816000875af1158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b03919061112d565b5060405163095ea7b360e01b81526001600160a01b0386811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b77919061112d565b50610b80610c0b565b60405163238f24b960e21b81526001600160a01b03881690638e3c92e490610bb4908690869030908c908890600401611148565b6020604051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190610e43565b959d959c50949a5050505050505050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610c3e57600080fd5b50565b600080600080600060a08688031215610c5957600080fd5b8535610c6481610c29565b94506020860135610c7481610c29565b93506040860135610c8481610c29565b92506060860135610c9481610c29565b949793965091946080013592915050565b600060208083528351808285015260005b81811015610cd257858101830151858201604001528201610cb6565b81811115610ce4576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610d2557600080fd5b8335610d3081610c29565b925060208401359150604084013567ffffffffffffffff80821115610d5457600080fd5b818601915086601f830112610d6857600080fd5b813581811115610d7a57610d7a610cfa565b604051601f8201601f19908116603f01168101908382118183101715610da257610da2610cfa565b81604052828152896020848701011115610dbb57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610def57600080fd5b8135610dfa81610c29565b9392505050565b600060208284031215610e1357600080fd5b8151610dfa81610c29565b600060208284031215610e3057600080fd5b815162ffffff81168114610dfa57600080fd5b600060208284031215610e5557600080fd5b5051919050565b805161ffff81168114610e6e57600080fd5b919050565b805160ff81168114610e6e57600080fd5b80518015158114610e6e57600080fd5b600080600080600080600060e0888a031215610eaf57600080fd5b8751610eba81610c29565b8097505060208801518060020b8114610ed257600080fd5b9550610ee060408901610e5c565b9450610eee60608901610e5c565b9350610efc60808901610e5c565b9250610f0a60a08901610e73565b9150610f1860c08901610e84565b905092959891949750929550565b600080600060608486031215610f3b57600080fd5b8351610f4681610c29565b6020850151909350610f5781610c29565b6040850151909250610f6881610c29565b809150509250925092565b600060208284031215610f8557600080fd5b610dfa82610e73565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610fdf578160001904821115610fc557610fc5610f8e565b80851615610fd257918102915b93841c9390800290610fa9565b509250929050565b600082610ff657506001611084565b8161100357506000611084565b816001811461101957600281146110235761103f565b6001915050611084565b60ff84111561103457611034610f8e565b50506001821b611084565b5060208310610133831016604e8410600b8410161715611062575081810a611084565b61106c8383610fa4565b806000190482111561108057611080610f8e565b0290505b92915050565b6000610dfa60ff841683610fe7565b60008160001904831182151516156110b3576110b3610f8e565b500290565b6000826110d557634e487b7160e01b600052601260045260246000fd5b500490565b600080604083850312156110ed57600080fd5b505080516020909101519092909150565b6000821982111561111157611111610f8e565b500190565b60008282101561112857611128610f8e565b500390565b60006020828403121561113f57600080fd5b610dfa82610e84565b85815260208082018690526001600160a01b03858116604084015284166060830152610100820190608083018460005b600481101561119557815183529183019190830190600101611178565b50505050969550505050505056fea164736f6c634300080a000a";

type GammaUniswapV3LpTokenWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GammaUniswapV3LpTokenWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GammaUniswapV3LpTokenWrapper__factory extends ContractFactory {
  constructor(...args: GammaUniswapV3LpTokenWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GammaUniswapV3LpTokenWrapper> {
    return super.deploy(
      overrides || {}
    ) as Promise<GammaUniswapV3LpTokenWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GammaUniswapV3LpTokenWrapper {
    return super.attach(address) as GammaUniswapV3LpTokenWrapper;
  }
  override connect(signer: Signer): GammaUniswapV3LpTokenWrapper__factory {
    return super.connect(signer) as GammaUniswapV3LpTokenWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GammaUniswapV3LpTokenWrapperInterface {
    return new utils.Interface(_abi) as GammaUniswapV3LpTokenWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaUniswapV3LpTokenWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GammaUniswapV3LpTokenWrapper;
  }
}
