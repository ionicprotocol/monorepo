/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimplePriceOracle,
  SimplePriceOracleInterface,
} from "../SimplePriceOracle";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "assetPrices",
    inputs: [
      {
        name: "asset",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDirectPrice",
    inputs: [
      {
        name: "asset",
        type: "address",
        internalType: "address",
      },
      {
        name: "_price",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
      {
        name: "underlyingPriceMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PricePosted",
    inputs: [
      {
        name: "asset",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "previousPriceMantissa",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "requestedPriceMantissa",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newPriceMantissa",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d39806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610140578063aea91078146100e1578063e30c397814610165578063f2fde38b14610178578063fc4d33f91461018b578063fc57d4df1461019357600080fd5b806309a8acb0146100b9578063127ffda0146100ce5780635e9a523c146100e15780636e96dfd71461011d578063715018a6146101305780638129fc1c14610138575b600080fd5b6100cc6100c73660046109e4565b6101a6565b005b6100cc6100dc3660046109e4565b610229565b61010a6100ef366004610a10565b6001600160a01b031660009081526066602052604090205490565b6040519081526020015b60405180910390f35b6100cc61012b366004610a10565b610312565b6100cc61037c565b6100cc6103c4565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610114565b60655461014d906001600160a01b031681565b6100cc610186366004610a10565b6104d6565b6100cc610547565b61010a6101a1366004610a10565b61065b565b6101ae610839565b6001600160a01b038216600081815260666020908152604091829020548251938452908301528101829052606081018290527fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b03909116600090815260666020526040902055565b610231610839565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102959190610a34565b6001600160a01b038116600081815260666020908152604091829020548251938452908301528101849052606081018490529091507fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79060800160405180910390a16001600160a01b031660009081526066602052604090205550565b61031a610839565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610384610839565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b600054610100900460ff16158080156103e45750600054600160ff909116105b806103fe5750303b1580156103fe575060005460ff166001145b6104615760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103bb565b6000805460ff191660011790558015610484576000805461ff0019166101001790555b61048d33610895565b80156104d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6104de610839565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146105995760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b60448201526064016103bb565b60006105ad6033546001600160a01b031690565b6065549091506001600160a01b03166105c5816108c9565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610370565b60006106e8826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561069e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c69190810190610a97565b604051806040016040528060048152602001630c68aa8960e31b81525061091b565b156106fc5750670de0b6b3a7640000919050565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190610a34565b6001600160a01b038116600081815260666020908152604080832054815163313ce56760e01b815291519596509492939263313ce567926004808401939192918290030181865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610b44565b60ff1690506012811115610810576107f6601282610b7d565b61080190600a610c78565b61080b9083610c84565b610830565b61081b816012610b7d565b61082690600a610c78565b6108309083610ca6565b95945050505050565b6033546001600160a01b031633146108935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103bb565b565b600054610100900460ff166108bc5760405162461bcd60e51b81526004016103bb90610cc5565b6108c4610975565b6104d3815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008160405160200161092e9190610d10565b60405160208183030381529060405280519060200120836040516020016109559190610d10565b604051602081830303815290604052805190602001201490505b92915050565b600054610100900460ff1661099c5760405162461bcd60e51b81526004016103bb90610cc5565b610893600054610100900460ff166109c65760405162461bcd60e51b81526004016103bb90610cc5565b610893336108c9565b6001600160a01b03811681146104d357600080fd5b600080604083850312156109f757600080fd5b8235610a02816109cf565b946020939093013593505050565b600060208284031215610a2257600080fd5b8135610a2d816109cf565b9392505050565b600060208284031215610a4657600080fd5b8151610a2d816109cf565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610a82578181015183820152602001610a6a565b83811115610a91576000848401525b50505050565b600060208284031215610aa957600080fd5b815167ffffffffffffffff80821115610ac157600080fd5b818401915084601f830112610ad557600080fd5b815181811115610ae757610ae7610a51565b604051601f8201601f19908116603f01168101908382118183101715610b0f57610b0f610a51565b81604052828152876020848701011115610b2857600080fd5b610b39836020830160208801610a67565b979650505050505050565b600060208284031215610b5657600080fd5b815160ff81168114610a2d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610b8f57610b8f610b67565b500390565b600181815b80851115610bcf578160001904821115610bb557610bb5610b67565b80851615610bc257918102915b93841c9390800290610b99565b509250929050565b600082610be65750600161096f565b81610bf35750600061096f565b8160018114610c095760028114610c1357610c2f565b600191505061096f565b60ff841115610c2457610c24610b67565b50506001821b61096f565b5060208310610133831016604e8410600b8410161715610c52575081810a61096f565b610c5c8383610b94565b8060001904821115610c7057610c70610b67565b029392505050565b6000610a2d8383610bd7565b600082610ca157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610cc057610cc0610b67565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251610d22818460208701610a67565b919091019291505056fea164736f6c634300080a000a";

type SimplePriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePriceOracle__factory extends ContractFactory {
  constructor(...args: SimplePriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SimplePriceOracle> {
    return super.deploy(overrides || {}) as Promise<SimplePriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimplePriceOracle {
    return super.attach(address) as SimplePriceOracle;
  }
  override connect(signer: Signer): SimplePriceOracle__factory {
    return super.connect(signer) as SimplePriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePriceOracleInterface {
    return new utils.Interface(_abi) as SimplePriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimplePriceOracle {
    return new Contract(address, _abi, signerOrProvider) as SimplePriceOracle;
  }
}
