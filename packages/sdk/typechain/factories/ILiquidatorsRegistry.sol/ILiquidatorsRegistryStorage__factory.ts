/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILiquidatorsRegistryStorage,
  ILiquidatorsRegistryStorageInterface,
} from "../../ILiquidatorsRegistry.sol/ILiquidatorsRegistryStorage";

const _abi = [
  {
    type: "function",
    name: "customUniV3Router",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOutputToken",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByName",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redemptionStrategiesByTokens",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRedemptionStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "uniswapV3Fees",
    inputs: [
      {
        name: "inputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "contract IERC20Upgradeable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class ILiquidatorsRegistryStorage__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidatorsRegistryStorageInterface {
    return new utils.Interface(_abi) as ILiquidatorsRegistryStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidatorsRegistryStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILiquidatorsRegistryStorage;
  }
}
