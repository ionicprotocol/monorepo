/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockMiniChefV2,
  MockMiniChefV2Interface,
} from "../MockMiniChefV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_saddle",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "SADDLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "add",
    inputs: [
      {
        name: "allocPoint",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_lpToken",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "_rewarder",
        type: "address",
        internalType: "contract IRewarder",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batch",
    inputs: [
      {
        name: "calls",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "revertOnFail",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "claimOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyWithdraw",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "harvest",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lpToken",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "massUpdatePools",
    inputs: [
      {
        name: "pids",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingSaddle",
    inputs: [
      {
        name: "_pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "pending",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permitToken",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "poolInfo",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "accSaddlePerShare",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "lastRewardTime",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "allocPoint",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolLength",
    inputs: [],
    outputs: [
      {
        name: "pools",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rewarder",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRewarder",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "saddlePerSecond",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "_pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_allocPoint",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewarder",
        type: "address",
        internalType: "contract IRewarder",
      },
      {
        name: "overwrite",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSaddlePerSecond",
    inputs: [
      {
        name: "_saddlePerSecond",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "totalAllocPoint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "direct",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "renounce",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePool",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "pool",
        type: "tuple",
        internalType: "struct MockMiniChefV2.PoolInfo",
        components: [
          {
            name: "accSaddlePerShare",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "lastRewardTime",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "allocPoint",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "userInfo",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "rewardDebt",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawAndHarvest",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Deposit",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyWithdraw",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Harvest",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogPoolAddition",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "allocPoint",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "lpToken",
        type: "address",
        indexed: true,
        internalType: "contract IERC20",
      },
      {
        name: "rewarder",
        type: "address",
        indexed: true,
        internalType: "contract IRewarder",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogSaddlePerSecond",
    inputs: [
      {
        name: "saddlePerSecond",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogSetPool",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "allocPoint",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "rewarder",
        type: "address",
        indexed: true,
        internalType: "contract IRewarder",
      },
      {
        name: "overwrite",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogUpdatePool",
    inputs: [
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "lastRewardTime",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
      {
        name: "lpSupply",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "accSaddlePerShare",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdraw",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pid",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620022693803806200226983398101604081905261003191610081565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03166080526100b1565b60006020828403121561009357600080fd5b81516001600160a01b03811681146100aa57600080fd5b9392505050565b60805161218e620000db60003960008181610288015281816109250152611834015261218e6000f3fe6080604052600436106101665760003560e01c80637b57f716116100d157806393f1a40b1161008a578063d1abb90711610064578063d1abb907146104cc578063d2423b51146104ec578063dcef47e2146104ff578063e30c39781461051557600080fd5b806393f1a40b14610438578063ab7de0981461048c578063c346253d146104ac57600080fd5b80637b57f716146103735780637c516e941461039357806384962aba146103b857806388bba42f146103d85780638da5cb5b146103f85780638dbdbe6d1461041857600080fd5b80632f940c70116101235780632f940c70146102565780634d622716146102765780634e71e0c8146102c257806351eb05a6146102d757806357a5b58c1461033357806378ed5d1f1461035357600080fd5b8063078dfbe71461016b578063081e3eda1461018d5780630ad58d2f146101b15780631526fe27146101d157806317caf6f11461022057806318fccc7614610236575b600080fd5b34801561017757600080fd5b5061018b610186366004611be2565b610535565b005b34801561019957600080fd5b506002545b6040519081526020015b60405180910390f35b3480156101bd57600080fd5b5061018b6101cc366004611c2d565b61064d565b3480156101dd57600080fd5b506101f16101ec366004611c5b565b610846565b604080516001600160801b0390941684526001600160401b0392831660208501529116908201526060016101a8565b34801561022c57600080fd5b5061019e60065481565b34801561024257600080fd5b5061018b610251366004611c74565b61088b565b34801561026257600080fd5b5061018b610271366004611c74565b610a6e565b34801561028257600080fd5b506102aa7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101a8565b3480156102ce57600080fd5b5061018b610c19565b3480156102e357600080fd5b506102f76102f2366004611c5b565b610cd6565b6040805182516001600160801b031681526020808401516001600160401b039081169183019190915292820151909216908201526060016101a8565b34801561033f57600080fd5b5061018b61034e366004611cef565b610f61565b34801561035f57600080fd5b506102aa61036e366004611c5b565b610fa5565b34801561037f57600080fd5b5061018b61038e366004611c5b565b610fcf565b34801561039f57600080fd5b5061018b6103ae366004611d30565b5050505050505050565b3480156103c457600080fd5b5061019e6103d3366004611c74565b611034565b3480156103e457600080fd5b5061018b6103f3366004611db9565b611220565b34801561040457600080fd5b506000546102aa906001600160a01b031681565b34801561042457600080fd5b5061018b610433366004611c2d565b6113ab565b34801561044457600080fd5b50610477610453366004611c74565b60056020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101a8565b34801561049857600080fd5b5061018b6104a7366004611e03565b6115a1565b3480156104b857600080fd5b506102aa6104c7366004611c5b565b61174a565b3480156104d857600080fd5b5061018b6104e7366004611c2d565b61175a565b61018b6104fa366004611e3a565b611a5f565b34801561050b57600080fd5b5061019e60075481565b34801561052157600080fd5b506001546102aa906001600160a01b031681565b6000546001600160a01b031633146105685760405162461bcd60e51b815260040161055f90611e85565b60405180910390fd5b811561062b576001600160a01b0383161515806105825750805b6105c65760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015260640161055f565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b600061065884610cd6565b600085815260056020908152604080832033845290915290208151919250906106ab9064e8d4a51000906106969087906001600160801b0316611b2c565b6106a09190611ed0565b600183015490611b3f565b600182015580546106bc9085611b3f565b81556004805460009190879081106106d6576106d6611ef2565b6000918252602090912001546001600160a01b03169050801561075c57815460405163cde63d9b60e01b81526001600160a01b0383169163cde63d9b91610729918a9133918a9160009190600401611f08565b600060405180830381600087803b15801561074357600080fd5b505af1158015610757573d6000803e3d6000fd5b505050505b6003868154811061076f5761076f611ef2565b60009182526020909120015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af11580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef9190611f37565b50836001600160a01b031686336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328860405161083691815260200190565b60405180910390a4505050505050565b6002818154811061085657600080fd5b6000918252602090912001546001600160801b03811691506001600160401b03600160801b8204811691600160c01b90041683565b600061089683610cd6565b6000848152600560209081526040808320338452909152812082518154939450909264e8d4a51000916108d291906001600160801b0316611b2c565b6108dc9190611ed0565b905060008260010154826108f09190611f54565b60018401839055905080156109945760405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190611f37565b505b6000600487815481106109a9576109a9611ef2565b6000918252602090912001546001600160a01b031690508015610a2e57835460405163cde63d9b60e01b81526001600160a01b0383169163cde63d9b916109fb918b9133918c91899190600401611f08565b600060405180830381600087803b158015610a1557600080fd5b505af1158015610a29573d6000803e3d6000fd5b505050505b604051828152879033907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249549060200160405180910390a350505050505050565b60008281526005602090815260408083203384529091528120805482825560018201839055600480549293919286908110610aab57610aab611ef2565b6000918252602090912001546001600160a01b031690508015610b305760405163cde63d9b60e01b81526001600160a01b0382169063cde63d9b90610afd908890339089906000908190600401611f08565b600060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050505b60038581548110610b4357610b43611ef2565b60009182526020909120015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190611f37565b50836001600160a01b031685336001600160a01b03167f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b85604051610c0a91815260200190565b60405180910390a45050505050565b6001546001600160a01b0316338114610c745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161055f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b604080516060810182526000808252602082018190529181019190915260028281548110610d0657610d06611ef2565b60009182526020918290206040805160608101825292909101546001600160801b03811683526001600160401b03600160801b82048116948401859052600160c01b90910416908201529150421115610f5c57600060038381548110610d6e57610d6e611ef2565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611f93565b90508015610e88576000610e0d83602001516001600160401b031642611b3f90919063ffffffff16565b90506000600654610e4085604001516001600160401b0316610e3a60075486611b2c90919063ffffffff16565b90611b2c565b610e4a9190611ed0565b9050610e7a83610e5f8364e8d4a51000611b2c565b610e699190611ed0565b85516001600160801b031690611b4b565b6001600160801b0316845250505b6001600160401b03421660208301526002805483919085908110610eae57610eae611ef2565b6000918252602091829020835191018054848401516040958601516001600160401b03908116600160c01b026001600160c01b03928216600160801b026001600160c01b03199094166001600160801b039687161793909317919091169190911790915585830151865185519190921681529283018590521681830152905184917f0fc9545022a542541ad085d091fb09a2ab36fee366a4576ab63714ea907ad353919081900360600190a2505b919050565b8060005b81811015610f9f57610f8e848483818110610f8257610f82611ef2565b90506020020135610cd6565b50610f9881611fac565b9050610f65565b50505050565b60038181548110610fb557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610ff95760405162461bcd60e51b815260040161055f90611e85565b60078190556040518181527fc284691de232f1b12c9423199d8d3955a77f2bc981ef6567c9d6c82493cb29219060200160405180910390a150565b6000806002848154811061104a5761104a611ef2565b600091825260208083206040805160608101825291909301546001600160801b0380821683526001600160401b03600160801b8304811684860152600160c01b90920490911682850152888552600583528385206001600160a01b03891686529092529183208251600380549496509194921692889081106110ce576110ce611ef2565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561111f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111439190611f93565b905083602001516001600160401b03164211801561116057508015155b156111e957600061118785602001516001600160401b031642611b3f90919063ffffffff16565b905060006006546111b487604001516001600160401b0316610e3a60075486611b2c90919063ffffffff16565b6111be9190611ed0565b90506111e4836111d38364e8d4a51000611b2c565b6111dd9190611ed0565b8590611b4b565b935050505b6001830154835464e8d4a51000906112019085611b2c565b61120b9190611ed0565b6112159190611f54565b979650505050505050565b6000546001600160a01b0316331461124a5760405162461bcd60e51b815260040161055f90611e85565b61128f836112896002878154811061126457611264611ef2565b60009182526020909120015460065490600160c01b90046001600160401b0316611b3f565b90611b4b565b60068190555082600285815481106112a9576112a9611ef2565b9060005260206000200160000160186101000a8154816001600160401b0302191690836001600160401b0316021790555080156113235781600485815481106112f4576112f4611ef2565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b80611355576004848154811061133b5761133b611ef2565b6000918252602090912001546001600160a01b0316611357565b815b6001600160a01b0316847f95895a6ab1df54420d241b55243258a33e61b2194db66c1179ec521aae8e1865858460405161139d9291909182521515602082015260400190565b60405180910390a350505050565b60006113b684610cd6565b60008581526005602090815260408083206001600160a01b038716845290915290208054919250906113e89085611b4b565b815581516114209064e8d4a510009061140b9087906001600160801b0316611b2c565b6114159190611ed0565b600183015490611b4b565b816001018190555060006004868154811061143d5761143d611ef2565b6000918252602090912001546001600160a01b0316905080156114c357815460405163cde63d9b60e01b81526001600160a01b0383169163cde63d9b91611490918a918991829160009190600401611f08565b600060405180830381600087803b1580156114aa57600080fd5b505af11580156114be573d6000803e3d6000fd5b505050505b600386815481106114d6576114d6611ef2565b6000918252602090912001546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190611f37565b50836001600160a01b031686336001600160a01b03167f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b478860405161083691815260200190565b6000546001600160a01b031633146115cb5760405162461bcd60e51b815260040161055f90611e85565b6006546115d89084611b4b565b60065560038054600181810183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b038087166001600160a01b03199283168117909355600480548086019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180549187169190921681179091556040805160608101825260008082526001600160401b03428116602084019081528b821694840194855260028054808a018255935292517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9092018054935194518216600160c01b026001600160c01b0395909216600160801b026001600160c01b03199094166001600160801b0393909316929092179290921792909216179055925490916117129190611b3f565b6040518681527f81ee0f8c5c46e2cb41984886f77a84181724abb86c32a5f6de539b07509d45e59060200160405180910390a4505050565b60048181548110610fb557600080fd5b600061176584610cd6565b6000858152600560209081526040808320338452909152812082518154939450909264e8d4a51000916117a191906001600160801b0316611b2c565b6117ab9190611ed0565b905060008260010154826117bf9190611f54565b90506117fb64e8d4a510006117ea86600001516001600160801b031689611b2c90919063ffffffff16565b6117f49190611ed0565b8390611b3f565b6001840155825461180c9087611b3f565b835560405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561187d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a19190611f37565b506000600488815481106118b7576118b7611ef2565b6000918252602090912001546001600160a01b03169050801561193c57835460405163cde63d9b60e01b81526001600160a01b0383169163cde63d9b91611909918c9133918c91899190600401611f08565b600060405180830381600087803b15801561192357600080fd5b505af1158015611937573d6000803e3d6000fd5b505050505b6003888154811061194f5761194f611ef2565b60009182526020909120015460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018a90529091169063a9059cbb906044016020604051808303816000875af11580156119ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cf9190611f37565b50856001600160a01b031688336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328a604051611a1691815260200190565b60405180910390a4604051828152889033907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249549060200160405180910390a35050505050505050565b60005b82811015610f9f5760008030868685818110611a8057611a80611ef2565b9050602002810190611a929190611fc7565b604051611aa092919061200d565b600060405180830381855af49150503d8060008114611adb576040519150601f19603f3d011682016040523d82523d6000602084013e611ae0565b606091505b509150915081158015611af05750835b15611b1757611afe81611b57565b60405162461bcd60e51b815260040161055f9190612049565b50508080611b2490611fac565b915050611a62565b6000611b38828461207c565b9392505050565b6000611b38828461209b565b6000611b3882846120b2565b6060604482511015611b9c57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60048201915081806020019051810190611bb691906120e0565b92915050565b6001600160a01b0381168114611bd157600080fd5b50565b8015158114611bd157600080fd5b600080600060608486031215611bf757600080fd5b8335611c0281611bbc565b92506020840135611c1281611bd4565b91506040840135611c2281611bd4565b809150509250925092565b600080600060608486031215611c4257600080fd5b83359250602084013591506040840135611c2281611bbc565b600060208284031215611c6d57600080fd5b5035919050565b60008060408385031215611c8757600080fd5b823591506020830135611c9981611bbc565b809150509250929050565b60008083601f840112611cb657600080fd5b5081356001600160401b03811115611ccd57600080fd5b6020830191508360208260051b8501011115611ce857600080fd5b9250929050565b60008060208385031215611d0257600080fd5b82356001600160401b03811115611d1857600080fd5b611d2485828601611ca4565b90969095509350505050565b600080600080600080600080610100898b031215611d4d57600080fd5b8835611d5881611bbc565b97506020890135611d6881611bbc565b96506040890135611d7881611bbc565b9550606089013594506080890135935060a089013560ff81168114611d9c57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b60008060008060808587031215611dcf57600080fd5b84359350602085013592506040850135611de881611bbc565b91506060850135611df881611bd4565b939692955090935050565b600080600060608486031215611e1857600080fd5b833592506020840135611e2a81611bbc565b91506040840135611c2281611bbc565b600080600060408486031215611e4f57600080fd5b83356001600160401b03811115611e6557600080fd5b611e7186828701611ca4565b9094509250506020840135611c2281611bd4565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082611eed57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b600060208284031215611f4957600080fd5b8151611b3881611bd4565b60008083128015600160ff1b850184121615611f7257611f72611eba565b6001600160ff1b0384018313811615611f8d57611f8d611eba565b50500390565b600060208284031215611fa557600080fd5b5051919050565b6000600019821415611fc057611fc0611eba565b5060010190565b6000808335601e19843603018112611fde57600080fd5b8301803591506001600160401b03821115611ff857600080fd5b602001915036819003821315611ce857600080fd5b8183823760009101908152919050565b60005b83811015612038578181015183820152602001612020565b83811115610f9f5750506000910152565b602081526000825180602084015261206881604085016020870161201d565b601f01601f19169190910160400192915050565b600081600019048311821515161561209657612096611eba565b500290565b6000828210156120ad576120ad611eba565b500390565b600082198211156120c5576120c5611eba565b500190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156120f257600080fd5b81516001600160401b038082111561210957600080fd5b818401915084601f83011261211d57600080fd5b81518181111561212f5761212f6120ca565b604051601f8201601f19908116603f01168101908382118183101715612157576121576120ca565b8160405282815287602084870101111561217057600080fd5b61121583602083016020880161201d56fea164736f6c634300080a000a";

type MockMiniChefV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMiniChefV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMiniChefV2__factory extends ContractFactory {
  constructor(...args: MockMiniChefV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _saddle: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockMiniChefV2> {
    return super.deploy(_saddle, overrides || {}) as Promise<MockMiniChefV2>;
  }
  override getDeployTransaction(
    _saddle: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_saddle, overrides || {});
  }
  override attach(address: string): MockMiniChefV2 {
    return super.attach(address) as MockMiniChefV2;
  }
  override connect(signer: Signer): MockMiniChefV2__factory {
    return super.connect(signer) as MockMiniChefV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMiniChefV2Interface {
    return new utils.Interface(_abi) as MockMiniChefV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMiniChefV2 {
    return new Contract(address, _abi, signerOrProvider) as MockMiniChefV2;
  }
}
