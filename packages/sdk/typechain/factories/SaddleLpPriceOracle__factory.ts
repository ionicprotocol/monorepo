/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SaddleLpPriceOracle,
  SaddleLpPriceOracleInterface,
} from "../SaddleLpPriceOracle";

const _abi = [
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnderlyingTokens",
    inputs: [
      {
        name: "lpToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_lpTokens",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_pools",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_poolUnderlyings",
        type: "address[][]",
        internalType: "address[][]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerPool",
    inputs: [
      {
        name: "_lpToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pool",
        type: "address",
        internalType: "address",
      },
      {
        name: "_underlyings",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "underlyingTokens",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611235806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063904d4d751161008c578063e30c397811610066578063e30c3978146101c2578063f2fde38b146101d5578063fc4d33f9146101e8578063fc57d4df146101f057600080fd5b8063904d4d7514610165578063988b1fa714610178578063aea91078146101a157600080fd5b806301eadec4146100d457806327a3c20114610104578063656dc2e4146101195780636e96dfd714610139578063715018a61461014c5780638da5cb5b14610154575b600080fd5b6100e76100e2366004610d3d565b610203565b6040516001600160a01b0390911681526020015b60405180910390f35b610117610112366004610e48565b61023b565b005b61012c610127366004610f40565b6104d4565b6040516100fb9190610f5d565b610117610147366004610f40565b61054a565b6101176105b4565b6033546001600160a01b03166100e7565b610117610173366004610faa565b6105f7565b6100e7610186366004610f40565b6067602052600090815260409020546001600160a01b031681565b6101b46101af366004610f40565b610646565b6040519081526020016100fb565b6065546100e7906001600160a01b031681565b6101176101e3366004610f40565b610657565b6101176106c8565b6101b46101fe366004610f40565b6107dc565b6066602052816000526040600020818154811061021f57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054610100900460ff161580801561025b5750600054600160ff909116105b806102755750303b158015610275575060005460ff166001145b6102dd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610300576000805461ff0019166101001790555b82518451148015610312575081518451145b6103785760405162461bcd60e51b815260206004820152603160248201527f4e6f204c5020746f6b656e7320737570706c696564206f72206172726179206c60448201527032b733ba3439903737ba1032b8bab0b61760791b60648201526084016102d4565b610381336108df565b60005b84518110156104875783818151811061039f5761039f61100c565b6020026020010151606760008784815181106103bd576103bd61100c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082818151811061041b5761041b61100c565b6020026020010151606660008784815181106104395761043961100c565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000209080519060200190610474929190610cae565b508061047f81611038565b915050610384565b5080156104ce576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b03811660009081526066602090815260409182902080548351818402810184019094528084526060939283018282801561053e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610520575b50505050509050919050565b61055261091a565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b6105bc61091a565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064016102d4565b6105ff61091a565b6001600160a01b03838116600090815260676020908152604080832080546001600160a01b031916948716949094179093556066815291902082516104ce92840190610cae565b600061065182610976565b92915050565b61065f61091a565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b0316331461071a5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b60448201526064016102d4565b600061072e6033546001600160a01b031690565b6065549091506001600160a01b031661074681610c02565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91016105a8565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190611053565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611070565b6108b39060ff16600a611177565b6108bc82610976565b6108ce90670de0b6b3a7640000611183565b6108d891906111a2565b9392505050565b600054610100900460ff166109065760405162461bcd60e51b81526004016102d4906111c4565b61090e610c54565b61091781610c02565b50565b6033546001600160a01b031633146109745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d4565b565b6001600160a01b03808216600090815260676020526040812054909116806109e05760405162461bcd60e51b815260206004820152601b60248201527f4c5020746f6b656e206973206e6f7420726567697374657265642e000000000060448201526064016102d4565b6001600160a01b038316600090815260666020908152604080832080548251818502810185019093528083529192909190830182828015610a4a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a2c575b5050835193945060001993925060009150505b81811015610b15576000848281518110610a7957610a7961100c565b60209081029190910101516040516315d5220f60e31b81526001600160a01b0382166004820152909150600090339063aea9107890602401602060405180830381865afa158015610ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af2919061120f565b905084811015610b00578094505b50508080610b0d90611038565b915050610a5d565b50600019821415610b795760405162461bcd60e51b815260206004820152602860248201527f4e6f206d696e696d756d20756e6465726c79696e6720746f6b656e207072696360448201526732903337bab7321760c11b60648201526084016102d4565b670de0b6b3a7640000846001600160a01b031663e25aa5fa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be4919061120f565b610bee9084611183565b610bf891906111a2565b9695505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610c7b5760405162461bcd60e51b81526004016102d4906111c4565b610974600054610100900460ff16610ca55760405162461bcd60e51b81526004016102d4906111c4565b61097433610c02565b828054828255906000526020600020908101928215610d03579160200282015b82811115610d0357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610cce565b50610d0f929150610d13565b5090565b5b80821115610d0f5760008155600101610d14565b6001600160a01b038116811461091757600080fd5b60008060408385031215610d5057600080fd5b8235610d5b81610d28565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610da857610da8610d69565b604052919050565b600067ffffffffffffffff821115610dca57610dca610d69565b5060051b60200190565b600082601f830112610de557600080fd5b81356020610dfa610df583610db0565b610d7f565b82815260059290921b84018101918181019086841115610e1957600080fd5b8286015b84811015610e3d578035610e3081610d28565b8352918301918301610e1d565b509695505050505050565b600080600060608486031215610e5d57600080fd5b833567ffffffffffffffff80821115610e7557600080fd5b610e8187838801610dd4565b9450602091508186013581811115610e9857600080fd5b610ea488828901610dd4565b945050604086013581811115610eb957600080fd5b8601601f81018813610eca57600080fd5b8035610ed8610df582610db0565b81815260059190911b8201840190848101908a831115610ef757600080fd5b8584015b83811015610f2f57803586811115610f135760008081fd5b610f218d8983890101610dd4565b845250918601918601610efb565b508096505050505050509250925092565b600060208284031215610f5257600080fd5b81356108d881610d28565b6020808252825182820181905260009190848201906040850190845b81811015610f9e5783516001600160a01b031683529284019291840191600101610f79565b50909695505050505050565b600080600060608486031215610fbf57600080fd5b8335610fca81610d28565b92506020840135610fda81610d28565b9150604084013567ffffffffffffffff811115610ff657600080fd5b61100286828701610dd4565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561104c5761104c611022565b5060010190565b60006020828403121561106557600080fd5b81516108d881610d28565b60006020828403121561108257600080fd5b815160ff811681146108d857600080fd5b600181815b808511156110ce5781600019048211156110b4576110b4611022565b808516156110c157918102915b93841c9390800290611098565b509250929050565b6000826110e557506001610651565b816110f257506000610651565b816001811461110857600281146111125761112e565b6001915050610651565b60ff84111561112357611123611022565b50506001821b610651565b5060208310610133831016604e8410600b8410161715611151575081810a610651565b61115b8383611093565b806000190482111561116f5761116f611022565b029392505050565b60006108d883836110d6565b600081600019048311821515161561119d5761119d611022565b500290565b6000826111bf57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561122157600080fd5b505191905056fea164736f6c634300080a000a";

type SaddleLpPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaddleLpPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaddleLpPriceOracle__factory extends ContractFactory {
  constructor(...args: SaddleLpPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SaddleLpPriceOracle> {
    return super.deploy(overrides || {}) as Promise<SaddleLpPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SaddleLpPriceOracle {
    return super.attach(address) as SaddleLpPriceOracle;
  }
  override connect(signer: Signer): SaddleLpPriceOracle__factory {
    return super.connect(signer) as SaddleLpPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaddleLpPriceOracleInterface {
    return new utils.Interface(_abi) as SaddleLpPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SaddleLpPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as SaddleLpPriceOracle;
  }
}
