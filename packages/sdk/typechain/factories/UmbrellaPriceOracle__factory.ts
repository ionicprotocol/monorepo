/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UmbrellaPriceOracle,
  UmbrellaPriceOracleInterface,
} from "../UmbrellaPriceOracle";

const _abi = [
  {
    type: "function",
    name: "NATIVE_TOKEN_USD_KEY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UMBRELLA_FEEDS_ADDRESS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IUmbrellaFeeds",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_acceptOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setPendingOwner",
    inputs: [
      {
        name: "newPendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUnderlyingPrice",
    inputs: [
      {
        name: "cToken",
        type: "address",
        internalType: "contract ICErc20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "nativeTokenUsd",
        type: "string",
        internalType: "string",
      },
      {
        name: "registry",
        type: "address",
        internalType: "contract IRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "price",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeeds",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "reinitialize",
    inputs: [
      {
        name: "nativeTokenUsd",
        type: "string",
        internalType: "string",
      },
      {
        name: "registry",
        type: "address",
        internalType: "contract IRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPriceFeeds",
    inputs: [
      {
        name: "underlyings",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "feeds",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOwner",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPendingOwner",
    inputs: [
      {
        name: "oldPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newPendingOwner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611643806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063aea910781161008c578063e46c7d7a11610066578063e46c7d7a146101cf578063f2fde38b146101e2578063fc4d33f9146101f5578063fc57d4df146101fd57600080fd5b8063aea9107814610188578063dae4ebea146101a9578063e30c3978146101bc57600080fd5b8063715018a6116100c8578063715018a6146101495780637ab4339d146101515780638da5cb5b146101645780639dcb511a1461017557600080fd5b80631204404f146100ef5780634805e4671461011f5780636e96dfd714610134575b600080fd5b606854610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610127610210565b6040516101169190610f7e565b610147610142366004610fe8565b61029e565b005b610147610308565b61014761015f3660046110c3565b610350565b6033546001600160a01b0316610102565b610127610183366004610fe8565b610579565b61019b610196366004610fe8565b610592565b604051908152602001610116565b6101476101b73660046110c3565b6105a3565b606554610102906001600160a01b031681565b6101476101dd3660046111c9565b61077c565b6101476101f0366004610fe8565b61088d565b6101476108fe565b61019b61020b366004610fe8565b610a12565b6067805461021d9061128b565b80601f01602080910402602001604051908101604052809291908181526020018280546102499061128b565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b505050505081565b6102a6610b46565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610310610b46565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b600054610100900460ff16158080156103705750600054600160ff909116105b8061038a5750303b15801561038a575060005460ff166001145b6103ed5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610347565b6000805460ff191660011790558015610410576000805461ff0019166101001790555b61041933610ba2565b825161042c906067906020860190610ee5565b50604051631d1f31f160e31b815260206004820152600d60248201526c556d6272656c6c61466565647360981b60448201526000906001600160a01b0384169063e8f98f8890606401602060405180830381865afa158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b691906112c6565b90506001600160a01b03811661050e5760405162461bcd60e51b815260206004820152601f60248201527f556d6272656c6c6146656564732061646472657373206e6f7420666f756e64006044820152606401610347565b606880546001600160a01b0319166001600160a01b03929092169190911790558015610574576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6066602052600090815260409020805461021d9061128b565b600061059d82610bdd565b92915050565b6033546001600160a01b03163314806106625760006105e97fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b031690565b90506001600160a01b03811633148061065f5760405162461bcd60e51b815260206004820152603260248201527f4f776e61626c653a2063616c6c6572206973206e65697468657220746865206f6044820152713bb732b9103737b9103a34329030b236b4b760711b6064820152608401610347565b50505b8251610675906067906020860190610ee5565b50604051631d1f31f160e31b815260206004820152600d60248201526c556d6272656c6c61466565647360981b60448201526000906001600160a01b0384169063e8f98f8890606401602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906112c6565b90506001600160a01b0381166107575760405162461bcd60e51b815260206004820152601f60248201527f556d6272656c6c6146656564732061646472657373206e6f7420666f756e64006044820152606401610347565b606880546001600160a01b0319166001600160a01b0392909216919091179055505050565b610784610b46565b60008251118015610796575080518251145b6108085760405162461bcd60e51b815260206004820152603860248201527f4c656e67746873206f6620626f746820617272617973206d757374206265206560448201527f7175616c20616e642067726561746572207468616e20302e00000000000000006064820152608401610347565b60005b8251811015610574576000838281518110610828576108286112e3565b60200260200101519050828281518110610844576108446112e3565b6020908102919091018101516001600160a01b03831660009081526066835260409020815161087893919290910190610ee5565b505080806108859061130f565b91505061080b565b610895610b46565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146109505760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610347565b60006109646033546001600160a01b031690565b6065549091506001600160a01b031661097c81610e39565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91016102fc565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7791906112c6565b90506000610a8482610bdd565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea9190611340565b60ff1690506012811115610b1d57610b0360128261135b565b610b0e90600a611456565b610b189083611462565b610b3d565b610b2881601261135b565b610b3390600a611456565b610b3d9083611484565b95945050505050565b6033546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610347565b565b600054610100900460ff16610bc95760405162461bcd60e51b8152600401610347906114a3565b610bd1610e8b565b610bda81610e39565b50565b6001600160a01b03811660009081526066602052604081208054829190610c039061128b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2f9061128b565b8015610c7c5780601f10610c5157610100808354040283529160200191610c7c565b820191906000526020600020905b815481529060010190602001808311610c5f57829003601f168201915b50505050509050805160001415610cfb5760405162461bcd60e51b815260206004820152603d60248201527f4e6f20556d6272656c6c61207072696365206665656420666f756e6420666f7260448201527f207468697320756e6465726c79696e6720455243323020746f6b656e2e0000006064820152608401610347565b606854604051635b38adc760e01b81526000916001600160a01b031690635b38adc790610d2d906067906004016114ee565b608060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190611596565b60608101519091506001600160801b031680610d8f57506000949350505050565b606854604051635b38adc760e01b81526000916001600160a01b031690635b38adc790610dc0908790600401610f7e565b608060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e019190611596565b90508181606001516001600160801b0316670de0b6b3a7640000610e259190611484565b610e2f9190611462565b9695505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610eb25760405162461bcd60e51b8152600401610347906114a3565b610ba0600054610100900460ff16610edc5760405162461bcd60e51b8152600401610347906114a3565b610ba033610e39565b828054610ef19061128b565b90600052602060002090601f016020900481019282610f135760008555610f59565b82601f10610f2c57805160ff1916838001178555610f59565b82800160010185558215610f59579182015b82811115610f59578251825591602001919060010190610f3e565b50610f65929150610f69565b5090565b5b80821115610f655760008155600101610f6a565b600060208083528351808285015260005b81811015610fab57858101830151858201604001528201610f8f565b81811115610fbd576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610bda57600080fd5b600060208284031215610ffa57600080fd5b813561100581610fd3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561104b5761104b61100c565b604052919050565b600082601f83011261106457600080fd5b813567ffffffffffffffff81111561107e5761107e61100c565b611091601f8201601f1916602001611022565b8181528460208386010111156110a657600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156110d657600080fd5b823567ffffffffffffffff8111156110ed57600080fd5b6110f985828601611053565b925050602083013561110a81610fd3565b809150509250929050565b600067ffffffffffffffff82111561112f5761112f61100c565b5060051b60200190565b600082601f83011261114a57600080fd5b8135602061115f61115a83611115565b611022565b82815260059290921b8401810191818101908684111561117e57600080fd5b8286015b848110156111be57803567ffffffffffffffff8111156111a25760008081fd5b6111b08986838b0101611053565b845250918301918301611182565b509695505050505050565b600080604083850312156111dc57600080fd5b823567ffffffffffffffff808211156111f457600080fd5b818501915085601f83011261120857600080fd5b8135602061121861115a83611115565b82815260059290921b8401810191818101908984111561123757600080fd5b948201945b8386101561125e57853561124f81610fd3565b8252948201949082019061123c565b9650508601359250508082111561127457600080fd5b5061128185828601611139565b9150509250929050565b600181811c9082168061129f57607f821691505b602082108114156112c057634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112d857600080fd5b815161100581610fd3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611323576113236112f9565b5060010190565b805160ff8116811461133b57600080fd5b919050565b60006020828403121561135257600080fd5b6110058261132a565b60008282101561136d5761136d6112f9565b500390565b600181815b808511156113ad578160001904821115611393576113936112f9565b808516156113a057918102915b93841c9390800290611377565b509250929050565b6000826113c45750600161059d565b816113d15750600061059d565b81600181146113e757600281146113f15761140d565b600191505061059d565b60ff841115611402576114026112f9565b50506001821b61059d565b5060208310610133831016604e8410600b8410161715611430575081810a61059d565b61143a8383611372565b806000190482111561144e5761144e6112f9565b029392505050565b600061100583836113b5565b60008261147f57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561149e5761149e6112f9565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208083526000845481600182811c91508083168061151057607f831692505b85831081141561152e57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561154b576001811461155c57611587565b60ff19861682528782019650611587565b60008b81526020902060005b8681101561158157815484820152908501908901611568565b83019750505b50949998505050505050505050565b6000608082840312156115a857600080fd5b6040516080810181811067ffffffffffffffff821117156115cb576115cb61100c565b6040526115d78361132a565b8152602083015162ffffff811681146115ef57600080fd5b6020820152604083015163ffffffff8116811461160b57600080fd5b604082015260608301516001600160801b038116811461162a57600080fd5b6060820152939250505056fea164736f6c634300080a000a";

type UmbrellaPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UmbrellaPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UmbrellaPriceOracle__factory extends ContractFactory {
  constructor(...args: UmbrellaPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<UmbrellaPriceOracle> {
    return super.deploy(overrides || {}) as Promise<UmbrellaPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UmbrellaPriceOracle {
    return super.attach(address) as UmbrellaPriceOracle;
  }
  override connect(signer: Signer): UmbrellaPriceOracle__factory {
    return super.connect(signer) as UmbrellaPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UmbrellaPriceOracleInterface {
    return new utils.Interface(_abi) as UmbrellaPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UmbrellaPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as UmbrellaPriceOracle;
  }
}
