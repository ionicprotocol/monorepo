/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BNum, BNumInterface } from "../BNum";

const _abi = [
  {
    type: "function",
    name: "BONE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "BPOW_PRECISION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "EXIT_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "INIT_POOL_SUPPLY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_IN_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_OUT_RATIO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_TOTAL_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BALANCE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BOUND_TOKENS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_BPOW_BASE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_FEE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_WEIGHT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b7b800a411610097578063c36596a611610066578063c36596a614610127578063c6580d121461017e578063e4a28a5214610105578063ec0930211461018657600080fd5b8063b7b800a41461015e578063ba019dab14610166578063bc063e1a1461016e578063bc694ea21461017657600080fd5b8063867378c5116100d3578063867378c51461013e5780639381cd2b14610146578063992e2a921461014e578063b0e0d1361461015657600080fd5b806309a3bbe414610105578063189d00ca1461011f578063218b53821461012757806376c7a3c714610136575b600080fd5b61010d61018e565b60405190815260200160405180910390f35b61010d6101a4565b61010d670de0b6b3a764000081565b61010d6101bb565b61010d6101d0565b61010d6101e7565b61010d6101fa565b61010d600881565b61010d600281565b61010d600181565b61010d610218565b61010d61022b565b61010d600081565b61010d61024a565b6101a1670de0b6b3a76400006032610273565b81565b6101a16402540be400670de0b6b3a7640000610292565b6101a1620f4240670de0b6b3a7640000610292565b6101a164e8d4a51000670de0b6b3a7640000610292565b6101a1670de0b6b3a76400006064610273565b61020d6003670de0b6b3a7640000610292565b6101a19060016102b4565b6101a1600a670de0b6b3a7640000610292565b6001610240670de0b6b3a76400006002610273565b6101a191906102cc565b6101a16002670de0b6b3a7640000610292565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561028d5761028d61025d565b500290565b6000826102af57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156102c7576102c761025d565b500190565b6000828210156102de576102de61025d565b50039056fea164736f6c634300080a000a";

type BNumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BNum__factory extends ContractFactory {
  constructor(...args: BNumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<BNum> {
    return super.deploy(overrides || {}) as Promise<BNum>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BNum {
    return super.attach(address) as BNum;
  }
  override connect(signer: Signer): BNum__factory {
    return super.connect(signer) as BNum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNumInterface {
    return new utils.Interface(_abi) as BNumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BNum {
    return new Contract(address, _abi, signerOrProvider) as BNum;
  }
}
