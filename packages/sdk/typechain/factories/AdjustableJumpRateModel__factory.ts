/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AdjustableJumpRateModel,
  AdjustableJumpRateModelInterface,
  InterestRateModelParamsStruct,
} from "../AdjustableJumpRateModel";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct InterestRateModelParams",
        components: [
          {
            name: "blocksPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "baseRatePerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "multiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "jumpMultiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "kink",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_setIrmParameters",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct InterestRateModelParams",
        components: [
          {
            name: "blocksPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "baseRatePerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "multiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "jumpMultiplierPerYear",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "kink",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "baseRatePerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blocksPerYear",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveFactorMantissa",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInterestRateModel",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "jumpMultiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "kink",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multiplierPerBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "utilizationRate",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "borrows",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserves",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "NewInterestParams",
    inputs: [
      {
        name: "baseRatePerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "multiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "jumpMultiplierPerBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "kink",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000bac38038062000bac833981016040819052610031916101e0565b61003a33610101565b8051600181905560208083015161005a92909161045e610151821b17901c565b60038190555061007d600154826040015161015160201b61045e1790919060201c565b6002819055506100a0600154826060015161015160201b61045e1790919060201c565b6004819055608082810151600581905560035460025460408051928352602083019190915281019390935260608301527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d910160405180910390a1506102d4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061019983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506101a060201b60201c565b9392505050565b600081836101ca5760405162461bcd60e51b81526004016101c1919061025d565b60405180910390fd5b5060006101d784866102b2565b95945050505050565b600060a082840312156101f257600080fd5b60405160a081016001600160401b038111828210171561022257634e487b7160e01b600052604160045260246000fd5b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208083528351808285015260005b8181101561028a5785810183015185820160400152820161026e565b8181111561029c576000604083870101525b50601f01601f1916929092016040019392505050565b6000826102cf57634e487b7160e01b600052601260045260246000fd5b500490565b6108c880620002e46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b9f9850a11610066578063b9f9850a14610182578063f14039de1461018b578063f2fde38b14610194578063fd2da339146101a757600080fd5b80638da5cb5b1461014b578063a385fb9614610166578063b81688161461016f57600080fd5b806315f24053146100d45780632191f92a146100fa5780632fffcf50146101125780636e71e2d814610127578063715018a61461013a5780638726bb8914610142575b600080fd5b6100e76100e23660046106db565b6101b0565b6040519081526020015b60405180910390f35b610102600181565b60405190151581526020016100f1565b610125610120366004610707565b61027c565b005b6100e76101353660046106db565b61031f565b61012561035f565b6100e760025481565b6000546040516001600160a01b0390911681526020016100f1565b6100e760015481565b6100e761017d366004610785565b610373565b6100e760045481565b6100e760035481565b6101256101a23660046107b7565b6103e0565b6100e760055481565b6000806101be85858561031f565b90506005548111610204576101fc6003546101f6670de0b6b3a76400006101f0600254866104a990919063ffffffff16565b9061045e565b90610528565b915050610275565b600061022f6003546101f6670de0b6b3a76400006101f06002546005546104a990919063ffffffff16565b905060006102486005548461058790919063ffffffff16565b905061026f826101f6670de0b6b3a76400006101f0600454866104a990919063ffffffff16565b93505050505b9392505050565b6102846105c9565b8051600181905560208201516102999161045e565b60035560015460408201516102ad9161045e565b60025560015460608201516102c19161045e565b6004819055608082810151600581905560035460025460408051928352602083019190915281019390935260608301527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d910160405180910390a150565b60008261032e57506000610275565b6103576103458361033f8787610528565b90610587565b6101f085670de0b6b3a76400006104a9565b949350505050565b6103676105c9565b6103716000610623565b565b600080610388670de0b6b3a764000084610587565b905060006103978787876101b0565b905060006103b1670de0b6b3a76400006101f084866104a9565b90506103d4670de0b6b3a76400006101f0836103ce8c8c8c61031f565b906104a9565b98975050505050505050565b6103e86105c9565b6001600160a01b0381166104525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045b81610623565b50565b60006104a083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610673565b90505b92915050565b6000826104b8575060006104a3565b60006104c483856107f6565b9050826104d18583610815565b146104a05760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610449565b6000806105358385610837565b9050838110156104a05760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610449565b60006104a083836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506106aa565b6000546001600160a01b031633146103715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081836106945760405162461bcd60e51b8152600401610449919061084f565b5060006106a18486610815565b95945050505050565b600081848411156106ce5760405162461bcd60e51b8152600401610449919061084f565b5060006106a184866108a4565b6000806000606084860312156106f057600080fd5b505081359360208301359350604090920135919050565b600060a0828403121561071957600080fd5b60405160a0810181811067ffffffffffffffff8211171561074a57634e487b7160e01b600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b6000806000806080858703121561079b57600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156107c957600080fd5b81356001600160a01b03811681146104a057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610810576108106107e0565b500290565b60008261083257634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561084a5761084a6107e0565b500190565b600060208083528351808285015260005b8181101561087c57858101830151858201604001528201610860565b8181111561088e576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156108b6576108b66107e0565b50039056fea164736f6c634300080a000a";

type AdjustableJumpRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdjustableJumpRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdjustableJumpRateModel__factory extends ContractFactory {
  constructor(...args: AdjustableJumpRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: InterestRateModelParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<AdjustableJumpRateModel> {
    return super.deploy(
      params,
      overrides || {}
    ) as Promise<AdjustableJumpRateModel>;
  }
  override getDeployTransaction(
    params: InterestRateModelParamsStruct,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): AdjustableJumpRateModel {
    return super.attach(address) as AdjustableJumpRateModel;
  }
  override connect(signer: Signer): AdjustableJumpRateModel__factory {
    return super.connect(signer) as AdjustableJumpRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdjustableJumpRateModelInterface {
    return new utils.Interface(_abi) as AdjustableJumpRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdjustableJumpRateModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AdjustableJumpRateModel;
  }
}
