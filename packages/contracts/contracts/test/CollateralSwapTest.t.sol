// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import { UpgradesBaseTest } from "./UpgradesBaseTest.sol";
import { ICErc20 } from "../compound/CTokenInterfaces.sol";
import { CollateralSwap } from "../ionic/CollateralSwap.sol";
import { PoolLens } from "../PoolLens.sol";

contract CollateralSwapTest is UpgradesBaseTest {
  ICErc20 wethMarket = ICErc20(0x49420311B518f3d0c94e897592014de53831cfA3);
  ICErc20 usdcMarket = ICErc20(0xa900A17a49Bc4D442bA7F72c39FA2108865671f0);
  ICErc20 ezETHMarket = ICErc20(0x079f84161642D81aaFb67966123C9949F9284bf5);
  ICErc20 cbETHMarket = ICErc20(0x9c201024A62466F9157b2dAaDda9326207ADDd29);
  PoolLens lens = PoolLens(0x6ec80f9aCd960b568932696C0F0bE06FBfCd175a);
  CollateralSwap swap;

  function afterForkSetUp() internal virtual override {
    super.afterForkSetUp();
    _upgradeMarketWithExtension(wethMarket);
    _upgradeMarketWithExtension(ezETHMarket);
    _upgradeMarketWithExtension(cbETHMarket);
    _upgradeMarketWithExtension(usdcMarket);
    swap = new CollateralSwap(0, msg.sender, address(wethMarket.comptroller()), new address[](0));
    emit log_named_address("swap address: ", address(swap));
  }

  function test_collateralSwap_works_noBorrows() public debuggingOnly forkAtBlock(BASE_MAINNET, 20754244) {
    address ionwethWhale = 0x753E909D68921388b8fB4E471D155ff73c735ebC;
    address swapTarget = 0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE;
    swap.setAllowedSwapTarget(swapTarget, true);
    uint256 healthFactor = lens.getHealthFactor(0x753E909D68921388b8fB4E471D155ff73c735ebC, wethMarket.comptroller());
    emit log_named_uint("health factor before: ", healthFactor);
    bytes memory swapData = abi.encodePacked(
      hex"5fd9ae2ea41bd686f6e5326450d10ac2dc733b837ae20fb0aaf871e87b4a9227171918ab00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000a0cb889707d426a7a386870a03bc70d1b0697598000000000000000000000000000000000000000000000000000000001d42cce300000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000005696f6e6963000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a307830303030303030303030303030303030303030303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000a6d96e7f4d7b96cfe42185df61e64d255c12dff0000000000000000000000000a6d96e7f4d7b96cfe42185df61e64d255c12dff0000000000000000000000004200000000000000000000000000000000000006000000000000000000000000420000000000000000000000000000000000000600000000000000000000000000000000000000000000000002d02dd2e34e182400000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000084eedd56e100000000000000000000000042000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000b85da6a0970f0000000000000000000000000000000000000000000000000001ccea209179a9000000000000000000000000d5ee82d18f63f0b82df91a6ae73b74cfda57144e000000000000000000000000000000000000000000000000000000000000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000004200000000000000000000000000000000000006000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda0291300000000000000000000000000000000000000000000000002cda88b1c1c076b00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa490411a32000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a99000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000004200000000000000000000000000000000000006000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a990000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000000000000000000000000000002cda88b1c1c076b000000000000000000000000000000000000000000000000000000001d42cce3000000000000000000000000000000000000000000000000000000001d68714c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000933a06c631ed8b5e4f3848c91a1cfc45e5c7eab3000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000540000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000104e5b07cdb0000000000000000000000004d69971ccd4a636c403a3c1b00c85e99bb9b5606000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000002cda88b1c1c076b000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a9900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002e4200000000000000000000000000000000000006000064b79dd08ea68a908a97220c76d19a6aa9cbde437600002600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002449f865422000000000000000000000000b79dd08ea68a908a97220c76d19a6aa9cbdee5b07cdb0000000000000000000000000c1a09d5d0445047da3ab4994262b22404288a3b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a9900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002eb79dd08ea68a908a97220c76d19a6aa9cbde4376000001833589fcd6edb6e08f4c7c32d4f71b54bda029130000260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000648a6a1e85000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000353c1f0bc78fbbc245b3c93ef77b1dcc5b77d2a0000000000000000000000000000000000000000000000000000000001d68714c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a49f865422000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bdad1660f99000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    );

    vm.startPrank(ionwethWhale);
    wethMarket.approve(address(swap), 1e18);
    swap.swapCollateral(1e18, wethMarket, usdcMarket, swapTarget, swapData);
    vm.stopPrank();
    healthFactor = lens.getHealthFactor(0x753E909D68921388b8fB4E471D155ff73c735ebC, wethMarket.comptroller());
    emit log_named_uint("health factor after: ", healthFactor);
  }

  function test_collateralSwap_worksWithBorrows() public debuggingOnly forkAtBlock(BASE_MAINNET, 20874971) {
    address ionezEthWhale = 0x1155b614971f16758C92c4890eD338C9e3ede6b7;
    address swapTarget = 0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE;
    swap.setAllowedSwapTarget(swapTarget, true);
    bytes memory swapData = abi.encodePacked(
      hex"4666fc80a7f78b3a1e00f74ab91e766714a7b7390c173e43f2f65d7c74bda18ff1e067dd00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000d6bbde9174b1cdaa358d2cf4d57d1a9f7178fbff000000000000000000000000000000000000000000000000003625685b773877000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000086c6966692d617069000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a307830303030303030303030303030303030303030303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000002416092f143378750bb29b79ed961ab195cceea50000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec220000000000000000000000000000000000000000000000000039afc19de8c3ba00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000aa490411a32000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a99000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000002416092f143378750bb29b79ed961ab195cceea50000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a990000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae0000000000000000000000000000000000000000000000000039afc19de8c3ba000000000000000000000000000000000000000000000000003625685b77387700000000000000000000000000000000000000000000000000366b101e2d34e40000000000000000000000000000000000000000000000000000000000000002000000000000000000000000933a06c631ed8b5e4f3848c91a1cfc45e5c7eabe5b07cdb0000000000000000000000004c98e9c2439c0d4621c62fee2fed6d042fa8c57000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000039afc19de8c3ba000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a9900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002e2416092f143378750bb29b79ed961ab195cceea5000064420000000000000000000000000000000000000600000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002449fe5b07cdb000000000000000000000000257fcbae4ac6b26a02e4fc5e1a11e4174b5ce39500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000dec876911cbe9428265af0d12132c52ee8642a9900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002e42000000000000000000000000000000000000060000642ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec220000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000648a6a1e850000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22000000000000000000000000353c1f0bc78fbbc245b3c93ef77b1dcc5b77d2a000000000000000000000000000000000000000000000000000366b101e2d34e400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a49f8654220000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0decd1660f990000000000000000000000002ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec220000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    );

    (uint256 error, uint256 balance, uint256 borrowBalance, uint256 exchangeRateMantissa) = ezETHMarket
      .getAccountSnapshot(ionezEthWhale);
    emit log_named_uint("ezETH error: ", error);
    emit log_named_uint("ezETH balance: ", balance);
    emit log_named_uint("ezETH borrowBalance: ", borrowBalance);
    emit log_named_uint("ezETH exchangeRateMantissa: ", exchangeRateMantissa);

    (error, balance, borrowBalance, exchangeRateMantissa) = cbETHMarket.getAccountSnapshot(ionezEthWhale);
    emit log_named_uint("cbETH error: ", error);
    emit log_named_uint("cbETH balance: ", balance);
    emit log_named_uint("cbETH borrowBalance: ", borrowBalance);
    emit log_named_uint("cbETH exchangeRateMantissa: ", exchangeRateMantissa);

    vm.startPrank(ionezEthWhale);
    ezETHMarket.approve(address(swap), type(uint256).max);
    uint256 healthFactor = lens.getHealthFactor(ionezEthWhale, ezETHMarket.comptroller());
    emit log_named_uint("health factor before: ", healthFactor);
    swap.swapCollateral(16237319785333690, ezETHMarket, cbETHMarket, swapTarget, swapData);
    healthFactor = lens.getHealthFactor(ionezEthWhale, ezETHMarket.comptroller());
    emit log_named_uint("health factor after: ", healthFactor);
    vm.stopPrank();

    (error, balance, borrowBalance, exchangeRateMantissa) = ezETHMarket.getAccountSnapshot(ionezEthWhale);
    emit log_named_uint("ezETH error: ", error);
    emit log_named_uint("ezETH balance: ", balance);
    emit log_named_uint("ezETH borrowBalance: ", borrowBalance);
    emit log_named_uint("ezETH exchangeRateMantissa: ", exchangeRateMantissa);

    (error, balance, borrowBalance, exchangeRateMantissa) = cbETHMarket.getAccountSnapshot(ionezEthWhale);
    emit log_named_uint("cbETH error: ", error);
    emit log_named_uint("cbETH balance: ", balance);
    emit log_named_uint("cbETH borrowBalance: ", borrowBalance);
    emit log_named_uint("cbETH exchangeRateMantissa: ", exchangeRateMantissa);
  }
}
