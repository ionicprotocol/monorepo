{
  "address": "0xBbDcA7858ac2417b06636F7BA35e7d9EA39402ea",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "NewPendingOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_acceptOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "_setPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balancerPoolForTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "curveSwapPoolsConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "flywheelRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundingStrategiesConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        }
      ],
      "name": "getBalancerPoolForTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurveSwapPools",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "coins",
              "type": "address[]"
            }
          ],
          "internalType": "struct AddressesProvider.CurveSwapPool[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getFundingStrategy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "contractInterface",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            }
          ],
          "internalType": "struct AddressesProvider.FundingStrategy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getJarvisPools",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "syntheticToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidityPool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct AddressesProvider.JarvisPool[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getRedemptionStrategy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "contractInterface",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            }
          ],
          "internalType": "struct AddressesProvider.RedemptionStrategy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jarvisPoolsConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "syntheticToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidityPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "plugins",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redemptionStrategiesConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "setBalancerPoolForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "coins",
          "type": "address[]"
        }
      ],
      "name": "setCurveSwapPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flywheelRewardsModule",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        }
      ],
      "name": "setFlywheelRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        }
      ],
      "name": "setFundingStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "syntheticToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidityPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        }
      ],
      "name": "setJarvisPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "plugin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        }
      ],
      "name": "setPlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractInterface",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        }
      ],
      "name": "setRedemptionStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6a144c84bcae29307558dbead81343d621098e506e6d841e6c1a32b6546a7e6",
  "receipt": {
    "to": null,
    "from": "0x1155b614971f16758C92c4890eD338C9e3ede6b7",
    "contractAddress": "0xBbDcA7858ac2417b06636F7BA35e7d9EA39402ea",
    "transactionIndex": 1,
    "gasUsed": "1564734",
    "logsBloom": "0x
    "blockHash": "0xfee833f5227f94af8c8bd6d5199bf9bf95d9a1107bd34a39951b5706b8e2d657",
    "transactionHash": "0xb6a144c84bcae29307558dbead81343d621098e506e6d841e6c1a32b6546a7e6",
    "logs": [],
    "blockNumber": 6482464,
    "cumulativeGasUsed": "1608585",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0f216c69ca7d69b5e67c1cffac004e22",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"NewPendingOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_acceptOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"_setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balancerPoolForTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"curveSwapPoolsConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"flywheelRewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundingStrategiesConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"}],\"name\":\"getBalancerPoolForTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurveSwapPools\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"coins\",\"type\":\"address[]\"}],\"internalType\":\"struct AddressesProvider.CurveSwapPool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getFundingStrategy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"internalType\":\"struct AddressesProvider.FundingStrategy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJarvisPools\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"syntheticToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AddressesProvider.JarvisPool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getRedemptionStrategy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"}],\"internalType\":\"struct AddressesProvider.RedemptionStrategy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jarvisPoolsConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"syntheticToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redemptionStrategiesConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setBalancerPoolForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"coins\",\"type\":\"address[]\"}],\"name\":\"setCurveSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flywheelRewardsModule\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"}],\"name\":\"setFlywheelRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"name\":\"setFundingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"syntheticToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"name\":\"setJarvisPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"}],\"name\":\"setPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractInterface\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"}],\"name\":\"setRedemptionStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Veliko Minkov <veliko@midascapital.xyz>\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"_acceptOwner()\":{\"details\":\"Owner function for pending owner to accept role and update owner\"},\"_setPendingOwner(address)\":{\"details\":\"Owner function to begin change of owner. The newPendingOwner must call `_acceptOwner` to finalize the transfer.\",\"params\":{\"newPendingOwner\":\"New pending owner.\"}},\"getAddress(string)\":{\"details\":\"Returns an address by id\",\"returns\":{\"_0\":\"The address\"}},\"initialize(address)\":{\"details\":\"Initializer to set the admin that can set and change contracts addresses\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAddress(string,address)\":{\"details\":\"Sets an address for an id replacing the address saved in the addresses map\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setFlywheelRewards(address,address,string)\":{\"details\":\"sets the address and contract interface ID of the flywheel for the reward token\",\"params\":{\"contractInterface\":\"a string that uniquely identifies the contract's interface\",\"flywheelRewardsModule\":\"the flywheel rewards module address\",\"rewardToken\":\"the reward token address\"}},\"setFundingStrategy(address,address,string,address)\":{\"details\":\"sets the address and contract interface ID of the funding strategy for the asset\",\"params\":{\"asset\":\"the asset address\",\"contractInterface\":\"a string that uniquely identifies the contract's interface\",\"strategy\":\"funding strategy address\"}},\"setJarvisPool(address,address,address,uint256)\":{\"details\":\"configures the Jarvis pool of a Jarvis synthetic token\",\"params\":{\"collateralToken\":\"the collateral token address\",\"expirationTime\":\"the operation expiration time\",\"liquidityPool\":\"the liquidity pool address\",\"syntheticToken\":\"the synthetic token address\"}},\"setPlugin(address,address,string)\":{\"details\":\"sets the address and contract interface ID of the ERC4626 plugin for the asset\",\"params\":{\"asset\":\"the asset address\",\"contractInterface\":\"a string that uniquely identifies the contract's interface\",\"plugin\":\"the ERC4626 plugin address\"}},\"setRedemptionStrategy(address,address,string,address)\":{\"details\":\"sets the address and contract interface ID of the redemption strategy for the asset\",\"params\":{\"asset\":\"the asset address\",\"contractInterface\":\"a string that uniquely identifies the contract's interface\",\"strategy\":\"redemption strategy address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AddressesProvider\",\"version\":1},\"userdoc\":{\"events\":{\"NewOwner(address,address)\":{\"notice\":\"Emitted when pendingOwner is accepted, which means owner is updated\"},\"NewPendingOwner(address,address)\":{\"notice\":\"Emitted when pendingOwner is changed\"}},\"kind\":\"user\",\"methods\":{\"_acceptOwner()\":{\"notice\":\"Accepts transfer of owner rights. msg.sender must be pendingOwner\"},\"_setPendingOwner(address)\":{\"notice\":\"Begins transfer of owner rights. The newPendingOwner must call `_acceptOwner` to finalize the transfer.\"},\"pendingOwner()\":{\"notice\":\"Pending owner of this contract\"}},\"notice\":\"The Addresses Provider serves as a central storage of system internal and external         contract addresses that change between deploys and across chains\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ionic/AddressesProvider.sol\":\"AddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ionic/AddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport { SafeOwnableUpgradeable } from \\\"../ionic/SafeOwnableUpgradeable.sol\\\";\\n\\n/**\\n * @title AddressesProvider\\n * @notice The Addresses Provider serves as a central storage of system internal and external\\n *         contract addresses that change between deploys and across chains\\n * @author Veliko Minkov <veliko@midascapital.xyz>\\n */\\ncontract AddressesProvider is SafeOwnableUpgradeable {\\n  mapping(string => address) private _addresses;\\n  mapping(address => Contract) public plugins;\\n  mapping(address => Contract) public flywheelRewards;\\n  mapping(address => RedemptionStrategy) public redemptionStrategiesConfig;\\n  mapping(address => FundingStrategy) public fundingStrategiesConfig;\\n  JarvisPool[] public jarvisPoolsConfig;\\n  CurveSwapPool[] public curveSwapPoolsConfig;\\n  mapping(address => mapping(address => address)) public balancerPoolForTokens;\\n\\n  /// @dev Initializer to set the admin that can set and change contracts addresses\\n  function initialize(address owner) public initializer {\\n    __SafeOwnable_init(owner);\\n  }\\n\\n  /**\\n   * @dev The contract address and a string that uniquely identifies the contract's interface\\n   */\\n  struct Contract {\\n    address addr;\\n    string contractInterface;\\n  }\\n\\n  struct RedemptionStrategy {\\n    address addr;\\n    string contractInterface;\\n    address outputToken;\\n  }\\n\\n  struct FundingStrategy {\\n    address addr;\\n    string contractInterface;\\n    address inputToken;\\n  }\\n\\n  struct JarvisPool {\\n    address syntheticToken;\\n    address collateralToken;\\n    address liquidityPool;\\n    uint256 expirationTime;\\n  }\\n\\n  struct CurveSwapPool {\\n    address poolAddress;\\n    address[] coins;\\n  }\\n\\n  /**\\n   * @dev sets the address and contract interface ID of the flywheel for the reward token\\n   * @param rewardToken the reward token address\\n   * @param flywheelRewardsModule the flywheel rewards module address\\n   * @param contractInterface a string that uniquely identifies the contract's interface\\n   */\\n  function setFlywheelRewards(\\n    address rewardToken,\\n    address flywheelRewardsModule,\\n    string calldata contractInterface\\n  ) public onlyOwner {\\n    flywheelRewards[rewardToken] = Contract(flywheelRewardsModule, contractInterface);\\n  }\\n\\n  /**\\n   * @dev sets the address and contract interface ID of the ERC4626 plugin for the asset\\n   * @param asset the asset address\\n   * @param plugin the ERC4626 plugin address\\n   * @param contractInterface a string that uniquely identifies the contract's interface\\n   */\\n  function setPlugin(\\n    address asset,\\n    address plugin,\\n    string calldata contractInterface\\n  ) public onlyOwner {\\n    plugins[asset] = Contract(plugin, contractInterface);\\n  }\\n\\n  /**\\n   * @dev sets the address and contract interface ID of the redemption strategy for the asset\\n   * @param asset the asset address\\n   * @param strategy redemption strategy address\\n   * @param contractInterface a string that uniquely identifies the contract's interface\\n   */\\n  function setRedemptionStrategy(\\n    address asset,\\n    address strategy,\\n    string calldata contractInterface,\\n    address outputToken\\n  ) public onlyOwner {\\n    redemptionStrategiesConfig[asset] = RedemptionStrategy(strategy, contractInterface, outputToken);\\n  }\\n\\n  function getRedemptionStrategy(address asset) public view returns (RedemptionStrategy memory) {\\n    return redemptionStrategiesConfig[asset];\\n  }\\n\\n  /**\\n   * @dev sets the address and contract interface ID of the funding strategy for the asset\\n   * @param asset the asset address\\n   * @param strategy funding strategy address\\n   * @param contractInterface a string that uniquely identifies the contract's interface\\n   */\\n  function setFundingStrategy(\\n    address asset,\\n    address strategy,\\n    string calldata contractInterface,\\n    address inputToken\\n  ) public onlyOwner {\\n    fundingStrategiesConfig[asset] = FundingStrategy(strategy, contractInterface, inputToken);\\n  }\\n\\n  function getFundingStrategy(address asset) public view returns (FundingStrategy memory) {\\n    return fundingStrategiesConfig[asset];\\n  }\\n\\n  /**\\n   * @dev configures the Jarvis pool of a Jarvis synthetic token\\n   * @param syntheticToken the synthetic token address\\n   * @param collateralToken the collateral token address\\n   * @param liquidityPool the liquidity pool address\\n   * @param expirationTime the operation expiration time\\n   */\\n  function setJarvisPool(\\n    address syntheticToken,\\n    address collateralToken,\\n    address liquidityPool,\\n    uint256 expirationTime\\n  ) public onlyOwner {\\n    jarvisPoolsConfig.push(JarvisPool(syntheticToken, collateralToken, liquidityPool, expirationTime));\\n  }\\n\\n  function setCurveSwapPool(address poolAddress, address[] calldata coins) public onlyOwner {\\n    curveSwapPoolsConfig.push(CurveSwapPool(poolAddress, coins));\\n  }\\n\\n  /**\\n   * @dev Sets an address for an id replacing the address saved in the addresses map\\n   * @param id The id\\n   * @param newAddress The address to set\\n   */\\n  function setAddress(string calldata id, address newAddress) external onlyOwner {\\n    _addresses[id] = newAddress;\\n  }\\n\\n  /**\\n   * @dev Returns an address by id\\n   * @return The address\\n   */\\n  function getAddress(string calldata id) public view returns (address) {\\n    return _addresses[id];\\n  }\\n\\n  function getCurveSwapPools() public view returns (CurveSwapPool[] memory) {\\n    return curveSwapPoolsConfig;\\n  }\\n\\n  function getJarvisPools() public view returns (JarvisPool[] memory) {\\n    return jarvisPoolsConfig;\\n  }\\n\\n  function setBalancerPoolForTokens(\\n    address inputToken,\\n    address outputToken,\\n    address pool\\n  ) external onlyOwner {\\n    balancerPoolForTokens[inputToken][outputToken] = pool;\\n  }\\n\\n  function getBalancerPoolForTokens(address inputToken, address outputToken) external view returns (address) {\\n    return balancerPoolForTokens[inputToken][outputToken];\\n  }\\n}\\n\",\"keccak256\":\"0xf48e9e8b2150408c1c6b68dd957226c342ba47396da792fdaa0922f539a7e163\",\"license\":\"AGPL-3.0-only\"},\"contracts/ionic/SafeOwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport \\\"openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\\\";\\n\\n/**\\n * @dev Ownable extension that requires a two-step process of setting the pending owner and the owner accepting it.\\n * @notice Existing OwnableUpgradeable contracts cannot be upgraded due to the extra storage variable\\n * that will shift the other.\\n */\\nabstract contract SafeOwnableUpgradeable is OwnableUpgradeable {\\n  /**\\n   * @notice Pending owner of this contract\\n   */\\n  address public pendingOwner;\\n\\n  function __SafeOwnable_init(address owner_) internal onlyInitializing {\\n    __Ownable_init();\\n    _transferOwnership(owner_);\\n  }\\n\\n  struct AddressSlot {\\n    address value;\\n  }\\n\\n  modifier onlyOwnerOrAdmin() {\\n    bool isOwner = owner() == _msgSender();\\n    if (!isOwner) {\\n      address admin = _getProxyAdmin();\\n      bool isAdmin = admin == _msgSender();\\n      require(isAdmin, \\\"Ownable: caller is neither the owner nor the admin\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Emitted when pendingOwner is changed\\n   */\\n  event NewPendingOwner(address oldPendingOwner, address newPendingOwner);\\n\\n  /**\\n   * @notice Emitted when pendingOwner is accepted, which means owner is updated\\n   */\\n  event NewOwner(address oldOwner, address newOwner);\\n\\n  /**\\n   * @notice Begins transfer of owner rights. The newPendingOwner must call `_acceptOwner` to finalize the transfer.\\n   * @dev Owner function to begin change of owner. The newPendingOwner must call `_acceptOwner` to finalize the transfer.\\n   * @param newPendingOwner New pending owner.\\n   */\\n  function _setPendingOwner(address newPendingOwner) public onlyOwner {\\n    // Save current value, if any, for inclusion in log\\n    address oldPendingOwner = pendingOwner;\\n\\n    // Store pendingOwner with value newPendingOwner\\n    pendingOwner = newPendingOwner;\\n\\n    // Emit NewPendingOwner(oldPendingOwner, newPendingOwner)\\n    emit NewPendingOwner(oldPendingOwner, newPendingOwner);\\n  }\\n\\n  /**\\n   * @notice Accepts transfer of owner rights. msg.sender must be pendingOwner\\n   * @dev Owner function for pending owner to accept role and update owner\\n   */\\n  function _acceptOwner() public {\\n    // Check caller is pendingOwner and pendingOwner \\u2260 address(0)\\n    require(msg.sender == pendingOwner, \\\"not the pending owner\\\");\\n\\n    // Save current values for inclusion in log\\n    address oldOwner = owner();\\n    address oldPendingOwner = pendingOwner;\\n\\n    // Store owner with value pendingOwner\\n    _transferOwnership(pendingOwner);\\n\\n    // Clear the pending value\\n    pendingOwner = address(0);\\n\\n    emit NewOwner(oldOwner, pendingOwner);\\n    emit NewPendingOwner(oldPendingOwner, pendingOwner);\\n  }\\n\\n  function renounceOwnership() public override onlyOwner {\\n    // do not remove this overriding fn\\n    revert(\\\"not used anymore\\\");\\n  }\\n\\n  function transferOwnership(address newOwner) public override onlyOwner {\\n    emit NewPendingOwner(pendingOwner, newOwner);\\n    pendingOwner = newOwner;\\n  }\\n\\n  function _getProxyAdmin() internal view returns (address admin) {\\n    bytes32 _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n    AddressSlot storage adminSlot;\\n    assembly {\\n      adminSlot.slot := _ADMIN_SLOT\\n    }\\n    admin = adminSlot.value;\\n  }\\n}\\n\",\"keccak256\":\"0x73f50a022ee86874b63ebd7e418b5948ef2913e32cb80024fe3cd4f17be7f2a5\",\"license\":\"UNLICENSED\"},\"openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x6c2b54ec184943843041ab77f61988b5060f6f03acbfe92cdc125f95f00891da\",\"license\":\"MIT\"},\"openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\"},\"openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611b54806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063959fc097116100f9578063bf40fac111610097578063cf78b30a11610071578063cf78b30a1461044c578063e30c39781461045f578063f2fde38b14610472578063fc4d33f91461048557600080fd5b8063bf40fac114610413578063c4d66de814610426578063ceb4e9431461043957600080fd5b8063a11b73a6116100d3578063a11b73a6146103ba578063a13449d6146103cd578063b40dc803146103ed578063b91975541461040057600080fd5b8063959fc0971461033b578063984d8655146103735780639b2ea4bd146103a757600080fd5b806362772c731161016657806377d792191161014057806377d79219146102a65780637930b9b0146102bb57806381bc3632146103035780638da5cb5b1461031657600080fd5b806362772c73146102785780636e96dfd71461028b578063715018a61461029e57600080fd5b8063316eb395116101a2578063316eb3951461020f5780634172e7f91461023157806344fca697146102525780634b12e6431461026557600080fd5b8063073d0b6c146101c95780631783a521146101de5780632cf3219c146101f1575b600080fd5b6101dc6101d7366004611462565b61048d565b005b6101dc6101ec366004611462565b610560565b6101f9610602565b60405161020691906114d8565b60405180910390f35b61022261021d366004611589565b6106ce565b604051610206939291906115f1565b61024461023f366004611589565b61078c565b604051610206929190611626565b6101dc610260366004611652565b61083b565b610244610273366004611589565b610950565b6101dc61028636600461169d565b61097c565b6101dc610299366004611589565b610a2e565b6101dc610a98565b6102ae610ae0565b6040516102069190611723565b6102ce6102c9366004611795565b610b68565b60405161020694939291906001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6101dc6103113660046117ae565b610bb2565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610206565b61032361034936600461180f565b6001600160a01b039182166000908152606d60209081526040808320938516835292905220541690565b61032361038136600461180f565b606d6020908152600092835260408084209091529082529020546001600160a01b031681565b6101dc6103b5366004611842565b610c5a565b6101dc6103c83660046117ae565b610ca9565b6103e06103db366004611589565b610d48565b60405161020691906118d7565b6102226103fb366004611589565b610e5e565b6101dc61040e3660046118ea565b610e8a565b610323610421366004611924565b610ecf565b6101dc610434366004611589565b610f04565b610323610447366004611795565b611013565b6103e061045a366004611589565b611042565b606554610323906001600160a01b031681565b6101dc610480366004611589565b6110bb565b6101dc61112c565b610495611240565b6040518060600160405280856001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506001600160a01b038481166020938401528881168252606a83526040909120835181546001600160a01b031916921691909117815590820151600182019061052f9082611a03565b5060409190910151600290910180546001600160a01b0319166001600160a01b039092169190911790555050505050565b610568611240565b6040518060600160405280856001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506001600160a01b038481166020938401528881168252606983526040909120835181546001600160a01b031916921691909117815590820151600182019061052f9082611a03565b6060606c805480602002602001604051908101604052809291908181526020016000905b828210156106c55760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106ad57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161068f575b50505050508152505081526020019060010190610626565b50505050905090565b606a60205260009081526040902080546001820180546001600160a01b0390921692916106fa9061197c565b80601f01602080910402602001604051908101604052809291908181526020018280546107269061197c565b80156107735780601f1061074857610100808354040283529160200191610773565b820191906000526020600020905b81548152906001019060200180831161075657829003601f168201915b505050600290930154919250506001600160a01b031683565b606860205260009081526040902080546001820180546001600160a01b0390921692916107b89061197c565b80601f01602080910402602001604051908101604052809291908181526020018280546107e49061197c565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905082565b610843611240565b604080516080810182526001600160a01b0395861681529385166020850190815292851690840190815260608401918252606b8054600181018255600091909152935160049094027fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b4810180549587166001600160a01b031996871617905592517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b584018054918716918616919091179055517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b68301805491909516931692909217909255517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b790910155565b606760205260009081526040902080546001820180546001600160a01b0390921692916107b89061197c565b610984611240565b606c6040518060400160405280856001600160a01b031681526020018484808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939094525050835460018082018655948252602091829020845160029092020180546001600160a01b0319166001600160a01b0390921691909117815583820151805194959194610a269450918501920190611383565b505050505050565b610a36611240565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610aa0611240565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6060606b805480602002602001604051908101604052809291908181526020016000905b828210156106c5576000848152602090819020604080516080810182526004860290920180546001600160a01b0390811684526001808301548216858701526002830154909116928401929092526003015460608301529083529092019101610b04565b606b8181548110610b7857600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039283169450908216929091169084565b610bba611240565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606760209081526040909220845181546001600160a01b0319169216919091178155908301519091506001820190610c519082611a03565b50505050505050565b610c62611240565b8060668484604051610c75929190611ac3565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055505050565b610cb1611240565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606860209081526040909220845181546001600160a01b0319169216919091178155908301519091506001820190610c519082611a03565b610d7e604051806060016040528060006001600160a01b031681526020016060815260200160006001600160a01b031681525090565b6001600160a01b038083166000908152606a60209081526040918290208251606081019093528054909316825260018301805492939291840191610dc19061197c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ded9061197c565b8015610e3a5780601f10610e0f57610100808354040283529160200191610e3a565b820191906000526020600020905b815481529060010190602001808311610e1d57829003601f168201915b5050509183525050600291909101546001600160a01b031660209091015292915050565b606960205260009081526040902080546001820180546001600160a01b0390921692916106fa9061197c565b610e92611240565b6001600160a01b039283166000908152606d6020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600060668383604051610ee3929190611ac3565b908152604051908190036020019020546001600160a01b0316905092915050565b600054610100900460ff1615808015610f245750600054600160ff909116105b80610f3e5750303b158015610f3e575060005460ff166001145b610fa15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ad7565b6000805460ff191660011790558015610fc4576000805461ff0019166101001790555b610fcd8261129c565b801561100f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610a8c565b5050565b606c818154811061102357600080fd5b60009182526020909120600290910201546001600160a01b0316905081565b611078604051806060016040528060006001600160a01b031681526020016060815260200160006001600160a01b031681525090565b6001600160a01b038083166000908152606960209081526040918290208251606081019093528054909316825260018301805492939291840191610dc19061197c565b6110c3611240565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b0316331461117e5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610ad7565b60006111926033546001600160a01b031690565b6065549091506001600160a01b03166111aa816112d7565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610a8c565b6033546001600160a01b0316331461129a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ad7565b565b600054610100900460ff166112c35760405162461bcd60e51b8152600401610ad790611ad3565b6112cb611329565b6112d4816112d7565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113505760405162461bcd60e51b8152600401610ad790611ad3565b61129a600054610100900460ff1661137a5760405162461bcd60e51b8152600401610ad790611ad3565b61129a336112d7565b8280548282559060005260206000209081019282156113d8579160200282015b828111156113d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906113a3565b506113e49291506113e8565b5090565b5b808211156113e457600081556001016113e9565b80356001600160a01b038116811461141457600080fd5b919050565b60008083601f84011261142b57600080fd5b50813567ffffffffffffffff81111561144357600080fd5b60208301915083602082850101111561145b57600080fd5b9250929050565b60008060008060006080868803121561147a57600080fd5b611483866113fd565b9450611491602087016113fd565b9350604086013567ffffffffffffffff8111156114ad57600080fd5b6114b988828901611419565b90945092506114cc9050606087016113fd565b90509295509295909350565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b8481101561157a57898403603f19018652825180516001600160a01b039081168652908901518986018990528051898701819052908a0191849160608801905b8084101561156457845183168252938c019360019390930192908c0190611542565b50988b0198965050509288019250600101611502565b50919998505050505050505050565b60006020828403121561159b57600080fd5b6115a4826113fd565b9392505050565b6000815180845260005b818110156115d1576020818501810151868301820152016115b5565b506000602082860101526020601f19601f83011685010191505092915050565b600060018060a01b0380861683526060602084015261161360608401866115ab565b9150808416604084015250949350505050565b6001600160a01b038316815260406020820181905260009061164a908301846115ab565b949350505050565b6000806000806080858703121561166857600080fd5b611671856113fd565b935061167f602086016113fd565b925061168d604086016113fd565b9396929550929360600135925050565b6000806000604084860312156116b257600080fd5b6116bb846113fd565b9250602084013567ffffffffffffffff808211156116d857600080fd5b818601915086601f8301126116ec57600080fd5b8135818111156116fb57600080fd5b8760208260051b850101111561171057600080fd5b6020830194508093505050509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561178857815180516001600160a01b039081168652878201518116888701528682015116868601526060908101519085015260809093019290850190600101611740565b5091979650505050505050565b6000602082840312156117a757600080fd5b5035919050565b600080600080606085870312156117c457600080fd5b6117cd856113fd565b93506117db602086016113fd565b9250604085013567ffffffffffffffff8111156117f757600080fd5b61180387828801611419565b95989497509550505050565b6000806040838503121561182257600080fd5b61182b836113fd565b9150611839602084016113fd565b90509250929050565b60008060006040848603121561185757600080fd5b833567ffffffffffffffff81111561186e57600080fd5b61187a86828701611419565b909450925061188d9050602085016113fd565b90509250925092565b600060018060a01b038083511684526020830151606060208601526118be60608601826115ab565b9050816040850151166040860152809250505092915050565b6020815260006115a46020830184611896565b6000806000606084860312156118ff57600080fd5b611908846113fd565b9250611916602085016113fd565b915061188d604085016113fd565b6000806020838503121561193757600080fd5b823567ffffffffffffffff81111561194e57600080fd5b61195a85828601611419565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061199057607f821691505b6020821081036119b057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156119fe576000816000526020600020601f850160051c810160208610156119df5750805b601f850160051c820191505b81811015610a26578281556001016119eb565b505050565b815167ffffffffffffffff811115611a1d57611a1d611966565b611a3181611a2b845461197c565b846119b6565b602080601f831160018114611a665760008415611a4e5750858301515b600019600386901b1c1916600185901b178555610a26565b600085815260208120601f198616915b82811015611a9557888601518255948401946001909101908401611a76565b5085821015611ab35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8183823760009101908152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220ab57bfc01d77f6b410512112473141bf372b82a8c1c0e21021005108ee72b18964736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063959fc097116100f9578063bf40fac111610097578063cf78b30a11610071578063cf78b30a1461044c578063e30c39781461045f578063f2fde38b14610472578063fc4d33f91461048557600080fd5b8063bf40fac114610413578063c4d66de814610426578063ceb4e9431461043957600080fd5b8063a11b73a6116100d3578063a11b73a6146103ba578063a13449d6146103cd578063b40dc803146103ed578063b91975541461040057600080fd5b8063959fc0971461033b578063984d8655146103735780639b2ea4bd146103a757600080fd5b806362772c731161016657806377d792191161014057806377d79219146102a65780637930b9b0146102bb57806381bc3632146103035780638da5cb5b1461031657600080fd5b806362772c73146102785780636e96dfd71461028b578063715018a61461029e57600080fd5b8063316eb395116101a2578063316eb3951461020f5780634172e7f91461023157806344fca697146102525780634b12e6431461026557600080fd5b8063073d0b6c146101c95780631783a521146101de5780632cf3219c146101f1575b600080fd5b6101dc6101d7366004611462565b61048d565b005b6101dc6101ec366004611462565b610560565b6101f9610602565b60405161020691906114d8565b60405180910390f35b61022261021d366004611589565b6106ce565b604051610206939291906115f1565b61024461023f366004611589565b61078c565b604051610206929190611626565b6101dc610260366004611652565b61083b565b610244610273366004611589565b610950565b6101dc61028636600461169d565b61097c565b6101dc610299366004611589565b610a2e565b6101dc610a98565b6102ae610ae0565b6040516102069190611723565b6102ce6102c9366004611795565b610b68565b60405161020694939291906001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6101dc6103113660046117ae565b610bb2565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610206565b61032361034936600461180f565b6001600160a01b039182166000908152606d60209081526040808320938516835292905220541690565b61032361038136600461180f565b606d6020908152600092835260408084209091529082529020546001600160a01b031681565b6101dc6103b5366004611842565b610c5a565b6101dc6103c83660046117ae565b610ca9565b6103e06103db366004611589565b610d48565b60405161020691906118d7565b6102226103fb366004611589565b610e5e565b6101dc61040e3660046118ea565b610e8a565b610323610421366004611924565b610ecf565b6101dc610434366004611589565b610f04565b610323610447366004611795565b611013565b6103e061045a366004611589565b611042565b606554610323906001600160a01b031681565b6101dc610480366004611589565b6110bb565b6101dc61112c565b610495611240565b6040518060600160405280856001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506001600160a01b038481166020938401528881168252606a83526040909120835181546001600160a01b031916921691909117815590820151600182019061052f9082611a03565b5060409190910151600290910180546001600160a01b0319166001600160a01b039092169190911790555050505050565b610568611240565b6040518060600160405280856001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506001600160a01b038481166020938401528881168252606983526040909120835181546001600160a01b031916921691909117815590820151600182019061052f9082611a03565b6060606c805480602002602001604051908101604052809291908181526020016000905b828210156106c55760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106ad57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161068f575b50505050508152505081526020019060010190610626565b50505050905090565b606a60205260009081526040902080546001820180546001600160a01b0390921692916106fa9061197c565b80601f01602080910402602001604051908101604052809291908181526020018280546107269061197c565b80156107735780601f1061074857610100808354040283529160200191610773565b820191906000526020600020905b81548152906001019060200180831161075657829003601f168201915b505050600290930154919250506001600160a01b031683565b606860205260009081526040902080546001820180546001600160a01b0390921692916107b89061197c565b80601f01602080910402602001604051908101604052809291908181526020018280546107e49061197c565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905082565b610843611240565b604080516080810182526001600160a01b0395861681529385166020850190815292851690840190815260608401918252606b8054600181018255600091909152935160049094027fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b4810180549587166001600160a01b031996871617905592517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b584018054918716918616919091179055517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b68301805491909516931692909217909255517fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b790910155565b606760205260009081526040902080546001820180546001600160a01b0390921692916107b89061197c565b610984611240565b606c6040518060400160405280856001600160a01b031681526020018484808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939094525050835460018082018655948252602091829020845160029092020180546001600160a01b0319166001600160a01b0390921691909117815583820151805194959194610a269450918501920190611383565b505050505050565b610a36611240565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91015b60405180910390a15050565b610aa0611240565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b6060606b805480602002602001604051908101604052809291908181526020016000905b828210156106c5576000848152602090819020604080516080810182526004860290920180546001600160a01b0390811684526001808301548216858701526002830154909116928401929092526003015460608301529083529092019101610b04565b606b8181548110610b7857600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039283169450908216929091169084565b610bba611240565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606760209081526040909220845181546001600160a01b0319169216919091178155908301519091506001820190610c519082611a03565b50505050505050565b610c62611240565b8060668484604051610c75929190611ac3565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055505050565b610cb1611240565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606860209081526040909220845181546001600160a01b0319169216919091178155908301519091506001820190610c519082611a03565b610d7e604051806060016040528060006001600160a01b031681526020016060815260200160006001600160a01b031681525090565b6001600160a01b038083166000908152606a60209081526040918290208251606081019093528054909316825260018301805492939291840191610dc19061197c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ded9061197c565b8015610e3a5780601f10610e0f57610100808354040283529160200191610e3a565b820191906000526020600020905b815481529060010190602001808311610e1d57829003601f168201915b5050509183525050600291909101546001600160a01b031660209091015292915050565b606960205260009081526040902080546001820180546001600160a01b0390921692916106fa9061197c565b610e92611240565b6001600160a01b039283166000908152606d6020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600060668383604051610ee3929190611ac3565b908152604051908190036020019020546001600160a01b0316905092915050565b600054610100900460ff1615808015610f245750600054600160ff909116105b80610f3e5750303b158015610f3e575060005460ff166001145b610fa15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ad7565b6000805460ff191660011790558015610fc4576000805461ff0019166101001790555b610fcd8261129c565b801561100f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610a8c565b5050565b606c818154811061102357600080fd5b60009182526020909120600290910201546001600160a01b0316905081565b611078604051806060016040528060006001600160a01b031681526020016060815260200160006001600160a01b031681525090565b6001600160a01b038083166000908152606960209081526040918290208251606081019093528054909316825260018301805492939291840191610dc19061197c565b6110c3611240565b606554604080516001600160a01b03928316815291831660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b0316331461117e5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610ad7565b60006111926033546001600160a01b031690565b6065549091506001600160a01b03166111aa816112d7565b606580546001600160a01b0319169055604080516001600160a01b0384168152600060208201527f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364910160405180910390a1606554604080516001600160a01b03808516825290921660208301527fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9101610a8c565b6033546001600160a01b0316331461129a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ad7565b565b600054610100900460ff166112c35760405162461bcd60e51b8152600401610ad790611ad3565b6112cb611329565b6112d4816112d7565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113505760405162461bcd60e51b8152600401610ad790611ad3565b61129a600054610100900460ff1661137a5760405162461bcd60e51b8152600401610ad790611ad3565b61129a336112d7565b8280548282559060005260206000209081019282156113d8579160200282015b828111156113d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906113a3565b506113e49291506113e8565b5090565b5b808211156113e457600081556001016113e9565b80356001600160a01b038116811461141457600080fd5b919050565b60008083601f84011261142b57600080fd5b50813567ffffffffffffffff81111561144357600080fd5b60208301915083602082850101111561145b57600080fd5b9250929050565b60008060008060006080868803121561147a57600080fd5b611483866113fd565b9450611491602087016113fd565b9350604086013567ffffffffffffffff8111156114ad57600080fd5b6114b988828901611419565b90945092506114cc9050606087016113fd565b90509295509295909350565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b8481101561157a57898403603f19018652825180516001600160a01b039081168652908901518986018990528051898701819052908a0191849160608801905b8084101561156457845183168252938c019360019390930192908c0190611542565b50988b0198965050509288019250600101611502565b50919998505050505050505050565b60006020828403121561159b57600080fd5b6115a4826113fd565b9392505050565b6000815180845260005b818110156115d1576020818501810151868301820152016115b5565b506000602082860101526020601f19601f83011685010191505092915050565b600060018060a01b0380861683526060602084015261161360608401866115ab565b9150808416604084015250949350505050565b6001600160a01b038316815260406020820181905260009061164a908301846115ab565b949350505050565b6000806000806080858703121561166857600080fd5b611671856113fd565b935061167f602086016113fd565b925061168d604086016113fd565b9396929550929360600135925050565b6000806000604084860312156116b257600080fd5b6116bb846113fd565b9250602084013567ffffffffffffffff808211156116d857600080fd5b818601915086601f8301126116ec57600080fd5b8135818111156116fb57600080fd5b8760208260051b850101111561171057600080fd5b6020830194508093505050509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561178857815180516001600160a01b039081168652878201518116888701528682015116868601526060908101519085015260809093019290850190600101611740565b5091979650505050505050565b6000602082840312156117a757600080fd5b5035919050565b600080600080606085870312156117c457600080fd5b6117cd856113fd565b93506117db602086016113fd565b9250604085013567ffffffffffffffff8111156117f757600080fd5b61180387828801611419565b95989497509550505050565b6000806040838503121561182257600080fd5b61182b836113fd565b9150611839602084016113fd565b90509250929050565b60008060006040848603121561185757600080fd5b833567ffffffffffffffff81111561186e57600080fd5b61187a86828701611419565b909450925061188d9050602085016113fd565b90509250925092565b600060018060a01b038083511684526020830151606060208601526118be60608601826115ab565b9050816040850151166040860152809250505092915050565b6020815260006115a46020830184611896565b6000806000606084860312156118ff57600080fd5b611908846113fd565b9250611916602085016113fd565b915061188d604085016113fd565b6000806020838503121561193757600080fd5b823567ffffffffffffffff81111561194e57600080fd5b61195a85828601611419565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061199057607f821691505b6020821081036119b057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156119fe576000816000526020600020601f850160051c810160208610156119df5750805b601f850160051c820191505b81811015610a26578281556001016119eb565b505050565b815167ffffffffffffffff811115611a1d57611a1d611966565b611a3181611a2b845461197c565b846119b6565b602080601f831160018114611a665760008415611a4e5750858301515b600019600386901b1c1916600185901b178555610a26565b600085815260208120601f198616915b82811015611a9557888601518255948401946001909101908401611a76565b5085821015611ab35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8183823760009101908152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220ab57bfc01d77f6b410512112473141bf372b82a8c1c0e21021005108ee72b18964736f6c63430008160033",
  "devdoc": {
    "author": "Veliko Minkov <veliko@midascapital.xyz>",
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "_acceptOwner()": {
        "details": "Owner function for pending owner to accept role and update owner"
      },
      "_setPendingOwner(address)": {
        "details": "Owner function to begin change of owner. The newPendingOwner must call `_acceptOwner` to finalize the transfer.",
        "params": {
          "newPendingOwner": "New pending owner."
        }
      },
      "getAddress(string)": {
        "details": "Returns an address by id",
        "returns": {
          "_0": "The address"
        }
      },
      "initialize(address)": {
        "details": "Initializer to set the admin that can set and change contracts addresses"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAddress(string,address)": {
        "details": "Sets an address for an id replacing the address saved in the addresses map",
        "params": {
          "id": "The id",
          "newAddress": "The address to set"
        }
      },
      "setFlywheelRewards(address,address,string)": {
        "details": "sets the address and contract interface ID of the flywheel for the reward token",
        "params": {
          "contractInterface": "a string that uniquely identifies the contract's interface",
          "flywheelRewardsModule": "the flywheel rewards module address",
          "rewardToken": "the reward token address"
        }
      },
      "setFundingStrategy(address,address,string,address)": {
        "details": "sets the address and contract interface ID of the funding strategy for the asset",
        "params": {
          "asset": "the asset address",
          "contractInterface": "a string that uniquely identifies the contract's interface",
          "strategy": "funding strategy address"
        }
      },
      "setJarvisPool(address,address,address,uint256)": {
        "details": "configures the Jarvis pool of a Jarvis synthetic token",
        "params": {
          "collateralToken": "the collateral token address",
          "expirationTime": "the operation expiration time",
          "liquidityPool": "the liquidity pool address",
          "syntheticToken": "the synthetic token address"
        }
      },
      "setPlugin(address,address,string)": {
        "details": "sets the address and contract interface ID of the ERC4626 plugin for the asset",
        "params": {
          "asset": "the asset address",
          "contractInterface": "a string that uniquely identifies the contract's interface",
          "plugin": "the ERC4626 plugin address"
        }
      },
      "setRedemptionStrategy(address,address,string,address)": {
        "details": "sets the address and contract interface ID of the redemption strategy for the asset",
        "params": {
          "asset": "the asset address",
          "contractInterface": "a string that uniquely identifies the contract's interface",
          "strategy": "redemption strategy address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "AddressesProvider",
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewOwner(address,address)": {
        "notice": "Emitted when pendingOwner is accepted, which means owner is updated"
      },
      "NewPendingOwner(address,address)": {
        "notice": "Emitted when pendingOwner is changed"
      }
    },
    "kind": "user",
    "methods": {
      "_acceptOwner()": {
        "notice": "Accepts transfer of owner rights. msg.sender must be pendingOwner"
      },
      "_setPendingOwner(address)": {
        "notice": "Begins transfer of owner rights. The newPendingOwner must call `_acceptOwner` to finalize the transfer."
      },
      "pendingOwner()": {
        "notice": "Pending owner of this contract"
      }
    },
    "notice": "The Addresses Provider serves as a central storage of system internal and external         contract addresses that change between deploys and across chains",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 176201,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 176204,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 178552,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 175825,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 175945,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 47957,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 45552,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "_addresses",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 45557,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "plugins",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_struct(Contract)45605_storage)"
      },
      {
        "astId": 45562,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "flywheelRewards",
        "offset": 0,
        "slot": "104",
        "type": "t_mapping(t_address,t_struct(Contract)45605_storage)"
      },
      {
        "astId": 45567,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "redemptionStrategiesConfig",
        "offset": 0,
        "slot": "105",
        "type": "t_mapping(t_address,t_struct(RedemptionStrategy)45612_storage)"
      },
      {
        "astId": 45572,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "fundingStrategiesConfig",
        "offset": 0,
        "slot": "106",
        "type": "t_mapping(t_address,t_struct(FundingStrategy)45619_storage)"
      },
      {
        "astId": 45576,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "jarvisPoolsConfig",
        "offset": 0,
        "slot": "107",
        "type": "t_array(t_struct(JarvisPool)45628_storage)dyn_storage"
      },
      {
        "astId": 45580,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "curveSwapPoolsConfig",
        "offset": 0,
        "slot": "108",
        "type": "t_array(t_struct(CurveSwapPool)45634_storage)dyn_storage"
      },
      {
        "astId": 45586,
        "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
        "label": "balancerPoolForTokens",
        "offset": 0,
        "slot": "109",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(CurveSwapPool)45634_storage)dyn_storage": {
        "base": "t_struct(CurveSwapPool)45634_storage",
        "encoding": "dynamic_array",
        "label": "struct AddressesProvider.CurveSwapPool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(JarvisPool)45628_storage)dyn_storage": {
        "base": "t_struct(JarvisPool)45628_storage",
        "encoding": "dynamic_array",
        "label": "struct AddressesProvider.JarvisPool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_address,t_struct(Contract)45605_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddressesProvider.Contract)",
        "numberOfBytes": "32",
        "value": "t_struct(Contract)45605_storage"
      },
      "t_mapping(t_address,t_struct(FundingStrategy)45619_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddressesProvider.FundingStrategy)",
        "numberOfBytes": "32",
        "value": "t_struct(FundingStrategy)45619_storage"
      },
      "t_mapping(t_address,t_struct(RedemptionStrategy)45612_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AddressesProvider.RedemptionStrategy)",
        "numberOfBytes": "32",
        "value": "t_struct(RedemptionStrategy)45612_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Contract)45605_storage": {
        "encoding": "inplace",
        "label": "struct AddressesProvider.Contract",
        "members": [
          {
            "astId": 45602,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 45604,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "contractInterface",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(CurveSwapPool)45634_storage": {
        "encoding": "inplace",
        "label": "struct AddressesProvider.CurveSwapPool",
        "members": [
          {
            "astId": 45630,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "poolAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 45633,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "coins",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(FundingStrategy)45619_storage": {
        "encoding": "inplace",
        "label": "struct AddressesProvider.FundingStrategy",
        "members": [
          {
            "astId": 45614,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 45616,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "contractInterface",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 45618,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "inputToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(JarvisPool)45628_storage": {
        "encoding": "inplace",
        "label": "struct AddressesProvider.JarvisPool",
        "members": [
          {
            "astId": 45621,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "syntheticToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 45623,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "collateralToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 45625,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "liquidityPool",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 45627,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "expirationTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RedemptionStrategy)45612_storage": {
        "encoding": "inplace",
        "label": "struct AddressesProvider.RedemptionStrategy",
        "members": [
          {
            "astId": 45607,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 45609,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "contractInterface",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 45611,
            "contract": "contracts/ionic/AddressesProvider.sol:AddressesProvider",
            "label": "outputToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}